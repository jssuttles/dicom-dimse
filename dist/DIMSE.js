(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("DIMSE", [], factory);
	else if(typeof exports === 'object')
		exports["DIMSE"] = factory();
	else
		root["DIMSE"] = factory();
})(global, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/lodash/lodash.js":
/*!****************************************!*\
  !*** ../node_modules/lodash/lodash.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.10';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Gets the value at `key`, unless `key` is "__proto__".
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function safeGet(object, key) {
    return key == '__proto__'
      ? undefined
      : object[key];
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });

        return result;
      }

      if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });

        return result;
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array == null ? 0 : array.length,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrim, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimEnd, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "../node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/webpack/buildin/module.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/module.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./CSocket.js":
/*!********************!*\
  !*** ./CSocket.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ "util");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ "events");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ "./constants.js");
/* harmony import */ var _PDU_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PDU.js */ "./PDU.js");
/* harmony import */ var _RWStream_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RWStream.js */ "./RWStream.js");
/* harmony import */ var _Message_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Message.js */ "./Message.js");







function time () {
  return Math.floor(Date.now() / 1000);
}

function getRandomInt (min, max) {
  return Math.floor(Math.random() * (max - min)) + min;
}

const Envelope = function (command, dataset) {
  events__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"].call(this);
  this.command = command;
  this.dataset = dataset;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(Envelope, events__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]);

const CSocket = function (socket, options) {
  events__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"].call(this);
  this.socket = socket;
  this.negotiatedContexts = {};
  this.receiving = null;
  this.receiveLength = null;
  this.minRecv = null;
  this.lastReceived = null;
  this.presentationContexts = [];
  this.associated = false;
  this.pendingPDVs = null;
  this.connected = false;
  this.started = null;
  this.intervalId = null;
  this.lastCommand = null;
  this.lastSent = null;
  this.messages = {};
  this.messageIdCounter = 0;
  this.callingAe = null;
  this.calledAe = null;
  this.id = getRandomInt(1000, 9999);
  this.options = options;

  const o = this;

  this.socket.on('connect', function () {
    console.info('Connect');
    o.ready();
  });

  this.socket.on('data', function (data) {
    o.received(data);
  });

  this.socket.on('error', function (socketError) {
    console.error('There was an error with DIMSE connection socket.');
    console.error(socketError.stack);
    console.trace();

    o.emit('error', new Error('server-internal-error', socketError.message));
  });

  this.socket.on('timeout', function (socketError) {
    console.error('The connection timed out. The server is not responding.');
    console.error(socketError.stack);
    console.trace();

    o.emit('error', new Error('server-connection-error', socketError.message));
  });

  this.socket.on('close', function () {
    if (o.intervalId) {
      clearInterval(o.intervalId);
    }

    o.connected = false;
    console.info('Connection closed');
    o.emit('close');
  });

  this.on('released', function () {
    this.released();
  });

  this.on('aborted', function (pdu) {
    console.warn(`Association aborted with reason ${pdu.reason}`);
    this.released();
  });

  this.on('message', function (pdvs) {
    this.receivedMessage(pdvs);
  });
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(CSocket, events__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]);

CSocket.prototype.setCallingAE = function (ae) {
  this.callingAe = ae;
};

CSocket.prototype.setCalledAe = function (ae) {
  this.calledAe = ae;
};

CSocket.prototype.associate = function () {
  const associateRQ = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["AssociateRQ"]();

  associateRQ.setCalledAETitle(this.calledAe);
  associateRQ.setCallingAETitle(this.callingAe);
  associateRQ.setApplicationContextItem(new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["ApplicationContextItem"]());

  const contextItems = [];

  this.presentationContexts.forEach(function (context) {
    let contextItem = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["PresentationContextItem"](),
      syntaxes = [];

    context.transferSyntaxes.forEach(function (transferSyntax) {
      const transfer = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["TransferSyntaxItem"]();

      transfer.setTransferSyntaxName(transferSyntax);
      syntaxes.push(transfer);
    });
    contextItem.setTransferSyntaxesItems(syntaxes);
    contextItem.setPresentationContextID(context.id);

    const abstractItem = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["AbstractSyntaxItem"]();

    abstractItem.setAbstractSyntaxName(context.abstractSyntax);
    contextItem.setAbstractSyntaxItem(abstractItem);
    contextItems.push(contextItem);
  });
  associateRQ.setPresentationContextItems(contextItems);

  let maxLengthItem = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["MaximumLengthItem"](),
    classUIDItem = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["ImplementationClassUIDItem"](),
    versionItem = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["ImplementationVersionNameItem"]();

  classUIDItem.setImplementationClassUID(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].IMPLEM_UID);
  versionItem.setImplementationVersionName(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].IMPLEM_VERSION);
  const packageSize = this.options.maxPackageSize ? this.options.maxPackageSize : _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DEFAULT_MAX_PACKAGE_SIZE;

  maxLengthItem.setMaximumLengthReceived(packageSize);

  const userInfo = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["UserInformationItem"]();

  userInfo.setUserDataItems([maxLengthItem, classUIDItem, versionItem]);

  associateRQ.setUserInformationItem(userInfo);

  this.send(associateRQ);
};

CSocket.prototype.getContext = function (id) {
  for (const k in this.presentationContexts) {
    const ctx = this.presentationContexts[k];

    if (id === ctx.id) {
      return ctx;
    }
  }

  return null;
};

CSocket.prototype.getSyntax = function (contextId) {
  if (!this.negotiatedContexts[contextId]) {
    return null;
  }

  return this.negotiatedContexts[contextId].transferSyntax;
};

CSocket.prototype.getContextByUID = function (uid) {
  for (const k in this.negotiatedContexts) {
    const ctx = this.negotiatedContexts[k];

    if (ctx.abstractSyntax === uid) {
      return ctx;
    }
  }

  return null;
};

CSocket.prototype.getContextId = function (contextId) {
  if (!this.negotiatedContexts[contextId]) {
    return null;
  }

  return this.negotiatedContexts[contextId].id;
};

CSocket.prototype.setPresentationContexts = function (uids) {
  let contexts = [],
    id = 0;

  uids.forEach(function (uid) {
    id++;
    if (typeof uid === 'string') {
      contexts.push({
        id,
        abstractSyntax: uid,
        transferSyntaxes: [_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].IMPLICIT_LITTLE_ENDIAN, _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].EXPLICIT_LITTLE_ENDIAN, _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].EXPLICIT_BIG_ENDIAN]
      });
    } else {
      contexts.push({
        id,
        abstractSyntax: uid.context,
        transferSyntaxes: uid.syntaxes
      });
    }
  });
  this.presentationContexts = contexts;
};

CSocket.prototype.newMessageId = function () {
  return (++this.messageIdCounter) % 65536;
};

CSocket.prototype.resetReceive = function () {
  this.receiving = this.receiveLength = null;
};

CSocket.prototype.send = function (pdu, afterCbk) {
  // Console.log('SEND PDU-TYPE: ', pdu.type);
  const toSend = pdu.buffer();
  // Console.log('send buffer', toSend.toString('hex'));

  return this.socket.write(toSend, afterCbk ? afterCbk : null);
};

CSocket.prototype.release = function () {
  const releaseRQ = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["ReleaseRQ"]();

  this.send(releaseRQ);
};

CSocket.prototype.released = function () {
  this.socket.end();
};

CSocket.prototype.ready = function () {
  console.info('Connection established');
  this.connected = true;
  this.started = time();

  const o = this;

  if (this.options.idle) {
    this.intervalId = setInterval(function () {
      o.checkIdle();
    }, 3000);
  }
};

CSocket.prototype.checkIdle = function () {
  let current = time(),
    idl = this.options.idle;

  if (!this.lastReceived && (current - this.started >= idl)) {
    this.idleClose();
  } else if (this.lastReceived && (current - this.lastReceived >= idl)) {
    this.idleClose();
  }
};

CSocket.prototype.idleClose = function () {
  console.info('Exceed idle time, closing connection');
  this.release();
};

CSocket.prototype.received = function (data) {
  do {
    data = this.process(data);
  } while (data !== null);
  this.lastReceived = time();
};

CSocket.prototype.process = function (data) {
  if (this.receiving === null) {
    if (this.minRecv) {
      data = Buffer.concat([this.minRecv, data], this.minRecv.length + data.length);
      this.minRecv = null;
    }

    if (data.length < 6) {
      this.minRecv = data;

      return null;
    }

    const stream = new _RWStream_js__WEBPACK_IMPORTED_MODULE_4__["ReadStream"](data);
    const type = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].TYPE_UINT8);

    stream.increment(1);
    let len = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].TYPE_UINT32),
      cmp = data.length - 6;

    if (len > cmp) {
      this.receiving = data;
      this.receiveLength = len;
    } else {
      let process = data;
      let remaining = null;

      if (len < cmp) {
        process = data.slice(0, len + 6);
        remaining = data.slice(len + 6, cmp + 6);
      }

      this.resetReceive();
      this.interpret(new _RWStream_js__WEBPACK_IMPORTED_MODULE_4__["ReadStream"](process), this);
      if (remaining) {
        return remaining;
      }
    }
  } else {
    console.info('Data received');
    let newData = Buffer.concat([this.receiving, data], this.receiving.length + data.length),
      pduLength = newData.length - 6;

    if (pduLength < this.receiveLength) {
      this.receiving = newData;
    } else {
      let remaining = null;

      if (pduLength > this.receiveLength) {
        remaining = newData.slice(this.receiveLength + 6, pduLength + 6);
        newData = newData.slice(0, this.receiveLength + 6);
      }

      this.resetReceive();
      this.interpret(new _RWStream_js__WEBPACK_IMPORTED_MODULE_4__["ReadStream"](newData));
      if (remaining) {
        return remaining;
      }
    }
  }

  return null;
};

CSocket.prototype.interpret = function (stream) {
  let pdatas = [],
    size = stream.size(),
    o = this;

  while (stream.offset < size) {
    const pdu = _PDU_js__WEBPACK_IMPORTED_MODULE_3__["PDU"].createByStream(stream);
    // Console.log("Received PDU-TYPE " + PDU.typeToString(pdu.type));

    if (pdu.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].ITEM_TYPE_PDU_ASSOCIATE_AC)) {
      pdu.presentationContextItems.forEach(function (ctx) {
        const requested = o.getContext(ctx.presentationContextID);

        if (!requested) {
          throw 'Accepted presentation context not found';
        }

        o.negotiatedContexts[ctx.presentationContextID] = {
          id: ctx.presentationContextID,
          transferSyntax: ctx.transferSyntaxesItems[0].transferSyntaxName,
          abstractSyntax: requested.abstractSyntax
        };
      });

      // Console.log('Accepted');
      this.associated = true;
      this.emit('associated', pdu);
    } else if (pdu.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].ITEM_TYPE_PDU_ASSOCIATE_RQ)) {
      const accepd = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["AssociateAC"]();

      pdu.presentationContextItems.forEach(function (ctx) {

      });
    } else if (pdu.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].ITEM_TYPE_PDU_RELEASE_RP)) {
      // Console.log('Released');
      this.associated = false;
      this.emit('released');
    } else if (pdu.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].ITEM_TYPE_PDU_AABORT)) {
      // Console.log('Aborted');
      this.emit('aborted', pdu);
    } else if (pdu.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].ITEM_TYPE_PDU_PDATA)) {
      pdatas.push(pdu);
    }
  }

  if (pdatas) {
    let pdvs = this.pendingPDVs ? this.pendingPDVs : [];

    pdatas.forEach(function (pdata) {
      pdvs = pdvs.concat(pdata.presentationDataValueItems);
    });
    this.pendingPDVs = null;
    let i = 0,
      count = pdvs.length;

    while (i < count) {
      if (!pdvs[i].isLast) {
        let j = i + 1;

        while (j < count) {
          pdvs[i].messageStream.concat(pdvs[j].messageStream);
          if (pdvs[j++].isLast) {
            pdvs[i].isLast = true;
            break;
          }
        }

        if (pdvs[i].isLast) {
          this.emit('message', pdvs[i]);
        } else {
          this.pendingPDVs = [pdvs[i]];
        }

        i = j;
      } else {
        this.emit('message', pdvs[i++]);
      }
    }
  }
};

CSocket.prototype.receivedMessage = function (pdv) {
  const syntax = this.getSyntax(pdv.contextId);
  const msg = _Message_js__WEBPACK_IMPORTED_MODULE_5__["DicomMessage"].read(pdv.messageStream, pdv.type, syntax, this.options.vr);

  if (msg.isCommand()) {
    this.lastCommand = msg;

    if (msg.isResponse()) {
      const replyId = msg.respondedTo();
      const listener = this.messages[replyId].listener;

      if (msg.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_GET_RSP) || msg.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_MOVE_RSP)) {
        // Console.log('remaining', msg.getNumOfRemainingSubOperations(), msg.getNumOfCompletedSubOperations());
      }

      if (msg.failure()) {
        console.info('message failed with status ', msg.getStatus().toString(16));
      }

      listener.emit('response', msg);
      if (msg.isFinal()) {
        if (listener) {
          listener.emit('end', msg);

          if (!msg.haveData()) {
            delete this.messages[replyId];
          }
        }

        if (msg.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_GET_RSP)) {
          if (!msg.getNumOfRemainingSubOperations()) {
            if (this.lastGets && this.lastGets.length > 0) {
              this.lastGets.shift();
            }
          }
        }
      }
    } else {

      /* If (msg.is(0x01)) {
        console.log('ae title ', msg.getValue(0x00001031))
      }*/
    }

  } else {
    if (!this.lastCommand) {
      throw 'Only dataset?';
    } else if (!this.lastCommand.haveData()) {
      throw 'Last command didn\'t indicate presence of data';
    }

    if (this.lastCommand.isResponse()) {
      const replyId = this.lastCommand.respondedTo();

      if (this.messages[replyId].listener) {
        const flag = Boolean(this.lastCommand.failure());

        this.messages[replyId].listener.emit('result', msg, flag);

        if (this.lastCommand.failure()) {
          delete this.messages[replyId];
        }
      }
    } else if (this.lastCommand.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_STORE_RQ)) {
      let moveMessageId = this.lastCommand.getMoveMessageId(),
        useId = moveMessageId;

      if (!moveMessageId) {
        // !! Going to deprecate now
        // Kinda hacky but we know this c-store is came from a c-get
        if (this.lastGets.length > 0) {
          useId = this.lastGets[0];
        } else {
          throw 'Where does this c-store came from?';
        }
      } else{
        console.info('move ', moveMessageId);
      }

      // This.storeResponse(useId, msg);
    }
  }
};

CSocket.prototype.wrapToPData = function (message, context) {
  const useContext = message.contextUID ? message.contextUID : context;
  const ctx = this.getContextByUID(useContext);

  let pdata = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["PDataTF"](),
    pdv = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["PresentationDataValueItem"](ctx.id);

  pdv.setMessage(message);
  pdata.setPresentationDataValueItems([pdv]);

  return pdata;
};

CSocket.prototype.sendMessage = function (context, command, dataset) {
  let nContext = this.getContextByUID(context),
    syntax = nContext.transferSyntax,
    cid = nContext.id,
    messageId = this.newMessageId(),
    msgData = {};

  msgData.listener = new Envelope(command);

  const o = this;

  msgData.listener.on('cancel', function () {
    let cancelMessage = null;

    if (this.command.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_FIND_RQ) || this.command.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_MOVE_RQ)) {
      cancelMessage = new _Message_js__WEBPACK_IMPORTED_MODULE_5__["CCancelRQ"]();

      cancelMessage.setReplyMessageId(this.command.messageId);
      cancelMessage.setSyntax(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].IMPLICIT_LITTLE_ENDIAN);

      o.send(o.wrapToPData(cancelMessage, this.command.contextUID));
    }
  });

  command.setSyntax(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].IMPLICIT_LITTLE_ENDIAN);
  command.setContextId(context);
  command.setMessageId(messageId);
  if (dataset) {
    command.setDataSetPresent(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_SET_PRESENT);
  }

  this.lastSent = command;
  if (command.is(_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_GET_RQ)) {
    this.lastGets.push(messageId);
  }

  const pdata = this.wrapToPData(command);

  msgData.command = command;
  this.messages[messageId] = msgData;
  console.info(`Sending command ${command.typeString()}`);
  this.send(pdata);
  if (dataset && typeof dataset === 'object') {
    dataset.setSyntax(syntax);
    let dsData = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["PDataTF"](),
      dPdv = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["PresentationDataValueItem"](cid);

    dPdv.setMessage(dataset);
    dsData.setPresentationDataValueItems([dPdv]);
    this.send(dsData);
  }

  return msgData.listener;
};

CSocket.prototype.sendPData = function (pdv, after) {
  const pdata = new _PDU_js__WEBPACK_IMPORTED_MODULE_3__["PDataTF"]();

  pdata.setPresentationDataValueItems([pdv]);
  // Console.log('Sending pdata');
  // Console.log(pdata.totalLength());
  this.send(pdata, after);
};

CSocket.prototype.verify = function () {
  this.setPresentationContexts([_constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_VERIFICATION]);
  this.startAssociationRequest(function () {
    // Associated, we can release now
    this.release();
  });
};

CSocket.prototype.wrapMessage = function (data) {
  if (data) {
    const datasetMessage = new _Message_js__WEBPACK_IMPORTED_MODULE_5__["DataSetMessage"]();

    datasetMessage.setElements(data);

    return datasetMessage;
  }

  return data;

};

CSocket.prototype.find = function (params, options) {
  return this.sendMessage(options.context, new _Message_js__WEBPACK_IMPORTED_MODULE_5__["CFindRQ"](), this.wrapMessage(params));
};

CSocket.prototype.move = function (destination, params, options) {
  const moveMessage = new _Message_js__WEBPACK_IMPORTED_MODULE_5__["CMoveRQ"]();

  moveMessage.setDestination(destination);

  return this.sendMessage(options.context, moveMessage, this.wrapMessage(params));
};

CSocket.prototype.storeInstance = function (sopClassUID, sopInstanceUID, options) {
  const storeMessage = new _Message_js__WEBPACK_IMPORTED_MODULE_5__["CStoreRQ"]();

  storeMessage.setAffectedSOPInstanceUID(sopInstanceUID);
  storeMessage.setAffectedSOPClassUID(sopClassUID);

  return this.sendMessage(sopClassUID, storeMessage, true);
};

CSocket.prototype.moveInstances = function (destination, params, options) {
  const sendParams = Object.assign({
    0x00080052: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].QUERY_RETRIEVE_LEVEL_IMAGE
  }, params);

  options = Object.assign({
    context: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_STUDY_ROOT_MOVE
  }, options);

  return this.move(destination, sendParams, options);
};

CSocket.prototype.findPatients = function (params, options) {
  const sendParams = Object.assign({
    0x00080052: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].QUERY_RETRIEVE_LEVEL_PATIENT,
    0x00100010: '',
    0x00100020: '',
    0x00100030: '',
    0x00100040: ''
  }, params);

  options = Object.assign({
    context: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_PATIENT_ROOT_FIND
  }, options);

  return this.find(sendParams, options);
};

CSocket.prototype.findStudies = function (params, options) {
  const sendParams = Object.assign({
    0x00080052: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].QUERY_RETRIEVE_LEVEL_STUDY,
    0x00080020: '',
    0x00100010: '',
    0x00080061: '',
    0x0020000D: ''
  }, params);

  options = Object.assign({
    context: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_STUDY_ROOT_FIND
  }, options);

  return this.find(sendParams, options);
};

CSocket.prototype.findSeries = function (params, options) {
  const sendParams = Object.assign({
    0x00080052: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].QUERY_RETRIEVE_LEVEL_SERIES,
    0x00080020: '',
    0x0020000E: '',
    0x0008103E: '',
    0x0020000D: ''
  }, params);

  options = Object.assign({
    context: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_STUDY_ROOT_FIND
  }, options);

  return this.find(sendParams, options);
};

CSocket.prototype.findInstances = function (params, options) {
  const sendParams = Object.assign({
    0x00080052: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].QUERY_RETRIEVE_LEVEL_IMAGE,
    0x00080020: '',
    0x0020000E: '',
    0x0008103E: '',
    0x0020000D: ''
  }, params);

  options = Object.assign({
    context: _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_STUDY_ROOT_FIND
  }, options);

  return this.find(sendParams, options);
};

/* harmony default export */ __webpack_exports__["default"] = (CSocket);


/***/ }),

/***/ "./Connection.js":
/*!***********************!*\
  !*** ./Connection.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "../node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! net */ "net");
/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(net__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! util */ "util");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants.js */ "./constants.js");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! events */ "events");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _CSocket_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CSocket.js */ "./CSocket.js");
/* harmony import */ var _PDU_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PDU.js */ "./PDU.js");
/* harmony import */ var _Message_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Message.js */ "./Message.js");









const Connection = function (options) {
  events__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"].call(this);
  this.options = Object.assign({
    maxPackageSize: _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].DEFAULT_MAX_PACKAGE_SIZE,
    idle: false,
    reconnect: true,
    vr: {
      split: true
    }
  }, options);

  this.reset();
};

util__WEBPACK_IMPORTED_MODULE_2___default.a.inherits(Connection, events__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]);

const StoreHandle = function () {
  events__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"].call(this);
};

util__WEBPACK_IMPORTED_MODULE_2___default.a.inherits(StoreHandle, events__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]);

Connection.prototype.reset = function () {
  this.defaultPeer = null;
  this.defaultServer = null;

  lodash__WEBPACK_IMPORTED_MODULE_0___default.a.each(this.peers, (peerInfo) => {
    lodash__WEBPACK_IMPORTED_MODULE_0___default.a.each(peerInfo.sockets, (socket) => socket.emit('close'));
  });

  this.peers = {};
};

Connection.prototype.addPeer = function (options) {
  if (!options.aeTitle || !options.host || !options.port) {
    return false;
  }

  const peer = {
    host: options.host,
    port: options.port,
    sockets: {}
  };

  this.peers[options.aeTitle] = peer;
  if (options.default) {
    if (options.server) {
      this.defaultServer = options.aeTitle;
    } else {
      this.defaultPeer = options.aeTitle;
    }
  }

  if (options.server) {
    // Start listening
    peer.server = net__WEBPACK_IMPORTED_MODULE_1___default.a.createServer();
    peer.server.listen(options.port, options.host, function () {
      console.info('listening on', this.address());
    });
    peer.server.on('error', function (err) {
      console.info('server error', err);
    });
    peer.server.on('connection', (nativeSocket) => {
      // Incoming connections
      const socket = new _CSocket_js__WEBPACK_IMPORTED_MODULE_5__["default"](nativeSocket, this.options);

      this.addSocket(options.aeTitle, socket);

      // Close server on close socket
      socket.on('close', function () {
        peer.server.close();
      });
    });
  }
};

Connection.prototype.selectPeer = function (aeTitle) {
  if (!aeTitle || !this.peers[aeTitle]) {
    throw new Error('No such peer');
  }

  return this.peers[aeTitle];
};

Connection.prototype._sendFile = function (socket, sHandle, file, maxSend, metaLength, list) {
  const fileNameText = typeof file.file === 'string' ? file.file : 'buffer';

  console.info(`Sending file ${fileNameText}`);
  const useContext = socket.getContextByUID(file.context);
  const self = this;

  _PDU_js__WEBPACK_IMPORTED_MODULE_6__["PDU"].generatePDatas(useContext.id, file.file, maxSend, null, metaLength, function (err, handle) {
    if (err) {
      console.info('Error while sending file');

      return;
    }

    const processNext = function () {
      const next = list.shift();

      if (next) {
        self._sendFile(socket, sHandle, next, maxSend, metaLength, list);
      } else {
        socket.release();
      }
    };

    const store = socket.storeInstance(useContext.abstractSyntax, file.uid);

    handle.on('pdv', function (pdv) {
      socket.sendPData(pdv);
    });
    handle.on('error', function (err) {
      sHandle.emit('file', err, fileNameText);
      processNext();
    });
    store.on('response', function (msg) {
      const statusText = msg.getStatus().toString(16);

      console.info('STORE reponse with status', statusText);
      let error = null;

      if (msg.failure()) {
        error = new Error(statusText);
      }

      sHandle.emit('file', error, fileNameText);
      processNext();
    });
  });
};

Connection.prototype.storeInstances = function (fileList) {
  const contexts = {};
  let read = 0;
  const length = fileList.length;
  const toSend = [];
  const self = this;
  const handle = new StoreHandle();
  let lastProcessedMetaLength;

  fileList.forEach(function (bufferOrFile) {
    const fileNameText = typeof bufferOrFile === 'string' ? bufferOrFile : 'buffer';

    _Message_js__WEBPACK_IMPORTED_MODULE_7__["DicomMessage"].readMetaHeader(bufferOrFile, function (err, metaMessage, metaLength) {
      read++;
      if (err) {
        handle.emit('file', err, fileNameText);
        if (read === length && toSend.length > 0 && lastProcessedMetaLength) {
          sendProcessedFiles(self, contexts, toSend, handle, lastProcessedMetaLength);
        }

        return;
      }

      console.info(`Dicom file ${(typeof bufferOrFile === 'string' ? bufferOrFile : 'buffer')} found`);
      lastProcessedMetaLength = metaLength;
      const syntax = metaMessage.getValue(0x00020010);
      const sopClassUID = metaMessage.getValue(0x00020002);
      const instanceUID = metaMessage.getValue(0x00020003);

      if (!contexts[sopClassUID]) {
        contexts[sopClassUID] = [];
      }

      if (syntax && contexts[sopClassUID].indexOf(syntax) === -1) {
        contexts[sopClassUID].push(syntax);
      }

      toSend.push({
        file: bufferOrFile,
        context: sopClassUID,
        uid: instanceUID
      });

      if (read === length) {
        sendProcessedFiles(self, contexts, toSend, handle, metaLength);
      }
    });
  });

  return handle;
};

// Starts to send dcm files
const sendProcessedFiles = function (self, contexts, toSend, handle, metaLength) {
  const useContexts = [];

  lodash__WEBPACK_IMPORTED_MODULE_0___default.a.each(contexts, (useSyntaxes, context) => {
    if (useSyntaxes.length > 0) {
      useContexts.push({
        context,
        syntaxes: useSyntaxes
      });
    } else {
      throw `No syntax specified for context ${context}`;
    }
  });

  self.associate({
    contexts: useContexts
  }, function (ac) {
    const maxSend = ac.getMaxSize();
    const next = toSend.shift();

    self._sendFile(this, handle, next, maxSend, metaLength, toSend);

  });
};

Connection.prototype.storeResponse = function (messageId, msg) {
  const rq = this.messages[messageId];

  if (rq.listener[2]) {
    const status = rq.listener[2].call(this, msg);

    if (status !== undefined && status !== null && rq.command.store) {
      // Store ok, ready to send c-store-rsp
      const storeSr = rq.command.store;
      const replyMessage = storeSr.replyWith(status);

      replyMessage.setAffectedSOPInstanceUID(this.lastCommand.getSOPInstanceUID());
      replyMessage.setReplyMessageId(this.lastCommand.messageId);
      this.sendMessage(replyMessage, null, null, storeSr);
    } else {
      throw 'Missing store status';
    }
  }
};

Connection.prototype.allClosed = function () {
  let allClosed = true;

  for (const i in this.peers) {
    if (Object.keys(this.peers[i].sockets).length > 0) {
      allClosed = false;
      break;
    }
  }

  return allClosed;
};

Connection.prototype.addSocket = function (hostAE, socket) {
  const peerInfo = this.selectPeer(hostAE);

  peerInfo.sockets[socket.id] = socket;

  socket.on('close', function () {
    if (peerInfo.sockets[this.id]) {
      delete peerInfo.sockets[this.id];
    }
  });
};

Connection.prototype.associate = function (options, callback) {
  const self = this;
  const hostAE = options.hostAE ? options.hostAE : this.defaultPeer;
  const sourceAE = options.sourceAE ? options.sourceAE : this.defaultServer;

  if (!hostAE || !sourceAE) {
    throw 'Peers not provided or no defaults in settings';
  }

  const peerInfo = this.selectPeer(hostAE);
  const nativeSocket = new net__WEBPACK_IMPORTED_MODULE_1___default.a.Socket();

  const socket = new _CSocket_js__WEBPACK_IMPORTED_MODULE_5__["default"](nativeSocket, this.options);

  if (callback) {
    socket.once('associated', callback);
  }

  console.info('Starting Connection...');

  socket.setCalledAe(hostAE);
  socket.setCallingAE(sourceAE);

  nativeSocket.connect({
    host: peerInfo.host,
    port: peerInfo.port
  }, () => {
    // Connected
    this.addSocket(hostAE, socket);

    if (options.contexts) {
      socket.setPresentationContexts(options.contexts);
    } else {
      throw new Error('Contexts must be specified');
    }

    socket.associate();
  });

  return socket;
};

/* harmony default export */ __webpack_exports__["default"] = (Connection);


/***/ }),

/***/ "./Data.js":
/*!*****************!*\
  !*** ./Data.js ***!
  \*****************/
/*! exports provided: elementByType, elementKeywordByTag, readAElement, DataElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementByType", function() { return elementByType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementKeywordByTag", function() { return elementKeywordByTag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "readAElement", function() { return readAElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataElement", function() { return DataElement; });
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ "util");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ "./constants.js");
/* harmony import */ var _Field_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Field.js */ "./Field.js");
/* harmony import */ var _elements_data_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./elements_data.js */ "./elements_data.js");





function paddingLeft (paddingValue, string) {
  return String(paddingValue + string).slice(-paddingValue.length);
}

function rtrim (str) {
  return str.replace(/\s*$/g, '');
}

function ltrim (str) {
  return str.replace(/^\s*/g, '');
}

function fieldsLength (fields) {
  let length = 0;

  fields.forEach(function (field) {
    length += field.length();
  });

  return length;
}

const Tag = function (value) {
  this.value = value;
};

Tag.prototype.toString = function () {
  return `(${paddingLeft('0000', this.group().toString(16))},${
    paddingLeft('0000', this.element().toString(16))})`;
};

Tag.prototype.is = function (t) {
  return this.value === t;
};

Tag.prototype.group = function () {
  return this.value >>> 16;
};

Tag.prototype.element = function () {
  return this.value & 0xffff;
};

Tag.prototype.isPixelDataTag = function () {
  return this.is(0x7fe00010);
};

const tagFromNumbers = function (group, element) {
  return new Tag(((group << 16) | element) >>> 0);
};

function readTag (stream) {
  let group = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16),
    element = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16);

  return tagFromNumbers(group, element);
}

const parseElements = function (stream, syntax) {
  const pairs = {};

  stream.reset();
  while (!stream.end()) {
    const elem = new DataElement();

    elem.setSyntax(syntax);
    elem.readBytes(stream);
    pairs[elem.tag.value] = elem;
  }

  return pairs;
};

const ValueRepresentation = function (type) {
  this.type = type;
  this.multi = false;
};

ValueRepresentation.prototype.read = function (stream, length, syntax) {
  if (this.fixed && this.maxLength) {
    if (!length) {
      return this.defaultValue;
    }

    if (this.maxLength !== length) {
      console.log(`Invalid length for fixed length tag, vr ${this.type}, length ${this.maxLength} !== ${length}`);
    }
  }

  return this.readBytes(stream, length, syntax);
};

ValueRepresentation.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, length);
};

ValueRepresentation.prototype.readNullPaddedString = function (stream, length) {
  if (!length) {
    return '';
  }

  let str = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, length - 1);

  if (stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT8) !== 0) {
    stream.increment(-1);
    str += stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, 1);
  }

  return str;
};

ValueRepresentation.prototype.getFields = function (fields) {
  let valid = true;
  let length;

  if (this.checkLength) {
    valid = this.checkLength(fields);
  } else if (this.maxCharLength) {
    const check = this.maxCharLength;

    length = 0;

    fields.forEach(function (field) {
      if (typeof field.value === 'string') {
        length += field.value.length;
      }
    });
    valid = length <= check;
  } else if (this.maxLength) {
    const check = this.maxLength;

    length = fieldsLength(fields);

    valid = length <= check;
  }

  if (!valid) {
    //throw 'Value exceeds max length';
  }

  // Check for odd
  length = fieldsLength(fields);

  if (length & 1) {
    fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["HexField"](this.padByte));
  }

  for (let i = 0; i < fields.length; i++) {
    if (fields[i].isNumeric() && (fields[i].value === '' || fields[i].value === null)) {
      fields[i] = new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"]('');
    }
  }

  return fields;
};

const ApplicationEntity = function () {
  ValueRepresentation.call(this, 'AE');
  this.maxLength = 16;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(ApplicationEntity, ValueRepresentation);

ApplicationEntity.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, length).trim();
};

ApplicationEntity.prototype.getFields = function (value) {
  return ApplicationEntity.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["FilledField"](value, 16)]);
};

const CodeString = function () {
  ValueRepresentation.call(this, 'CS');
  this.maxLength = 16;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(CodeString, ValueRepresentation);

CodeString.prototype.readBytes = function (stream, length) {
  const str = this.readNullPaddedString(stream, length);

  return str.trim();
};

CodeString.prototype.getFields = function (value) {
  return CodeString.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const AgeString = function () {
  ValueRepresentation.call(this, 'AS');
  this.maxLength = 4;
  this.padByte = '20';
  this.fixed = true;
  this.defaultValue = '';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(AgeString, ValueRepresentation);

AgeString.prototype.getFields = function (value) {
  let str = '';

  if (value) {
    if (value.days) {
      str = `${paddingLeft(`000${value.days}`)}D`;
    } else if (value.weeks) {
      str = `${paddingLeft(`000${value.weeks}`)}W`;
    } else if (value.months) {
      str = `${paddingLeft(`000${value.months}`)}M`;
    } else if (value.years) {
      str = `${paddingLeft(`000${value.years}`)}Y`;
    } else {
      throw 'Invalid age string';
    }
  }

  return AgeString.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](str)]);
};

const AttributeTag = function () {
  ValueRepresentation.call(this, 'AT');
  this.maxLength = 4;
  this.padByte = '00';
  this.fixed = true;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(AttributeTag, ValueRepresentation);

AttributeTag.prototype.readBytes = function (stream, length) {
  let group = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16),
    element = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16);

  return tagFromNumbers(group, element);
};

AttributeTag.prototype.getFields = function (value) {
  if (!value) {
    return AttributeTag.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"]('')]);
  }

  return AttributeTag.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](value.group()), new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](value.element())]);
};

const DateValue = function () {
  ValueRepresentation.call(this, 'DA');
  this.maxLength = 8;
  this.padByte = '20';
  this.fixed = true;
  this.defaultValue = '';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(DateValue, ValueRepresentation);

DateValue.prototype.readBytes = function (stream, length) {
  const datestr = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, length);

  let year = parseInt(datestr.substring(0, 4)),
    month = parseInt(datestr.substring(4, 6)),
    day = parseInt(datestr.substring(6, 8));

  return datestr;// New Date(year, month, day);
};

DateValue.prototype.getFields = function (date) {
  let str = null;

  if (typeof date === 'object') {
    let year = date.getFullYear(),
      month = paddingLeft('00', date.getMonth()),
      day = paddingLeft('00', date.getDate());

    str = year + month + day;
  } else if (date && date.length > 0) {
    this.maxLength = 18;
    this.fixed = false;
    str = date;
  } else {
    str = '';
  }

  return DateValue.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](str)]);
};

const DecimalString = function () {
  ValueRepresentation.call(this, 'DS');
  this.maxLength = 16;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(DecimalString, ValueRepresentation);

DecimalString.prototype.readBytes = function (stream, length) {
  const str = this.readNullPaddedString(stream, length);

  return str.trim();
};

DecimalString.prototype.getFields = function (value) {
  const f = parseFloat(value);

  return DecimalString.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](isNaN(f) ? '' : f.toExponential())]);
};

const DateTime = function () {
  ValueRepresentation.call(this, 'DT');
  this.maxLength = 26;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(DateTime, ValueRepresentation);

DateTime.prototype.getFields = function (value) {
  if (!value) {
    return DateTime.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"]('')]);
  }

  let year = value.getUTCFullYear(),
    month = paddingLeft('00', value.getUTCMonth()),
    day = paddingLeft('00', value.getUTCDate()),
    hour = paddingLeft('00', value.getUTCHours()),
    minute = paddingLeft('00', value.getUTCMinutes()),
    second = paddingLeft('00', value.getUTCSeconds()),
    millisecond = paddingLeft('000', value.getUTCMilliseconds());

  return DateTime.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](`${year + month + day + hour + minute + second}.${millisecond}+0000`)]);
};

const FloatingPointSingle = function () {
  ValueRepresentation.call(this, 'FL');
  this.maxLength = 4;
  this.padByte = '00';
  this.fixed = true;
  this.defaultValue = 0.0;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(FloatingPointSingle, ValueRepresentation);

FloatingPointSingle.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_FLOAT);
};

FloatingPointSingle.prototype.getFields = function (value) {
  return FloatingPointSingle.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["FloatField"](value)]);
};

const FloatingPointDouble = function () {
  ValueRepresentation.call(this, 'FD');
  this.maxLength = 8;
  this.padByte = '00';
  this.fixed = true;
  this.defaultValue = 0.0;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(FloatingPointDouble, ValueRepresentation);

FloatingPointDouble.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_DOUBLE);
};

FloatingPointDouble.prototype.getFields = function (value) {
  return FloatingPointDouble.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["DoubleField"](value)]);
};

const IntegerString = function () {
  ValueRepresentation.call(this, 'IS');
  this.maxLength = 12;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(IntegerString, ValueRepresentation);

IntegerString.prototype.readBytes = function (stream, length) {
  const str = this.readNullPaddedString(stream, length);

  return str.trim();
};

IntegerString.prototype.getFields = function (value) {
  return IntegerString.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value.toString())]);
};

const LongString = function () {
  ValueRepresentation.call(this, 'LO');
  this.maxCharLength = 64;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(LongString, ValueRepresentation);

LongString.prototype.readBytes = function (stream, length) {
  const str = this.readNullPaddedString(stream, length);

  return str.trim();
};

LongString.prototype.getFields = function (value) {
  return LongString.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value ? value : '')]);
};

const LongText = function () {
  ValueRepresentation.call(this, 'LT');
  this.maxCharLength = 10240;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(LongText, ValueRepresentation);

LongText.prototype.readBytes = function (stream, length) {
  const str = this.readNullPaddedString(stream, length);

  return rtrim(str);
};

LongText.prototype.getFields = function (value) {
  return LongText.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const PersonName = function () {
  ValueRepresentation.call(this, 'PN');
  this.maxLength = null;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(PersonName, ValueRepresentation);

PersonName.prototype.checkLength = function (field) {
  const cmps = field[0].value.split(/\^/);

  for (const i in cmps) {
    const cmp = cmps[i];

    if (cmp.length > 64) {
      return false;
    }
  }

  return true;
};

PersonName.prototype.readBytes = function (stream, length) {
  const str = this.readNullPaddedString(stream, length);

  return rtrim(str);
};

PersonName.prototype.getFields = function (value) {
  let str = null;

  if (typeof value === 'string') {
    str = value;
  } else if (value) {
    let fName = value.family || '',
      gName = value.given || '',
      middle = value.middle || '',
      prefix = value.prefix || '',
      suffix = value.suffix || '';

    str = [fName, gName, middle, prefix, suffix].join('^');
  } else {
    str = '';
  }

  return PersonName.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](str)]);
};

const ShortString = function () {
  ValueRepresentation.call(this, 'SH');
  this.maxCharLength = 16;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(ShortString, ValueRepresentation);

ShortString.prototype.readBytes = function (stream, length) {
  const str = this.readNullPaddedString(stream, length);

  return str.trim();
};

ShortString.prototype.getFields = function (value) {
  return ShortString.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const SignedLong = function () {
  ValueRepresentation.call(this, 'SL');
  this.maxLength = 4;
  this.padByte = '00';
  this.fixed = true;
  this.defaultValue = 0;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(SignedLong, ValueRepresentation);

SignedLong.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT32);
};

SignedLong.prototype.getFields = function (value) {
  return SignedLong.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["Int32Field"](value)]);
};

const SequenceOfItems = function () {
  ValueRepresentation.call(this, 'SQ');
  this.maxLength = null;
  this.padByte = '00';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(SequenceOfItems, ValueRepresentation);

SequenceOfItems.prototype.readBytes = function (stream, sqlength, syntax) {
  if (sqlength === 0x0) {
    return []; // Contains no dataset
  }
  let undefLength = sqlength === 0xffffffff,
    elements = [],
    read = 0;

  while (true) {
    let tag = readTag(stream),
      length = null;

    read += 4;

    if (tag.is(0xfffee0dd)) {
      stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32);
      break;
    } else if (!undefLength && (read === sqlength)) {
      break;
    } else if (tag.is(0xfffee000)) {
      length = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32);
      read += 4;
      let itemStream = null,
        toRead = 0,
        undef = length === 0xffffffff;

      if (undef) {
        let stack = 0;

        while (1) {
          const g = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16);

          if (g === 0xfffe) {
            const ge = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16);

            if (ge === 0xe00d) {
              stack--;
              if (stack < 0) {
                stream.increment(4);
                read += 8;
                break;
              } else {
                toRead += 4;
              }
            } else if (ge === 0xe000) {
              stack++;
              toRead += 4;
            } else {
              toRead += 2;
              stream.increment(-2);
            }
          } else {
            toRead += 2;
          }
        }
      } else {
        toRead = length;
      }

      if (toRead) {
        stream.increment(undef ? (-toRead - 8) : 0);
        itemStream = stream.more(toRead);// ParseElements
        read += toRead;
        if (undef) {
          stream.increment(8);
        }

        elements.push(parseElements(itemStream, syntax));
      }

      if (!undefLength && (read === sqlength)) {
        break;
      }
    }
  }

  return elements;

};

SequenceOfItems.prototype.getFields = function (value, syntax) {
  let fields = [];

  if (value) {
    value.forEach(function (message) {
      fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](0xfffe));
      fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](0xe000));
      fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt32Field"](0xffffffff));

      message.forEach(function (element) {
        element.setSyntax(syntax);
        fields = fields.concat(element.getFields());
      });

      fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](0xfffe));
      fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](0xe00d));
      fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt32Field"](0x00000000));
    });
  }

  fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](0xfffe));
  fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](0xe0dd));
  fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt32Field"](0x00000000));

  return SequenceOfItems.super_.prototype.getFields.call(this, fields);
};

const SignedShort = function () {
  ValueRepresentation.call(this, 'SS');
  this.maxLength = 2;
  this.padByte = '00';
  this.fixed = true;
  this.defaultValue = 0;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(SignedShort, ValueRepresentation);

SignedShort.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT16);
};

SignedShort.prototype.getFields = function (value) {
  return SignedShort.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["Int16Field"](value)]);
};

const ShortText = function () {
  ValueRepresentation.call(this, 'ST');
  this.maxCharLength = 1024;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(ShortText, ValueRepresentation);

ShortText.prototype.readBytes = function (stream, length) {
  const str = this.readNullPaddedString(stream, length);

  return rtrim(str);
};

ShortText.prototype.getFields = function (value) {
  return ShortText.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const TimeValue = function () {
  ValueRepresentation.call(this, 'TM');
  this.maxLength = 14;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(TimeValue, ValueRepresentation);

TimeValue.prototype.readBytes = function (stream, length) {
  return rtrim(stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, length));
};

TimeValue.prototype.getFields = function (date) {
  let dateStr = '';

  if (date) {
    let hour = paddingLeft('00', date.getHours()),
      minute = paddingLeft('00', date.getMinutes()),
      second = paddingLeft('00', date.getSeconds()),
      millisecond = paddingLeft('000', date.getMilliseconds());

    dateStr = `${hour + minute + second}.${millisecond}`;
  }

  return TimeValue.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](dateStr)]);
};

const UnlimitedCharacters = function () {
  ValueRepresentation.call(this, 'UC');
  this.maxLength = null;
  this.multi = true;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UnlimitedCharacters, ValueRepresentation);

UnlimitedCharacters.prototype.readBytes = function (stream, length) {
  return rtrim(stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, length));
};

UnlimitedCharacters.prototype.getFields = function (value) {
  return UnlimitedCharacters.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const UnlimitedText = function () {
  ValueRepresentation.call(this, 'UT');
  this.maxLength = null;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UnlimitedText, ValueRepresentation);

UnlimitedText.prototype.readBytes = function (stream, length) {
  return this.readNullPaddedString(stream, length);
};

UnlimitedText.prototype.getFields = function (value) {
  return UnlimitedText.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const UnsignedShort = function () {
  ValueRepresentation.call(this, 'US');
  this.maxLength = 2;
  this.padByte = '00';
  this.fixed = true;
  this.defaultValue = 0;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UnsignedShort, ValueRepresentation);

UnsignedShort.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16);
};

UnsignedShort.prototype.getFields = function (value) {
  return UnsignedShort.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](value)]);
};

const UnsignedLong = function () {
  ValueRepresentation.call(this, 'UL');
  this.maxLength = 4;
  this.padByte = '00';
  this.fixed = true;
  this.defaultValue = 0;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UnsignedLong, ValueRepresentation);

UnsignedLong.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32);
};

UnsignedLong.prototype.getFields = function (value) {
  return UnsignedLong.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt32Field"](value)]);
};

const UniqueIdentifier = function () {
  ValueRepresentation.call(this, 'UI');
  this.maxLength = 64;
  this.padByte = '00';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UniqueIdentifier, ValueRepresentation);

UniqueIdentifier.prototype.readBytes = function (stream, length) {
  return this.readNullPaddedString(stream, length);
};

UniqueIdentifier.prototype.getFields = function (value) {
  return UniqueIdentifier.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const UniversalResource = function () {
  ValueRepresentation.call(this, 'UR');
  this.maxLength = null;
  this.padByte = '20';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UniversalResource, ValueRepresentation);

UniversalResource.prototype.readBytes = function (stream, length) {
  return rtrim(stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, length));
};

UniversalResource.prototype.getFields = function (value) {
  return UniversalResource.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const UnknownValue = function () {
  ValueRepresentation.call(this, 'UN');
  this.maxLength = null;
  this.padByte = '00';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UnknownValue, ValueRepresentation);

UnknownValue.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, length);
};

UnknownValue.prototype.getFields = function (value) {
  return UnknownValue.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const OtherWordString = function () {
  ValueRepresentation.call(this, 'OW');
  this.maxLength = null;
  this.padByte = '00';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(OtherWordString, ValueRepresentation);

OtherWordString.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, length);
};

OtherWordString.prototype.getFields = function (value) {
  return OtherWordString.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](value)]);
};

const OtherByteString = function () {
  ValueRepresentation.call(this, 'OB');
  this.maxLength = null;
  this.padByte = '00';
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(OtherByteString, ValueRepresentation);

OtherByteString.prototype.readBytes = function (stream, length) {
  return stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_HEX, length);
};

OtherByteString.prototype.getFields = function (value) {
  return OtherByteString.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["HexField"](value)]);
};

const elementByType = function (type, value, syntax) {
  let elem = null,
    nk = _elements_data_js__WEBPACK_IMPORTED_MODULE_3__["dicomNDict"][type];

  if (nk) {
    if (nk.vr === 'SQ') {
      const sq = [];

      if (value) {
        value.forEach(function (el) {
          const values = [];

          for (const tag in el) {
            values.push(elementByType(tag, el[tag], syntax));
          }

          sq.push(values);
        });
      }
      elem = new DataElement(type, nk.vr, nk.vm, sq, false, syntax);
    } else {
      elem = new DataElement(type, nk.vr, nk.vm, value, false, syntax);
    }
  } else {
    throw 'Unrecognized element type';
  }

  return elem;
};

const elementDataByTag = function (tag) {
  const nk = _elements_data_js__WEBPACK_IMPORTED_MODULE_3__["dicomNDict"][tag];

  if (nk) {
    return nk;
  }

  throw (`Unrecognized tag ${(tag >>> 0).toString(16)}`);
};

const elementKeywordByTag = function (tag) {
  try {
    const nk = elementDataByTag(tag);

    return nk.keyword;
  } catch (ex) {
    return 'UnknownTag';
  }
};

const vrByType = function (type) {
  let vr = null;

  if (type === 'AE') {
    vr = new ApplicationEntity();
  } else if (type === 'AS') {
    vr = new AgeString();
  } else if (type === 'AT') {
    vr = new AttributeTag();
  } else if (type === 'CS') {
    vr = new CodeString();
  } else if (type === 'DA') {
    vr = new DateValue();
  } else if (type === 'DS') {
    vr = new DecimalString();
  } else if (type === 'DT') {
    vr = new DateTime();
  } else if (type === 'FL') {
    vr = new FloatingPointSingle();
  } else if (type === 'FD') {
    vr = new FloatingPointDouble();
  } else if (type === 'IS') {
    vr = new IntegerString();
  } else if (type === 'LO') {
    vr = new LongString();
  } else if (type === 'LT') {
    vr = new LongText();
  } else if (type === 'OB') {
    vr = new OtherByteString();
  } else if (type === 'OD') {
    vr = new _Field_js__WEBPACK_IMPORTED_MODULE_2__["OtherDoubleString"]();
  } else if (type === 'OF') {
    vr = new _Field_js__WEBPACK_IMPORTED_MODULE_2__["OtherFloatString"]();
  } else if (type === 'OW') {
    vr = new OtherWordString();
  } else if (type === 'PN') {
    vr = new PersonName();
  } else if (type === 'SH') {
    vr = new ShortString();
  } else if (type === 'SL') {
    vr = new SignedLong();
  } else if (type === 'SQ') {
    vr = new SequenceOfItems();
  } else if (type === 'SS') {
    vr = new SignedShort();
  } else if (type === 'ST') {
    vr = new ShortText();
  } else if (type === 'TM') {
    vr = new TimeValue();
  } else if (type === 'UC') {
    vr = new UnlimitedCharacters();
  } else if (type === 'UI') {
    vr = new UniqueIdentifier();
  } else if (type === 'UL') {
    vr = new UnsignedLong();
  } else if (type === 'UN') {
    vr = new UnknownValue();
  } else if (type === 'UR') {
    vr = new UniversalResource();
  } else if (type === 'US') {
    vr = new UnsignedShort();
  } else if (type === 'UT') {
    vr = new UnlimitedText();
  } else {
    throw `Invalid vr type ${type}`;
  }

  return vr;
};

const readElements = function (stream, syntax) {
  if (stream.end()) {
    return false;
  }

  const oldEndian = stream.endian;

  stream.setEndian(this.endian);

  let group = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16),
    element = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16),
    tag = new Tag((group << 16) | element),
    length = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32);

  stream.setEndian(oldEndian);
};

const readAElement = function (stream, syntax) {
  const elem = newElementWithSyntax(syntax);

  elem.readBytes(stream);

  return elem;
};

const newElementWithSyntax = function (syntax) {
  const elem = new DataElement();

  elem.setSyntax(syntax);

  return elem;
};

const explicitVRList = ['OB', 'OW', 'OF', 'SQ', 'UC', 'UR', 'UT', 'UN'];
const binaryVRs = ['FL', 'FD', 'SL', 'SS', 'UL', 'US'];

const DataElement = function (tag, vr, vm, value, vvr, syntax, options) {
  this.vr = vr ? vrByType(vr) : null;
  this.tag = !vvr ? new Tag(tag) : tag;
  this.value = value;
  this.vm = vm;
  this.vvr = Boolean(vvr);
  this.setOptions(options);
  this.setSyntax(syntax ? syntax : _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].IMPLICIT_LITTLE_ENDIAN);
};

DataElement.prototype.setOptions = function (options) {
  this.options = Object.assign({
    split: true
  }, options);
};

DataElement.prototype.setSyntax = function (syn) {
  this.syntax = syn;
  this.implicit = this.syntax === _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].IMPLICIT_LITTLE_ENDIAN;
  this.endian = (this.syntax === _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].IMPLICIT_LITTLE_ENDIAN || this.syntax === _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].EXPLICIT_LITTLE_ENDIAN) ? _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN : _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN;
};

DataElement.prototype.getValue = function () {
  if (!this.singleValue() && !this.isBinaryNumber()) {
    return this.options.split ? this.value.split(String.fromCharCode(0x5c)) : this.value;
  }

  return this.value;

};

DataElement.prototype.singleValue = function () {
  return this.vm === _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].VM_SINGLE;
};

DataElement.prototype.getVMNum = function () {
  let num = 1;

  switch (this.vm) {
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].VM_SINGLE : num = 1; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].VM_TWO : num = 2; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].VM_THREE : num = 3; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].VM_FOUR : num = 4; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].VM_16 : num = 16; break;
  default : break;
  }

  return num;
};

DataElement.prototype.isBinaryNumber = function () {
  return binaryVRs.indexOf(this.vr.type) !== -1;
};

DataElement.prototype.length = function (fields) {
  // Let fields = this.vr.getFields(this.value);
  return fieldsLength(fields);
};

DataElement.prototype.readBytes = function (stream) {
  const oldEndian = stream.endian;

  stream.setEndian(this.endian);

  let group = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16),
    element = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16),
    tag = tagFromNumbers(group, element);

  let length = null,
    vr = null,
    edata, vm;

  try {
    edata = elementDataByTag(tag.value);
    vm = edata.vm;
  } catch (ex) {
    edata = null;
    vm = null;
  }

  if (this.implicit) {
    length = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32);
    if (!edata) {
      if (length == 0xffffffff) {
        vr = 'SQ';
      } else if (tag.isPixelDataTag()) {
        vr = 'OW';
      } else {
        vr = 'UN';
      }
    } else {
      vr = edata.vr;
    }
  } else {
    vr = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, 2);
    if (explicitVRList.indexOf(vr) !== -1) {
      stream.increment(2);
      length = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32);
    } else {
      length = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16);
    }
  }

  this.vr = vrByType(vr);
  this.tag = tag;
  this.vm = vm;
  // Try {
  if (this.isBinaryNumber() && length > this.vr.maxLength) {
    let times = length / this.vr.maxLength,
      i = 0;

    this.value = [];// Console.log(times, length, this.vr.maxLength);return;
    // Try {
    while (i++ < times) {
      this.value.push(this.vr.read(stream, this.vr.maxLength));
    }
    // } catch (e) {  }
  } else {
    this.value = this.vr.read(stream, length, this.syntax);
  }
  // } catch (e) { console.log('error', vr, length); }

  stream.setEndian(oldEndian);
};

DataElement.prototype.write = function (stream) {
  const oldEndian = stream.endian;

  stream.setEndian(this.endian);

  const fields = this.getFields();

  fields.forEach(function (field) {
    field.write(stream);
  });

  stream.setEndian(oldEndian);
};

DataElement.prototype.getFields = function () {
  let fields = [new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](this.tag.group()), new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](this.tag.element())],
    valueFields = this.vr.getFields(this.value, this.syntax),
    valueLength = fieldsLength(valueFields),
    vrType = this.vr.type;

  if (vrType === 'SQ') {
    valueLength = 0xffffffff;
  }

  if (this.implicit) {
    fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt32Field"](valueLength));
  } else if (explicitVRList.indexOf(vrType) !== -1) {
    fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](vrType), new _Field_js__WEBPACK_IMPORTED_MODULE_2__["ReservedField"](2), new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt32Field"](valueLength));
  } else {
    fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_2__["StringField"](vrType), new _Field_js__WEBPACK_IMPORTED_MODULE_2__["UInt16Field"](valueLength));
  }

  fields = fields.concat(valueFields);

  return fields;
};




/***/ }),

/***/ "./Field.js":
/*!******************!*\
  !*** ./Field.js ***!
  \******************/
/*! exports provided: BufferField, StringField, FilledField, HexField, ReservedField, UInt8Field, UInt16Field, UInt32Field, Int8Field, Int16Field, Int32Field, FloatField, DoubleField, OtherDoubleString, OtherFloatString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BufferField", function() { return BufferField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StringField", function() { return StringField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilledField", function() { return FilledField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HexField", function() { return HexField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReservedField", function() { return ReservedField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UInt8Field", function() { return UInt8Field; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UInt16Field", function() { return UInt16Field; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UInt32Field", function() { return UInt32Field; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Int8Field", function() { return Int8Field; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Int16Field", function() { return Int16Field; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Int32Field", function() { return Int32Field; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FloatField", function() { return FloatField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DoubleField", function() { return DoubleField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OtherDoubleString", function() { return OtherDoubleString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OtherFloatString", function() { return OtherFloatString; });
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ "util");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ "./constants.js");
/* harmony import */ var _RWStream_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RWStream.js */ "./RWStream.js");




const Field = function (type, value) {
  this.type = type;
  this.value = value;
};

Field.prototype.length = function () {
  return Object(_RWStream_js__WEBPACK_IMPORTED_MODULE_2__["calcLength"])(this.type, this.value);
};

Field.prototype.write = function (stream) {
  stream.write(this.type, this.value);
};

Field.prototype.isNumeric = function () {
  return false;
};

const BufferField = function (buffer, start, length) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_BUFFER, buffer);
  this.bufferLength = length;
  this.bufferStart = start;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(BufferField, Field);

BufferField.prototype.length = function () {
  return this.bufferLength;
};

BufferField.prototype.write = function (stream) {
  stream.writeRawBuffer(this.value, this.bufferStart, this.bufferLength);
};

const StringField = function (str) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, typeof str === 'string' ? str : '');
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(StringField, Field);

const FilledField = function (value, length) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_COMPOSITE, value);
  this.fillLength = length;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(FilledField, Field);

FilledField.prototype.length = function () {
  return this.fillLength;
};

FilledField.prototype.write = function (stream) {
  const len = this.value.length;

  if (len < this.fillLength && len >= 0) {
    if (len > 0) {
      stream.write(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, this.value);
    }
    const zeroLength = this.fillLength - len;

    stream.write(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_HEX, '20'.repeat(zeroLength));
  } else if (len == this.fillLength) {
    stream.write(_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII, this.value);
  } else {
    throw 'Length mismatch';
  }
};

const HexField = function (hex) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_HEX, hex);
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(HexField, Field);

const ReservedField = function (length) {
  length = length || 1;
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_HEX, '00'.repeat(length));
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(ReservedField, Field);

const UInt8Field = function (value) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT8, value);
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UInt8Field, Field);

UInt8Field.prototype.isNumeric = function () {
  return true;
};

const UInt16Field = function (value) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16, value);
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UInt16Field, Field);

UInt16Field.prototype.isNumeric = function () {
  return true;
};

const UInt32Field = function (value) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32, value);
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(UInt32Field, Field);

UInt32Field.prototype.isNumeric = function () {
  return true;
};

const Int8Field = function (value) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT8, value);
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(Int8Field, Field);

Int8Field.prototype.isNumeric = function () {
  return true;
};

const Int16Field = function (value) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT16, value);
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(Int16Field, Field);

Int16Field.prototype.isNumeric = function () {
  return true;
};

const Int32Field = function (value) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT32, value);
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(Int32Field, Field);

Int32Field.prototype.isNumeric = function () {
  return true;
};

const FloatField = function (value) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_FLOAT, value);
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(FloatField, Field);

FloatField.prototype.isNumeric = function () {
  return true;
};

const DoubleField = function (value) {
  Field.call(this, _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_DOUBLE, value);
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(DoubleField, Field);

DoubleField.prototype.isNumeric = function () {
  return true;
};

const OtherDoubleString = function () {};
const OtherFloatString = function () {};




/***/ }),

/***/ "./Message.js":
/*!********************!*\
  !*** ./Message.js ***!
  \********************/
/*! exports provided: DicomMessage, DataSetMessage, FileMetaMessage, CommandMessage, CommandResponse, CFindRSP, CGetRSP, CMoveRSP, CMoveRQ, CFindRQ, CCancelRQ, CCancelMoveRQ, CGetRQ, CStoreRQ, CStoreRSP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DicomMessage", function() { return DicomMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataSetMessage", function() { return DataSetMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileMetaMessage", function() { return FileMetaMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommandMessage", function() { return CommandMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommandResponse", function() { return CommandResponse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CFindRSP", function() { return CFindRSP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CGetRSP", function() { return CGetRSP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMoveRSP", function() { return CMoveRSP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CMoveRQ", function() { return CMoveRQ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CFindRQ", function() { return CFindRQ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CCancelRQ", function() { return CCancelRQ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CCancelMoveRQ", function() { return CCancelMoveRQ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CGetRQ", function() { return CGetRQ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CStoreRQ", function() { return CStoreRQ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CStoreRSP", function() { return CStoreRSP; });
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ "fs");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ "util");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ "./constants.js");
/* harmony import */ var _require_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./require.js */ "./require.js");
/* harmony import */ var _RWStream_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RWStream.js */ "./RWStream.js");
/* harmony import */ var _Data_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Data.js */ "./Data.js");







const DicomMessage = function (syntax) {
  this.syntax = syntax ? syntax : null;
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_TYPE_COMMAND;
  this.messageId = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DEFAULT_MESSAGE_ID;
  this.elementPairs = {};
};

DicomMessage.prototype.isCommand = function () {
  return this.type == _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_TYPE_COMMAND;
};

DicomMessage.prototype.setSyntax = function (syntax) {
  this.syntax = syntax;

  for (const tag in this.elementPairs) {
    this.elementPairs[tag].setSyntax(this.syntax);
  }
};

DicomMessage.prototype.setMessageId = function (id) {
  this.messageId = id;
};

DicomMessage.prototype.setReplyMessageId = function (id) {
  this.replyMessageId = id;
};

DicomMessage.prototype.command = function (cmds) {
  cmds.unshift(this.newElement(0x00000800, this.dataSetPresent ? _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_SET_PRESENT : _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATE_SET_ABSENCE));
  cmds.unshift(this.newElement(0x00000700, this.priority));
  cmds.unshift(this.newElement(0x00000110, this.messageId));
  cmds.unshift(this.newElement(0x00000100, this.commandType));
  cmds.unshift(this.newElement(0x00000002, this.contextUID));

  let length = 0;

  cmds.forEach(function (cmd) {
    length += cmd.length(cmd.getFields());
  });

  cmds.unshift(this.newElement(0x00000000, length));

  return cmds;
};

DicomMessage.prototype.response = function (cmds) {
  cmds.unshift(this.newElement(0x00000800, this.dataSetPresent ? _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_SET_PRESENT : _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATE_SET_ABSENCE));
  cmds.unshift(this.newElement(0x00000120, this.replyMessageId));
  cmds.unshift(this.newElement(0x00000100, this.commandType));
  if (this.contextUID) {
    cmds.unshift(this.newElement(0x00000002, this.contextUID));
  }

  let length = 0;

  cmds.forEach(function (cmd) {
    length += cmd.length(cmd.getFields());
  });

  cmds.unshift(this.newElement(0x00000000, length));

  return cmds;
};

DicomMessage.prototype.setElements = function (pairs) {
  const p = {};

  for (const tag in pairs) {
    p[tag] = this.newElement(tag, pairs[tag]);
  }

  this.elementPairs = p;
};

DicomMessage.prototype.newElement = function (tag, value) {
  return Object(_Data_js__WEBPACK_IMPORTED_MODULE_5__["elementByType"])(tag, value, this.syntax);
};

DicomMessage.prototype.setElement = function (key, value) {
  this.elementPairs[key] = Object(_Data_js__WEBPACK_IMPORTED_MODULE_5__["elementByType"])(key, value);
};

DicomMessage.prototype.setElementPairs = function (pairs) {
  this.elementPairs = pairs;
};

DicomMessage.prototype.setContextId = function (context) {
  this.contextUID = context;
};

DicomMessage.prototype.setPriority = function (pri) {
  this.priority = pri;
};

DicomMessage.prototype.setType = function (type) {
  this.type = type;
};

DicomMessage.prototype.setDataSetPresent = function (present) {
  this.dataSetPresent = present != 0x0101;
};

DicomMessage.prototype.haveData = function () {
  return this.dataSetPresent;
};

DicomMessage.prototype.tags = function () {
  return Object.keys(this.elementPairs);
};

DicomMessage.prototype.key = function (tag) {
  return Object(_Data_js__WEBPACK_IMPORTED_MODULE_5__["elementKeywordByTag"])(tag);
};

DicomMessage.prototype.getValue = function (tag) {
  return this.elementPairs[tag] ? this.elementPairs[tag].getValue() : null;
};

DicomMessage.prototype.affectedSOPClassUID = function () {
  return this.getValue(0x00000002);
};

DicomMessage.prototype.getMessageId = function () {
  return this.getValue(0x00000110);
};

DicomMessage.prototype.getFields = function () {
  const eles = [];

  for (const tag in this.elementPairs) {
    eles.push(this.elementPairs[tag]);
  }

  return eles;
};

DicomMessage.prototype.length = function (elems) {
  let len = 0;

  elems.forEach(function (elem) {
    len += elem.length(elem.getFields());
  });

  return len;
};

DicomMessage.prototype.isResponse = function () {
  return false;
};

DicomMessage.prototype.is = function (type) {
  return this.commandType == type;
};

DicomMessage.prototype.write = function (stream) {
  let fields = this.getFields(),
    o = this;

  fields.forEach(function (field) {
    field.setSyntax(o.syntax);
    field.write(stream);
  });
};

DicomMessage.prototype.printElements = function (pairs, indent) {
  let typeName = '';

  for (const tag in pairs) {
    const value = pairs[tag].getValue();

    typeName += `${(' '.repeat(indent)) + this.key(tag)} : `;
    if (value instanceof Array) {
      const o = this;

      value.forEach(function (p) {
        if (typeof p === 'object') {
          typeName += `[\n${o.printElements(p, indent + 2)}${' '.repeat(indent)}]`;
        } else {
          typeName += `[${p}]`;
        }
      });
      if (typeName[typeName.length - 1] != '\n') {
        typeName += '\n';
      }
    } else {
      typeName += `${value}\n`;
    }
  }

  return typeName;
};

DicomMessage.prototype.typeString = function () {
  let typeName = '';

  if (!this.isCommand()) {
    typeName = 'DateSet Message';
  } else {
    switch (this.commandType) {
    case _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_GET_RSP : typeName = 'C-GET-RSP'; break;
    case _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_MOVE_RSP : typeName = 'C-MOVE-RSP'; break;
    case _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_GET_RQ : typeName = 'C-GET-RQ'; break;
    case _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_STORE_RQ : typeName = 'C-STORE-RQ'; break;
    case _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_FIND_RSP : typeName = 'C-FIND-RSP'; break;
    case _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_MOVE_RQ : typeName = 'C-MOVE-RQ'; break;
    case _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_FIND_RQ : typeName = 'C-FIND-RQ'; break;
    case _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].COMMAND_C_STORE_RSP : typeName = 'C-STORE-RSP'; break;
    }
  }

  return typeName;
};

DicomMessage.prototype.toString = function () {
  let typeName = this.typeString();

  typeName += ' [\n';
  typeName += this.printElements(this.elementPairs, 0);
  typeName += ']';

  return typeName;
};

DicomMessage.prototype.walkObject = function (pairs) {
  const obj = {};
  const o = this;

  for (const tag in pairs) {
    const v = pairs[tag].getValue();
    let u = v;

    if (v instanceof Array) {
      u = [];
      v.forEach(function (a) {
        if (typeof a === 'object') {
          u.push(o.walkObject(a));
        } else {
          u.push(a);
        }
      });
    }

    obj[tag] = u;
  }

  return obj;
};

DicomMessage.prototype.toObject = function () {
  return this.walkObject(this.elementPairs);
};

DicomMessage.readToPairs = function (stream, syntax, options) {
  const pairs = {};

  while (!stream.end()) {
    const elem = new _Data_js__WEBPACK_IMPORTED_MODULE_5__["DataElement"]();

    if (options) {
      elem.setOptions(options);
    }

    elem.setSyntax(syntax);
    elem.readBytes(stream);
    pairs[elem.tag.value] = elem;
  }

  return pairs;
};

const fileValid = function (stream) {
  return stream.readString(4, _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].TYPE_ASCII) == 'DICM';
};

const readMetaStream = function (stream, useSyntax, length, callback) {
  const message = new FileMetaMessage();

  message.setElementPairs(DicomMessage.readToPairs(stream, useSyntax));
  if (callback) {
    callback(null, message, length);
  }

  return message;
};

DicomMessage.readMetaHeader = function (bufferOrFile, callback) {
  const useSyntax = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].EXPLICIT_LITTLE_ENDIAN;

  if (bufferOrFile instanceof Buffer) {
    const stream = new _RWStream_js__WEBPACK_IMPORTED_MODULE_4__["ReadStream"](bufferOrFile);

    stream.reset();
    stream.increment(128);
    if (!fileValid(stream)) {
      return Object(_require_js__WEBPACK_IMPORTED_MODULE_3__["quitWithError"])('Invalid a dicom file ', callback);
    }

    let el = Object(_Data_js__WEBPACK_IMPORTED_MODULE_5__["readAElement"])(stream, useSyntax),
      metaLength = el.value,
      metaStream = stream.more(metaLength);

    return readMetaStream(metaStream, useSyntax, metaLength, callback);
  } else if (typeof bufferOrFile === 'string') {
    fs__WEBPACK_IMPORTED_MODULE_0___default.a.open(bufferOrFile, 'r', function (err, fd) {
      if (err) {
        // Fs.closeSync(fd);
        return Object(_require_js__WEBPACK_IMPORTED_MODULE_3__["quitWithError"])('Cannot open file', callback);
      }

      const buffer = Buffer.alloc(16);

      fs__WEBPACK_IMPORTED_MODULE_0___default.a.read(fd, buffer, 0, 16, 128, function (err, bytesRead) {
        if (err || bytesRead != 16) {
          fs__WEBPACK_IMPORTED_MODULE_0___default.a.closeSync(fd);

          return Object(_require_js__WEBPACK_IMPORTED_MODULE_3__["quitWithError"])('Cannot read file', callback);
        }

        const stream = new _RWStream_js__WEBPACK_IMPORTED_MODULE_4__["ReadStream"](buffer);

        if (!fileValid(stream)) {
          fs__WEBPACK_IMPORTED_MODULE_0___default.a.closeSync(fd);

          return Object(_require_js__WEBPACK_IMPORTED_MODULE_3__["quitWithError"])(`Not a dicom file ${bufferOrFile}`, callback);
        }

        let el = Object(_Data_js__WEBPACK_IMPORTED_MODULE_5__["readAElement"])(stream, useSyntax),
          metaLength = el.value,
          metaBuffer = Buffer.alloc(metaLength);

        fs__WEBPACK_IMPORTED_MODULE_0___default.a.read(fd, metaBuffer, 0, metaLength, 144, function (err, bytesRead) {
          fs__WEBPACK_IMPORTED_MODULE_0___default.a.closeSync(fd);
          if (err || bytesRead != metaLength) {
            return Object(_require_js__WEBPACK_IMPORTED_MODULE_3__["quitWithError"])(`Invalid a dicom file ${bufferOrFile}`, callback);
          }

          const metaStream = new _RWStream_js__WEBPACK_IMPORTED_MODULE_4__["ReadStream"](metaBuffer);

          return readMetaStream(metaStream, useSyntax, metaLength, callback);
        });
      });
    });
  }

  return null;
};

DicomMessage.read = function (stream, type, syntax, options) {
  let elements = [],
    pairs = {},
    useSyntax = type == _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_TYPE_COMMAND ? _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].IMPLICIT_LITTLE_ENDIAN : syntax;

  stream.reset();
  while (!stream.end()) {
    const elem = new _Data_js__WEBPACK_IMPORTED_MODULE_5__["DataElement"]();

    if (options) {
      elem.setOptions(options);
    }

    elem.setSyntax(useSyntax);
    elem.readBytes(stream);// Return;
    pairs[elem.tag.value] = elem;
  }

  let message = null;

  if (type == _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_TYPE_COMMAND) {
    const cmdType = pairs[0x00000100].value;

    switch (cmdType) {
    case 0x8020 : message = new CFindRSP(useSyntax); break;
    case 0x8021 : message = new CMoveRSP(useSyntax); break;
    case 0x8010 : message = new CGetRSP(useSyntax); break;
    case 0x0001 : message = new CStoreRQ(useSyntax); break;
    case 0x0020 : message = new CFindRQ(useSyntax); break;
    case 0x8001 : message = new CStoreRSP(useSyntax); break;
    default : throw new Error(`Unrecognized command type ${cmdType.toString(16)}`);
    }

    message.setElementPairs(pairs);
    message.setDataSetPresent(message.getValue(0x00000800));
    message.setContextId(message.getValue(0x00000002));
    if (!message.isResponse()) {
      message.setMessageId(message.getValue(0x00000110));
    } else {
      message.setReplyMessageId(message.getValue(0x00000120));
    }
  } else if (type == _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_TYPE_DATA) {
    message = new DataSetMessage(useSyntax);
    message.setElementPairs(pairs);
  } else {
    throw 'Unrecognized message type';
  }

  return message;
};

const DataSetMessage = function (syntax) {
  DicomMessage.call(this, syntax);
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_TYPE_DATA;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(DataSetMessage, DicomMessage);

DataSetMessage.prototype.is = function (type) {
  return false;
};

const FileMetaMessage = function (syntax) {
  DicomMessage.call(this, syntax);
  this.type = null;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(FileMetaMessage, DicomMessage);

const CommandMessage = function (syntax) {
  DicomMessage.call(this, syntax);
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_TYPE_COMMAND;
  this.priority = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].PRIORITY_MEDIUM;
  this.dataSetPresent = true;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CommandMessage, DicomMessage);

CommandMessage.prototype.getFields = function () {
  return this.command(CommandMessage.super_.prototype.getFields.call(this));
};

const CommandResponse = function (syntax) {
  DicomMessage.call(this, syntax);
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].DATA_TYPE_COMMAND;
  this.dataSetPresent = true;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CommandResponse, DicomMessage);

CommandResponse.prototype.isResponse = function () {
  return true;
};

CommandResponse.prototype.respondedTo = function () {
  return this.getValue(0x00000120);
};

CommandResponse.prototype.isFinal = function () {
  return this.success() || this.failure() || this.cancel();
};

CommandResponse.prototype.warning = function () {
  const status = this.getStatus();

  return (status == 0x0001) || (status >> 12 == 0xb);
};

CommandResponse.prototype.success = function () {
  return this.getStatus() == 0x0000;
};

CommandResponse.prototype.failure = function () {
  const status = this.getStatus();

  return (status >> 12 == 0xa) || (status >> 12 == 0xc) || (status >> 8 == 0x1);
};

CommandResponse.prototype.cancel = function () {
  return this.getStatus() == _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].STATUS_CANCEL;
};

CommandResponse.prototype.pending = function () {
  const status = this.getStatus();

  return (status == 0xff00) || (status == 0xff01);
};

CommandResponse.prototype.getStatus = function () {
  return this.getValue(0x00000900);
};

CommandResponse.prototype.setStatus = function (status) {
  this.setElement(0x00000900, status);
};

// Following four methods only available to C-GET-RSP and C-MOVE-RSP
CommandResponse.prototype.getNumOfRemainingSubOperations = function () {
  return this.getValue(0x00001020);
};

CommandResponse.prototype.getNumOfCompletedSubOperations = function () {
  return this.getValue(0x00001021);
};

CommandResponse.prototype.getNumOfFailedSubOperations = function () {
  return this.getValue(0x00001022);
};

CommandResponse.prototype.getNumOfWarningSubOperations = function () {
  return this.getValue(0x00001023);
};
// End

CommandResponse.prototype.getFields = function () {
  return this.response(CommandResponse.super_.prototype.getFields.call(this));
};

const CFindRSP = function (syntax) {
  CommandResponse.call(this, syntax);
  this.commandType = 0x8020;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CFindRSP, CommandResponse);

const CGetRSP = function (syntax) {
  CommandResponse.call(this, syntax);
  this.commandType = 0x8010;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CGetRSP, CommandResponse);

const CMoveRSP = function (syntax) {
  CommandResponse.call(this, syntax);
  this.commandType = 0x8021;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CMoveRSP, CommandResponse);

const CFindRQ = function (syntax) {
  CommandMessage.call(this, syntax);
  this.commandType = 0x20;
  this.contextUID = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_STUDY_ROOT_FIND;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CFindRQ, CommandMessage);

const CCancelRQ = function (syntax) {
  CommandResponse.call(this, syntax);
  this.commandType = 0x0fff;
  this.contextUID = null;
  this.dataSetPresent = false;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CCancelRQ, CommandResponse);

const CCancelMoveRQ = function (syntax) {
  CommandResponse.call(this, syntax);
  this.commandType = 0x0fff;
  this.contextUID = null;
  this.dataSetPresent = false;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CCancelMoveRQ, CommandResponse);

const CMoveRQ = function (syntax, destination) {
  CommandMessage.call(this, syntax);
  this.commandType = 0x21;
  this.contextUID = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_STUDY_ROOT_MOVE;
  this.setDestination(destination || '');
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CMoveRQ, CommandMessage);

CMoveRQ.prototype.setStore = function (cstr) {
  this.store = cstr;
};

CMoveRQ.prototype.setDestination = function (dest) {
  this.setElement(0x00000600, dest);
};

const CGetRQ = function (syntax) {
  CommandMessage.call(this, syntax);
  this.commandType = 0x10;
  this.contextUID = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_STUDY_ROOT_GET;
  this.store = null;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CGetRQ, CommandMessage);

CGetRQ.prototype.setStore = function (cstr) {
  this.store = cstr;
};

const CStoreRQ = function (syntax) {
  CommandMessage.call(this, syntax);
  this.commandType = 0x01;
  this.contextUID = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_STUDY_ROOT_GET;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CStoreRQ, CommandMessage);

CStoreRQ.prototype.getOriginAETitle = function () {
  return this.getValue(0x00001030);
};

CStoreRQ.prototype.getMoveMessageId = function () {
  return this.getValue(0x00001031);
};

CStoreRQ.prototype.getAffectedSOPInstanceUID = function () {
  return this.getValue(0x00001000);
};

CStoreRQ.prototype.setAffectedSOPInstanceUID = function (uid) {
  this.setElement(0x00001000, uid);
};

CStoreRQ.prototype.setAffectedSOPClassUID = function (uid) {
  this.setElement(0x00000002, uid);
};

const CStoreRSP = function (syntax) {
  CommandResponse.call(this, syntax);
  this.commandType = 0x8001;
  this.contextUID = _constants_js__WEBPACK_IMPORTED_MODULE_2__["default"].SOP_STUDY_ROOT_GET;
  this.dataSetPresent = false;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(CStoreRSP, CommandResponse);

CStoreRSP.prototype.setAffectedSOPInstanceUID = function (uid) {
  this.setElement(0x00001000, uid);
};

CStoreRSP.prototype.getAffectedSOPInstanceUID = function (uid) {
  return this.getValue(0x00001000);
};




/***/ }),

/***/ "./PDU.js":
/*!****************!*\
  !*** ./PDU.js ***!
  \****************/
/*! exports provided: PDU, AssociateAC, AssociateRQ, AssociateAbort, ReleaseRQ, ReleaseRP, PDataTF, ApplicationContextItem, PresentationContextItem, PresentationContextItemAC, PresentationDataValueItem, AbstractSyntaxItem, TransferSyntaxItem, UserInformationItem, ImplementationClassUIDItem, ImplementationVersionNameItem, MaximumLengthItem, mergePDVs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PDU", function() { return PDU; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssociateAC", function() { return AssociateAC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssociateRQ", function() { return AssociateRQ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AssociateAbort", function() { return AssociateAbort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReleaseRQ", function() { return ReleaseRQ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReleaseRP", function() { return ReleaseRP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PDataTF", function() { return PDataTF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApplicationContextItem", function() { return ApplicationContextItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PresentationContextItem", function() { return PresentationContextItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PresentationContextItemAC", function() { return PresentationContextItemAC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PresentationDataValueItem", function() { return PresentationDataValueItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractSyntaxItem", function() { return AbstractSyntaxItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransferSyntaxItem", function() { return TransferSyntaxItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserInformationItem", function() { return UserInformationItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImplementationClassUIDItem", function() { return ImplementationClassUIDItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImplementationVersionNameItem", function() { return ImplementationVersionNameItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaximumLengthItem", function() { return MaximumLengthItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergePDVs", function() { return mergePDVs; });
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ "fs");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ "util");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events */ "events");
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants.js */ "./constants.js");
/* harmony import */ var _Message_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Message.js */ "./Message.js");
/* harmony import */ var _Field_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Field.js */ "./Field.js");
/* harmony import */ var _RWStream_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RWStream.js */ "./RWStream.js");
/* harmony import */ var _require_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./require.js */ "./require.js");









const PDVHandle = function () {};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(PDVHandle, events__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]);

const PDU = function () {
  this.fields = [];
  this.lengthBytes = 4;
};

PDU.prototype.length = function (fields) {
  let len = 0;

  fields.forEach(function (f) {
    len += f.getFields ? f.length(f.getFields()) : f.length();
  });

  return len;
};

PDU.prototype.is = function (type) {
  return this.type == type;
};

PDU.prototype.getFields = function (fields) {
  const len = this.lengthField(fields);

  fields.unshift(len);
  if (this.type !== null) {
    fields.unshift(new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"]());
    fields.unshift(new _Field_js__WEBPACK_IMPORTED_MODULE_5__["HexField"](this.type));
  }

  return fields;
};

PDU.prototype.lengthField = function (fields) {
  if (this.lengthBytes == 4) {
    return new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt32Field"](this.length(fields));
  } else if (this.lengthBytes == 2) {
    return new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt16Field"](this.length(fields));
  }
  throw new Error('Invalid length bytes');

};

PDU.prototype.read = function (stream) {
  stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_HEX, 1);
  const length = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT32);

  this.readBytes(stream, length);
};

PDU.prototype.load = function (stream) {
  return PDU.createByStream(stream);
};

PDU.prototype.loadPDV = function (stream, length) {
  if (stream.end()) {
    return false;
  }
  let bytesRead = 0,
    pdvs = [];

  while (bytesRead < length) {
    let plength = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT32),
      pdv = new PresentationDataValueItem();

    pdv.readBytes(stream, plength);
    bytesRead += plength + 4;

    pdvs.push(pdv);
  }

  return pdvs;
};

PDU.prototype.loadDicomMessage = function (stream, isCommand, isLast) {
  const message = _Message_js__WEBPACK_IMPORTED_MODULE_4__["DicomMessage"].read(stream, isCommand, isLast);

  return message;
};

PDU.prototype.stream = function () {
  let stream = new _RWStream_js__WEBPACK_IMPORTED_MODULE_6__["WriteStream"](),
    fields = this.getFields();

  // Writing to buffer
  fields.forEach(function (field) {
    field.write(stream);
  });

  return stream;
};

PDU.prototype.buffer = function () {
  return this.stream().buffer();
};

// TODO: Seems that we don't use it.
// Const interpretCommand = function (stream, isLast) {
//   ParseDicomMessage(stream);
// };

const mergePDVs = function (pdvs) {
  let merges = [],
    count = pdvs.length,
    i = 0;

  while (i < count) {
    console.log(pdvs[i].isLast, pdvs[i].type);
    if (!pdvs[i].isLast) {
      let j = i;

      while (!pdvs[j++].isLast && j < count) {
        pdvs[i].messageStream.concat(pdvs[j].messageStream);
      }
      merges.push(pdvs[i]);
      i = j;
    } else {
      merges.push(pdvs[i++]);
    }
  }

  return merges;
};

PDU.splitPData = function (pdata, maxSize) {
  const totalLength = pdata.totalLength();

  if (totalLength > maxSize) {
    // Split into chunks of pdatas
    let chunks = Math.floor(totalLength / maxSize),
      left = totalLength % maxSize;

    for (let i = 0; i < chunks; i++) {
      if (i == chunks - 1) {
        if (left < 6) {
          // Need to move some of the last chunk
        }
      }
    }
  } else {
    return [pdata];
  }
};

const readChunk = function (fd, bufferSize, slice, callback) {
  let buffer = Buffer.alloc(bufferSize),
    length = slice.length,
    start = slice.start;

  fs__WEBPACK_IMPORTED_MODULE_0___default.a.read(fd, buffer, 0, length, start, function (err, bytesRead) {
    callback(err, bytesRead, buffer, slice);
  });
};

PDU.generatePDatas = function (context, bufferOrFile, maxSize, length, metaLength, callback) {
  let total,
    isFile = false;

  if (typeof bufferOrFile === 'string') {
    const stats = fs__WEBPACK_IMPORTED_MODULE_0___default.a.statSync(bufferOrFile);

    total = stats.size;
    isFile = true;
  } else if (bufferOrFile instanceof Buffer) {
    total = length ? length : bufferOrFile.length;
  }
  const handler = new PDVHandle();

  let slices = [],
    start = metaLength + 144,
    index = 0;

  maxSize -= 6;
  while (start < total) {
    let sliceLength = maxSize,
      isLast = false;

    if (total - start < maxSize) {
      sliceLength = total - start;
      isLast = true;
    }
    slices.push({ start,
      length: sliceLength,
      isLast,
      index });
    start += sliceLength;
    index++;
  }

  if (isFile) {
    fs__WEBPACK_IMPORTED_MODULE_0___default.a.open(bufferOrFile, 'r', function (err, fd) {
      if (err) {
        // Fs.closeSync(fd);
        return Object(_require_js__WEBPACK_IMPORTED_MODULE_7__["quitWithError"])(err, callback);
      } callback(null, handler);

      const after = function (err, bytesRead, buffer, slice) {
        if (err) {
          fs__WEBPACK_IMPORTED_MODULE_0___default.a.closeSync(fd);
          handler.emit('error', err);

          return;
        }
        const pdv = new RawDataPDV(context, buffer, 0, slice.length, slice.isLast);

        handler.emit('pdv', pdv);

        if (slices.length < 1) {
          handler.emit('end');
          fs__WEBPACK_IMPORTED_MODULE_0___default.a.closeSync(fd);
        } else {
          const next = slices.shift();

          readChunk(fd, maxSize, next, after);
        }
      };

      const sl = slices.shift();

      readChunk(fd, maxSize, sl, after);
    });
  } else {
    for (let i = 0; i < slices.length; i++) {
      const toSlice = slices[i];

      const buffer = bufferOrFile.slice(toSlice.start, toSlice.length);
      const pdv = new RawDataPDV(context, buffer, 0, toSlice.length, toSlice.isLast);

      handler.emit('pdv', pdv);

      if (i == slices.length - 1) {
        handler.emit('end');
      }
    }
  }

  return;
};

PDU.typeToString = function (type) {
  let pdu = null,
    typeNum = parseInt(type, 16);
  // Console.log("RECEIVED PDU-TYPE ", typeNum);

  switch (typeNum) {
  case 0x01 : pdu = 'ASSOCIATE-RQ'; break;
  case 0x02 : pdu = 'ASSOCIATE-AC'; break;
  case 0x04 : pdu = 'P-DATA-TF'; break;
  case 0x06 : pdu = 'RELEASE-RP'; break;
  case 0x07 : pdu = 'ASSOCIATE-ABORT'; break;
  case 0x10 : pdu = 'APPLICATION-CONTEXT-ITEM'; break;
  case 0x20 : pdu = 'PRESENTATION-CONTEXT-ITEM'; break;
  case 0x21 : pdu = 'PRESENTATION-CONTEXT-ITEM-AC'; break;
  case 0x30 : pdu = 'ABSTRACT-SYNTAX-ITEM'; break;
  case 0x40 : pdu = 'TRANSFER-SYNTAX-ITEM'; break;
  case 0x50 : pdu = 'USER-INFORMATION-ITEM'; break;
  case 0x51 : pdu = 'MAXIMUM-LENGTH-ITEM'; break;
  case 0x52 : pdu = 'IMPLEMENTATION-CLASS-UID-ITEM'; break;
  case 0x55 : pdu = 'IMPLEMENTATION-VERSION-NAME-ITEM'; break;
  default : break;
  }

  return pdu;
};

PDU.createByStream = function (stream) {
  if (stream.end()) {
    return null;
  }

  let pduType = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_HEX, 1),
    typeNum = parseInt(pduType, 16),
    pdu = null;
  // Console.log("RECEIVED PDU-TYPE ", pduType);

  switch (typeNum) {
  case 0x01 : pdu = new AssociateRQ(); break;
  case 0x02 : pdu = new AssociateAC(); break;
  case 0x04 : pdu = new PDataTF(); break;
  case 0x06 : pdu = new ReleaseRP(); break;
  case 0x07 : pdu = new AssociateAbort(); break;
  case 0x10 : pdu = new ApplicationContextItem(); break;
  case 0x20 : pdu = new PresentationContextItem(); break;
  case 0x21 : pdu = new PresentationContextItemAC(); break;
  case 0x30 : pdu = new AbstractSyntaxItem(); break;
  case 0x40 : pdu = new TransferSyntaxItem(); break;
  case 0x50 : pdu = new UserInformationItem(); break;
  case 0x51 : pdu = new MaximumLengthItem(); break;
  case 0x52 : pdu = new ImplementationClassUIDItem(); break;
  case 0x55 : pdu = new ImplementationVersionNameItem(); break;
  default : throw new Error(`Unrecoginized pdu type ${pduType}`);
  }
  if (pdu) {
    pdu.read(stream);
  }

  return pdu;
};

const nextItemIs = function (stream, pduType) {
  if (stream.end()) {
    return false;
  }

  const nextType = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_HEX, 1);

  stream.increment(-1);

  return pduType == nextType;
};

const AssociateRQ = function () {
  PDU.call(this);
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PDU_ASSOCIATE_RQ;
  this.protocolVersion = 1;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(AssociateRQ, PDU);

AssociateRQ.prototype.setProtocolVersion = function (version) {
  this.protocolVersion = version;
};

AssociateRQ.prototype.setCalledAETitle = function (title) {
  this.calledAETitle = title;
};

AssociateRQ.prototype.setCallingAETitle = function (title) {
  this.callingAETitle = title;
};

AssociateRQ.prototype.setApplicationContextItem = function (item) {
  this.applicationContextItem = item;
};

AssociateRQ.prototype.setPresentationContextItems = function (items) {
  this.presentationContextItems = items;
};

AssociateRQ.prototype.setUserInformationItem = function (item) {
  this.userInformationItem = item;
};

AssociateRQ.prototype.allAccepted = function () {
  for (const i in this.presentationContextItems) {
    const item = this.presentationContextItems[i];

    if (!item.accepted()) {
      return false;
    }
  }

  return true;
};

AssociateRQ.prototype.getFields = function () {
  const f = [
    new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt16Field"](this.protocolVersion), new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"](2),
    new _Field_js__WEBPACK_IMPORTED_MODULE_5__["FilledField"](this.calledAETitle, 16), new _Field_js__WEBPACK_IMPORTED_MODULE_5__["FilledField"](this.callingAETitle, 16),
    new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"](32), this.applicationContextItem
  ];

  this.presentationContextItems.forEach(function (context) {
    f.push(context);
  });
  f.push(this.userInformationItem);

  return AssociateRQ.super_.prototype.getFields.call(this, f);
};

AssociateRQ.prototype.readBytes = function (stream, length) {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PDU_ASSOCIATE_RQ;
  const version = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT16);

  this.setProtocolVersion(version);
  stream.increment(2);
  const calledAE = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_ASCII, 16);

  this.setCalledAETitle(calledAE);
  const callingAE = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_ASCII, 16);

  this.setCallingAETitle(callingAE);
  stream.increment(32);

  const appContext = this.load(stream);

  this.setApplicationContextItem(appContext);

  const presContexts = [];

  do {
    presContexts.push(this.load(stream));
  } while (nextItemIs(stream, _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PRESENTATION_CONTEXT));
  this.setPresentationContextItems(presContexts);

  const userItem = this.load(stream);

  this.setUserInformationItem(userItem);
};

AssociateRQ.prototype.buffer = function () {
  return AssociateRQ.super_.prototype.buffer.call(this);
};

const AssociateAC = function () {
  AssociateRQ.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(AssociateAC, AssociateRQ);

AssociateAC.prototype.readBytes = function (stream, length) {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PDU_ASSOCIATE_AC;
  const version = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT16);

  this.setProtocolVersion(version);
  stream.increment(66);

  const appContext = this.load(stream);

  this.setApplicationContextItem(appContext);

  const presContexts = [];

  do {
    presContexts.push(this.load(stream));
  } while (nextItemIs(stream, _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PRESENTATION_CONTEXT_AC));
  this.setPresentationContextItems(presContexts);

  const userItem = this.load(stream);

  this.setUserInformationItem(userItem);
};

AssociateAC.prototype.getMaxSize = function () {
  let items = this.userInformationItem.userDataItems,
    length = items.length,
    size = null;

  for (let i = 0; i < length; i++) {
    if (items[i].is(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_MAXIMUM_LENGTH)) {
      size = items[i].maximumLengthReceived;
      break;
    }
  }

  return size;
};

const AssociateAbort = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PDU_AABORT;
  this.source = 1;
  this.reason = 0;
  PDU.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(AssociateAbort, PDU);

AssociateAbort.prototype.setSource = function (src) {
  this.source = src;
};

AssociateAbort.prototype.setReason = function (reason) {
  this.reason = reason;
};

AssociateAbort.prototype.readBytes = function (stream, length) {
  stream.increment(2);

  const source = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT8);

  this.setSource(source);

  const reason = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT8);

  this.setReason(reason);
};

AssociateAbort.prototype.getFields = function () {
  return AssociateAbort.super_.prototype.getFields.call(this, [
    new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"](), new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"](),
    new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt8Field"](this.source), new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt8Field"](this.reason)
  ]);
};

const ReleaseRQ = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PDU_RELEASE_RQ;
  PDU.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(ReleaseRQ, PDU);

ReleaseRQ.prototype.getFields = function () {
  return ReleaseRQ.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"](4)]);
};

const ReleaseRP = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PDU_RELEASE_RP;
  PDU.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(ReleaseRP, PDU);

ReleaseRP.prototype.readBytes = function (stream, length) {
  stream.increment(4);
};

ReleaseRP.prototype.getFields = function () {
  return ReleaseRP.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"](4)]);
};

const PDataTF = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PDU_PDATA;
  this.presentationDataValueItems = [];
  PDU.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(PDataTF, PDU);

PDataTF.prototype.setPresentationDataValueItems = function (items) {
  this.presentationDataValueItems = items ? items : [];
};

PDataTF.prototype.getFields = function () {
  const fields = this.presentationDataValueItems;

  return PDataTF.super_.prototype.getFields.call(this, fields);
};

PDataTF.prototype.totalLength = function () {
  const fields = this.presentationDataValueItems;

  return this.length(fields);
};

PDataTF.prototype.readBytes = function (stream, length) {
  const pdvs = this.loadPDV(stream, length);
  // Let merges = mergePDVs(pdvs);

  this.setPresentationDataValueItems(pdvs);
};

const Item = function () {
  PDU.call(this);
  this.lengthBytes = 2;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(Item, PDU);

Item.prototype.read = function (stream) {
  stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_HEX, 1);
  const length = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT16);

  this.readBytes(stream, length);
};

Item.prototype.write = function (stream) {
  stream.concat(this.stream());
};

Item.prototype.getFields = function (fields) {
  return Item.super_.prototype.getFields.call(this, fields);
};

const PresentationDataValueItem = function (context) {
  this.type = null;
  this.isLast = true;
  this.dataFragment = null;
  this.contextId = context;
  this.messageStream = null;
  Item.call(this);

  this.lengthBytes = 4;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(PresentationDataValueItem, Item);

PresentationDataValueItem.prototype.setContextId = function (id) {
  this.contextId = id;
};

PresentationDataValueItem.prototype.setFlag = function (flag) {
  this.flag = flag;
};

PresentationDataValueItem.prototype.setPresentationDataValue = function (pdv) {
  this.pdv = pdv;
};

PresentationDataValueItem.prototype.setMessage = function (msg) {
  this.dataFragment = msg;
};

PresentationDataValueItem.prototype.getMessage = function () {
  return this.dataFragment;
};

PresentationDataValueItem.prototype.readBytes = function (stream, length) {
  this.contextId = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT8);
  const messageHeader = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT8);

  this.isLast = messageHeader >> 1;
  this.type = messageHeader & 1 ? _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].DATA_TYPE_COMMAND : _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].DATA_TYPE_DATA;

  // Load dicom messages
  this.messageStream = stream.more(length - 2);
};

PresentationDataValueItem.prototype.getFields = function () {
  const fields = [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt8Field"](this.contextId)];
  // Define header
  const messageHeader = (1 & this.dataFragment.type) | ((this.isLast ? 1 : 0) << 1);

  fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt8Field"](messageHeader));

  fields.push(this.dataFragment);

  return PresentationDataValueItem.super_.prototype.getFields.call(this, fields);
};

const RawDataPDV = function (context, buffer, start, length, isLast) {
  this.type = null;
  this.isLast = isLast;
  this.dataFragmentBuffer = buffer;
  this.bufferStart = start;
  this.bufferLength = length;
  this.contextId = context;
  Item.call(this);

  this.lengthBytes = 4;
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(RawDataPDV, Item);

RawDataPDV.prototype.getFields = function () {
  const fields = [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt8Field"](this.contextId)];
  const messageHeader = (this.isLast ? 1 : 0) << 1;

  fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt8Field"](messageHeader));
  fields.push(new _Field_js__WEBPACK_IMPORTED_MODULE_5__["BufferField"](this.dataFragmentBuffer, this.bufferStart, this.bufferLength));

  return RawDataPDV.super_.prototype.getFields.call(this, fields);
};

const ApplicationContextItem = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_APPLICATION_CONTEXT;
  this.applicationContextName = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].APPLICATION_CONTEXT_NAME;
  Item.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(ApplicationContextItem, Item);

ApplicationContextItem.prototype.setApplicationContextName = function (name) {
  this.applicationContextName = name;
};

ApplicationContextItem.prototype.getFields = function () {
  return ApplicationContextItem.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["StringField"](this.applicationContextName)]);
};

ApplicationContextItem.prototype.readBytes = function (stream, length) {
  const appContext = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_ASCII, length);

  this.setApplicationContextName(appContext);
};

ApplicationContextItem.prototype.buffer = function () {
  return ApplicationContextItem.super_.prototype.buffer.call(this);
};

const PresentationContextItem = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PRESENTATION_CONTEXT;
  Item.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(PresentationContextItem, Item);

PresentationContextItem.prototype.setPresentationContextID = function (id) {
  this.presentationContextID = id;
};

PresentationContextItem.prototype.setAbstractSyntaxItem = function (item) {
  this.abstractSyntaxItem = item;
};

PresentationContextItem.prototype.setTransferSyntaxesItems = function (items) {
  this.transferSyntaxesItems = items;
};

PresentationContextItem.prototype.setResultReason = function (reason) {
  this.resultReason = reason;
};

PresentationContextItem.prototype.accepted = function () {
  return this.resultReason == 0;
};

PresentationContextItem.prototype.readBytes = function (stream, length) {
  const contextId = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT8);

  this.setPresentationContextID(contextId);
  stream.increment(1);
  stream.increment(1);
  stream.increment(1);

  const abstractItem = this.load(stream);

  this.setAbstractSyntaxItem(abstractItem);

  const transContexts = [];

  do {
    transContexts.push(this.load(stream));
  } while (nextItemIs(stream, _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_TRANSFER_CONTEXT));
  this.setTransferSyntaxesItems(transContexts);
};

PresentationContextItem.prototype.getFields = function () {
  const f = [
    new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt8Field"](this.presentationContextID),
    new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"](), new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"](), new _Field_js__WEBPACK_IMPORTED_MODULE_5__["ReservedField"](), this.abstractSyntaxItem
  ];

  this.transferSyntaxesItems.forEach(function (syntaxItem) {
    f.push(syntaxItem);
  });

  return PresentationContextItem.super_.prototype.getFields.call(this, f);
};

PresentationContextItem.prototype.buffer = function () {
  return PresentationContextItem.super_.prototype.buffer.call(this);
};

const PresentationContextItemAC = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_PRESENTATION_CONTEXT_AC;
  Item.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(PresentationContextItemAC, PresentationContextItem);

PresentationContextItemAC.prototype.readBytes = function (stream, length) {
  const contextId = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT8);

  this.setPresentationContextID(contextId);
  stream.increment(1);
  const resultReason = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT8);

  this.setResultReason(resultReason);
  stream.increment(1);

  const transItem = this.load(stream);

  this.setTransferSyntaxesItems([transItem]);
};

const AbstractSyntaxItem = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_ABSTRACT_CONTEXT;
  Item.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(AbstractSyntaxItem, Item);

AbstractSyntaxItem.prototype.setAbstractSyntaxName = function (name) {
  this.abstractSyntaxName = name;
};

AbstractSyntaxItem.prototype.getFields = function () {
  return AbstractSyntaxItem.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["StringField"](this.abstractSyntaxName)]);
};

AbstractSyntaxItem.prototype.buffer = function () {
  return AbstractSyntaxItem.super_.prototype.buffer.call(this);
};

AbstractSyntaxItem.prototype.readBytes = function (stream, length) {
  const name = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_ASCII, length);

  this.setAbstractSyntaxName(name);
};

const TransferSyntaxItem = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_TRANSFER_CONTEXT;
  Item.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(TransferSyntaxItem, Item);

TransferSyntaxItem.prototype.setTransferSyntaxName = function (name) {
  this.transferSyntaxName = name;
};

TransferSyntaxItem.prototype.readBytes = function (stream, length) {
  const transfer = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_ASCII, length);

  this.setTransferSyntaxName(transfer);
};

TransferSyntaxItem.prototype.getFields = function () {
  return TransferSyntaxItem.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["StringField"](this.transferSyntaxName)]);
};

TransferSyntaxItem.prototype.buffer = function () {
  return TransferSyntaxItem.super_.prototype.buffer.call(this);
};

const UserInformationItem = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_USER_INFORMATION;
  Item.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(UserInformationItem, Item);

UserInformationItem.prototype.setUserDataItems = function (items) {
  this.userDataItems = items;
};

UserInformationItem.prototype.readBytes = function (stream, length) {
  const items = [];
  const pdu = this.load(stream);

  do {
    items.push(pdu);
  } while (pdu === this.load(stream));
  this.setUserDataItems(items);
};

UserInformationItem.prototype.getFields = function () {
  const f = [];

  this.userDataItems.forEach(function (userData) {
    f.push(userData);
  });

  return UserInformationItem.super_.prototype.getFields.call(this, f);
};

UserInformationItem.prototype.buffer = function () {
  return UserInformationItem.super_.prototype.buffer.call(this);
};

const ImplementationClassUIDItem = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_IMPLEMENTATION_UID;
  Item.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(ImplementationClassUIDItem, Item);

ImplementationClassUIDItem.prototype.setImplementationClassUID = function (id) {
  this.implementationClassUID = id;
};

ImplementationClassUIDItem.prototype.readBytes = function (stream, length) {
  const uid = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_ASCII, length);

  this.setImplementationClassUID(uid);
};

ImplementationClassUIDItem.prototype.getFields = function () {
  return ImplementationClassUIDItem.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["StringField"](this.implementationClassUID)]);
};

ImplementationClassUIDItem.prototype.buffer = function () {
  return ImplementationClassUIDItem.super_.prototype.buffer.call(this);
};

const ImplementationVersionNameItem = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_IMPLEMENTATION_VERSION;
  Item.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(ImplementationVersionNameItem, Item);

ImplementationVersionNameItem.prototype.setImplementationVersionName = function (name) {
  this.implementationVersionName = name;
};

ImplementationVersionNameItem.prototype.readBytes = function (stream, length) {
  const name = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_ASCII, length);

  this.setImplementationVersionName(name);
};

ImplementationVersionNameItem.prototype.getFields = function () {
  return ImplementationVersionNameItem.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["StringField"](this.implementationVersionName)]);
};

ImplementationVersionNameItem.prototype.buffer = function () {
  return ImplementationVersionNameItem.super_.prototype.buffer.call(this);
};

const MaximumLengthItem = function () {
  this.type = _constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].ITEM_TYPE_MAXIMUM_LENGTH;
  this.maximumLengthReceived = 32768;
  Item.call(this);
};

util__WEBPACK_IMPORTED_MODULE_1___default.a.inherits(MaximumLengthItem, Item);

MaximumLengthItem.prototype.setMaximumLengthReceived = function (length) {
  this.maximumLengthReceived = length;
};

MaximumLengthItem.prototype.readBytes = function (stream, length) {
  const l = stream.read(_constants_js__WEBPACK_IMPORTED_MODULE_3__["default"].TYPE_UINT32);

  this.setMaximumLengthReceived(l);
};

MaximumLengthItem.prototype.getFields = function () {
  return MaximumLengthItem.super_.prototype.getFields.call(this, [new _Field_js__WEBPACK_IMPORTED_MODULE_5__["UInt32Field"](this.maximumLengthReceived)]);
};

MaximumLengthItem.prototype.buffer = function () {
  return MaximumLengthItem.super_.prototype.buffer.call(this);
};




/***/ }),

/***/ "./RWStream.js":
/*!*********************!*\
  !*** ./RWStream.js ***!
  \*********************/
/*! exports provided: calcLength, ReadStream, WriteStream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcLength", function() { return calcLength; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReadStream", function() { return ReadStream; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WriteStream", function() { return WriteStream; });
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ "util");
/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ "./constants.js");



const isString = function (type) {
  if (type === _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII || type === _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_HEX) {
    return true;
  }

  return false;

};

const calcLength = function (type, value) {
  let size = NaN;

  switch (type) {
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_HEX : size = Buffer.byteLength(value, 'hex'); break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII : size = Buffer.byteLength(value, 'ascii'); break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT8 : size = 1; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16 : size = 2; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32 : size = 4; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_FLOAT : size = 4; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_DOUBLE : size = 8; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT8 : size = 1; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT16 : size = 2; break;
  case _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT32 : size = 4; break;
  default :break;
  }

  return size;
};

const RWStream = function () {
  this.endian = _constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN;
};

RWStream.prototype.setEndian = function (endian) {
  this.endian = endian;
};

RWStream.prototype.getEncoding = function (type) {
  return RWStream.encodings[type];
};

RWStream.prototype.getWriteType = function (type) {
  return RWStream.writes[this.endian][type];
};

RWStream.prototype.getReadType = function (type) {
  return RWStream.reads[this.endian][type];
};

const WriteStream = function () {
  RWStream.call(this);
  this.defaultBufferSize = 625000; // 512 bytes
  this.rawBuffer = Buffer.alloc(this.defaultBufferSize);
  this.offset = 0;
  this.contentSize = 0;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(WriteStream, RWStream);

WriteStream.prototype.increment = function (add) {
  this.offset += add;
  if (this.offset > this.contentSize) {
    this.contentSize = this.offset;
  }
};

WriteStream.prototype.size = function () {
  return this.contentSize;
};

WriteStream.prototype.skip = function (amount) {
  this.increment(amount);
};

WriteStream.prototype.checkSize = function (length) {
  if (this.offset + length > this.rawBuffer.length) {
    // We need more size, copying old one to new buffer
    let oldLength = this.rawBuffer.length,
      newBuffer = Buffer.alloc(oldLength + length + (oldLength / 2));

    this.rawBuffer.copy(newBuffer, 0, 0, this.contentSize);
    this.rawBuffer = newBuffer;
  }
};

WriteStream.prototype.writeToBuffer = function (type, value, length) {
  if (value === '' || value === null) {
    return;
  }

  this.checkSize(length);
  this.rawBuffer[this.getWriteType(type)](value, this.offset);
  this.increment(length);
};

WriteStream.prototype.writeRawBuffer = function (source, start, length) {
  if (!source) {
    return;
  }
  this.checkSize(length);
  source.copy(this.rawBuffer, this.offset, start, length);
  this.increment(length);
};

WriteStream.prototype.write = function (type, value) {
  if (isString(type)) {
    this.writeString(value, type);
  } else {
    this.writeToBuffer(type, value, calcLength(type));
  }
};

WriteStream.prototype.writeString = function (string, type) {
  let encoding = this.getEncoding(type),
    length = Buffer.byteLength(string, encoding);

  this.rawBuffer.write(string, this.offset, length, encoding);
  this.increment(length);
};

WriteStream.prototype.buffer = function () {
  return this.rawBuffer.slice(0, this.contentSize);
};

WriteStream.prototype.toReadBuffer = function () {
  return new ReadStream(this.buffer());
};

WriteStream.prototype.concat = function (newStream) {
  const newSize = this.size() + newStream.size();

  this.rawBuffer = Buffer.concat([this.buffer(), newStream.buffer()], newSize);
  this.contentSize = newSize;
  this.offset = newSize;
};

const ReadStream = function (buffer) {
  RWStream.call(this);
  this.rawBuffer = buffer;
  this.offset = 0;
};

util__WEBPACK_IMPORTED_MODULE_0___default.a.inherits(ReadStream, RWStream);

ReadStream.prototype.size = function () {
  return this.rawBuffer.length;
};

ReadStream.prototype.increment = function (add) {
  this.offset += add;
};

ReadStream.prototype.more = function (length) {
  const newBuf = this.rawBuffer.slice(this.offset, this.offset + length);

  this.increment(length);

  return new ReadStream(newBuf);
};

ReadStream.prototype.reset = function () {
  this.offset = 0;

  return this;
};

ReadStream.prototype.end = function () {
  return this.offset >= this.size();
};

ReadStream.prototype.readFromBuffer = function (type, length) {
  // This.checkSize(length);
  // If (this.offset + length > this.rawBuffer.length) throw ("out of bound " + this.offset + "," + length + "," + this.rawBuffer.length);
  const value = this.rawBuffer[this.getReadType(type)](this.offset);

  this.increment(length);

  return value;
};

ReadStream.prototype.read = function (type, length) {
  let value = null;

  if (isString(type)) {
    value = this.readString(length, type);
  } else {
    value = this.readFromBuffer(type, calcLength(type));
  }

  return value;
};

ReadStream.prototype.readString = function (length, type) {
  let encoding = this.getEncoding(type),
    str = this.rawBuffer.toString(encoding, this.offset, this.offset + length);

  this.increment(length);

  return str;
};

ReadStream.prototype.buffer = function () {
  return this.rawBuffer;
};

ReadStream.prototype.concat = function (newStream) {
  const newSize = this.size() + newStream.size();

  this.rawBuffer = Buffer.concat([this.buffer(), newStream.buffer()], newSize);
  this.contentSize = newSize;
  this.offset = newSize;
};

RWStream.writes = {};
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN] = {};
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT8] = 'writeUInt8';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16] = 'writeUInt16BE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32] = 'writeUInt32BE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT8] = 'writeInt8';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT16] = 'writeInt16BE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT32] = 'writeInt32BE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_FLOAT] = 'writeFloatBE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_DOUBLE] = 'writeDoubleBE';

RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN] = {};
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT8] = 'writeUInt8';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16] = 'writeUInt16LE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32] = 'writeUInt32LE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT8] = 'writeInt8';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT16] = 'writeInt16LE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT32] = 'writeInt32LE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_FLOAT] = 'writeFloatLE';
RWStream.writes[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_DOUBLE] = 'writeDoubleLE';

RWStream.reads = {};
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN] = {};
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT8] = 'readUInt8';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16] = 'readUInt16BE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32] = 'readUInt32BE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT8] = 'readInt8';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT16] = 'readInt16BE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT32] = 'readInt32BE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_FLOAT] = 'readFloatBE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].BIG_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_DOUBLE] = 'readDoubleBE';

RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN] = {};
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT8] = 'readUInt8';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT16] = 'readUInt16LE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_UINT32] = 'readUInt32LE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT8] = 'readInt8';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT16] = 'readInt16LE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_INT32] = 'readInt32LE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_FLOAT] = 'readFloatLE';
RWStream.reads[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].LITTLE_ENDIAN][_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_DOUBLE] = 'readDoubleLE';

RWStream.encodings = {};
RWStream.encodings[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_HEX] = 'hex';
RWStream.encodings[_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].TYPE_ASCII] = 'ascii';




/***/ }),

/***/ "./constants.js":
/*!**********************!*\
  !*** ./constants.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  IMPLEM_UID: '1.2.840.0.1.3680045.8.641',
  IMPLEM_VERSION: 'OHIF-DCM-0.1',
  DEFAULT_MAX_PACKAGE_SIZE: 32768,
  APPLICATION_CONTEXT_NAME: '1.2.840.10008.3.1.1.1',
  PROTOCOL_VERSION: '0001',
  ITEM_TYPE_RESERVED: '00',
  ITEM_TYPE_APPLICATION_CONTEXT: '10',
  ITEM_TYPE_PDU_ASSOCIATE_RQ: '01',
  ITEM_TYPE_PDU_ASSOCIATE_AC: '02',
  ITEM_TYPE_PDU_PDATA: '04',
  ITEM_TYPE_PDU_RELEASE_RQ: '05',
  ITEM_TYPE_PDU_RELEASE_RP: '06',
  ITEM_TYPE_PDU_AABORT: '07',
  ITEM_TYPE_PRESENTATION_CONTEXT: '20',
  ITEM_TYPE_PRESENTATION_CONTEXT_AC: '21',
  ITEM_TYPE_ABSTRACT_CONTEXT: '30',
  ITEM_TYPE_TRANSFER_CONTEXT: '40',
  ITEM_TYPE_USER_INFORMATION: '50',
  ITEM_TYPE_MAXIMUM_LENGTH: '51',
  ITEM_TYPE_IMPLEMENTATION_UID: '52',
  ITEM_TYPE_IMPLEMENTATION_VERSION: '55',
  IMPLICIT_LITTLE_ENDIAN: '1.2.840.10008.1.2',
  EXPLICIT_LITTLE_ENDIAN: '1.2.840.10008.1.2.1',
  EXPLICIT_BIG_ENDIAN: '1.2.840.10008.1.2.2',
  SOP_PATIENT_ROOT_FIND: '1.2.840.10008.5.1.4.1.2.1.1',
  SOP_PATIENT_ROOT_MOVE: '1.2.840.10008.5.1.4.1.2.1.2',
  SOP_PATIENT_ROOT_GET: '1.2.840.10008.5.1.4.1.2.1.3',
  SOP_STUDY_ROOT_FIND: '1.2.840.10008.5.1.4.1.2.2.1',
  SOP_STUDY_ROOT_MOVE: '1.2.840.10008.5.1.4.1.2.2.2',
  SOP_STUDY_ROOT_GET: '1.2.840.10008.5.1.4.1.2.2.3',
  SOP_VERIFICATION: '1.2.840.10008.1.1',
  SOP_HANGING_PROTOCOL_FIND: '1.2.840.10008.5.1.4.38.2',
  SOP_MR_IMAGE_STORAGE: '1.2.840.10008.5.1.4.1.1.4',
  TYPE_ASCII: 1,
  TYPE_HEX: 2,
  TYPE_UINT8: 3,
  TYPE_UINT16: 4,
  TYPE_UINT32: 5,
  TYPE_COMPOSITE: 6,
  TYPE_FLOAT: 7,
  TYPE_DOUBLE: 8,
  TYPE_INT8: 9,
  TYPE_INT16: 10,
  TYPE_INT32: 11,
  TYPE_BUFFER: 12,
  RESULT_REASON_ACCEPTANCE: 0,
  RESULT_REASON_USER_REJECTION: 1,
  RESULT_REASON_NO_REASON: 2,
  RESULT_REASON_ABSTRACT_NOT_SUPPORTED: 3,
  RESULT_REASON_TRANSFER_NOT_SUPPORTED: 4,
  DEFAULT_MESSAGE_ID: 1,
  LITTLE_ENDIAN: 1,
  BIG_ENDIAN: 2,
  VM_SINGLE: 1,
  VM_TWO: 3,
  VM_THREE: 4,
  VM_FOUR: 5,
  VM_1N: 6,
  VM_2N: 7,
  VM_3N: 8,
  VM_6N: 9,
  VM_3_3N: 10,
  VM_2_2N: 11,
  VM_16: 12,
  VM_1_2: 13,
  VM_1_3: 18,
  VM_SIX: 14,
  VM_NINE: 15,
  VM_1_32: 16,
  VM_1_99: 17,
  PRIORITY_LOW: 0x2,
  PRIORITY_MEDIUM: 0x0,
  PRIORITY_HIGH: 0x1,
  DATA_SET_PRESENT: 1,
  DATE_SET_ABSENCE: 0x0101,
  DATA_TYPE_COMMAND: 1,
  DATA_TYPE_DATA: 0,
  DATA_IS_LAST: 1,
  DATA_NOT_LAST: 0,
  SOURCE_SERVICE_USER: 0,
  SOURCE_SERVICE_PROVIDER: 2,
  QUERY_RETRIEVE_LEVEL_PATIENT: 'PATIENT',
  QUERY_RETRIEVE_LEVEL_STUDY: 'STUDY',
  QUERY_RETRIEVE_LEVEL_SERIES: 'SERIES',
  QUERY_RETRIEVE_LEVEL_IMAGE: 'IMAGE',
  VALUE_LENGTH_UNDEFINED: 0xffffffff,
  STATUS_SUCCESS: 0x0000,
  STATUS_CANCEL: 0xfe00,
  STATUS_CFIND_CONT_OK: 0xff00,
  STATUS_CFIND_CONT_WARN: 0xff01,
  COMMAND_C_GET_RSP: 0x8010,
  COMMAND_C_MOVE_RSP: 0x8021,
  COMMAND_C_GET_RQ: 0x10,
  COMMAND_C_STORE_RQ: 0x01,
  COMMAND_C_FIND_RSP: 0x8020,
  COMMAND_C_MOVE_RQ: 0x21,
  COMMAND_C_FIND_RQ: 0x20,
  COMMAND_C_STORE_RSP: 0x8001
});


/***/ }),

/***/ "./elements_data.js":
/*!**************************!*\
  !*** ./elements_data.js ***!
  \**************************/
/*! exports provided: dicomNDict, dicomVDict */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dicomNDict", function() { return dicomNDict; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dicomVDict", function() { return dicomVDict; });
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ "./constants.js");


const dicomNDict = {
  0x00020000: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FileMetaInformationGroupLength' },
  0x00020001: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FileMetaInformationVersion' },
  0x00020002: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MediaStorageSOPClassUID' },
  0x00020003: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MediaStorageSOPInstanceUID' },
  0x00020010: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransferSyntaxUID' },
  0x00020012: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplementationClassUID' },
  0x00020013: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplementationVersionName' },
  0x00020016: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicationEntityTitle' },
  0x00020100: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrivateInformationCreatorUID' },
  0x00020102: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrivateInformation' },
  0x00080001: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LengthToEnd' },
  0x00080005: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SpecificCharacterSet' },
  0x00080006: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LanguageCodeSequence' },
  0x00080008: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2N,
    keyword: 'ImageType' },
  0x00080010: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecognitionCode' },
  0x00080012: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InstanceCreationDate' },
  0x00080013: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InstanceCreationTime' },
  0x00080014: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InstanceCreatorUID' },
  0x00080016: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SOPClassUID' },
  0x00080018: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SOPInstanceUID' },
  0x0008001A: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'RelatedGeneralSOPClassUID' },
  0x0008001B: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OriginalSpecializedSOPClassUID' },
  0x00080020: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyDate' },
  0x00080021: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SeriesDate' },
  0x00080022: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionDate' },
  0x00080023: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentDate' },
  0x00080024: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayDate' },
  0x00080025: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveDate' },
  0x0008002A: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionDateTime' },
  0x00080030: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyTime' },
  0x00080031: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SeriesTime' },
  0x00080032: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionTime' },
  0x00080033: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentTime' },
  0x00080034: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayTime' },
  0x00080035: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveTime' },
  0x00080040: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataSetType' },
  0x00080041: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataSetSubtype' },
  0x00080042: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NuclearMedicineSeriesType' },
  0x00080050: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AccessionNumber' },
  0x00080051: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssuerOfAccessionNumberSequence' },
  0x00080052: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'QueryRetrieveLevel' },
  0x00080054: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'RetrieveAETitle' },
  0x00080056: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InstanceAvailability' },
  0x00080058: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FailedSOPInstanceUIDList' },
  0x00080060: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Modality' },
  0x00080061: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ModalitiesInStudy' },
  0x00080062: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SOPClassesInStudy' },
  0x00080064: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConversionType' },
  0x00080068: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationIntentType' },
  0x00080070: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Manufacturer' },
  0x00080080: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InstitutionName' },
  0x00080081: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InstitutionAddress' },
  0x00080082: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InstitutionCodeSequence' },
  0x00080090: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferringPhysicianName' },
  0x00080092: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferringPhysicianAddress' },
  0x00080094: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ReferringPhysicianTelephoneNumbers' },
  0x00080096: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferringPhysicianIdentificationSequence' },
  0x00080100: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodeValue' },
  0x00080102: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodingSchemeDesignator' },
  0x00080103: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodingSchemeVersion' },
  0x00080104: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodeMeaning' },
  0x00080105: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MappingResource' },
  0x00080106: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContextGroupVersion' },
  0x00080107: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContextGroupLocalVersion' },
  0x0008010B: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContextGroupExtensionFlag' },
  0x0008010C: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodingSchemeUID' },
  0x0008010D: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContextGroupExtensionCreatorUID' },
  0x0008010F: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContextIdentifier' },
  0x00080110: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodingSchemeIdentificationSequence' },
  0x00080112: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodingSchemeRegistry' },
  0x00080114: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodingSchemeExternalID' },
  0x00080115: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodingSchemeName' },
  0x00080116: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodingSchemeResponsibleOrganization' },
  0x00080117: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContextUID' },
  0x00080201: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimezoneOffsetFromUTC' },
  0x00081000: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NetworkID' },
  0x00081010: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StationName' },
  0x00081030: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyDescription' },
  0x00081032: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureCodeSequence' },
  0x0008103E: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SeriesDescription' },
  0x0008103F: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SeriesDescriptionCodeSequence' },
  0x00081040: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InstitutionalDepartmentName' },
  0x00081048: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PhysiciansOfRecord' },
  0x00081049: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhysiciansOfRecordIdentificationSequence' },
  0x00081050: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PerformingPhysicianName' },
  0x00081052: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformingPhysicianIdentificationSequence' },
  0x00081060: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'NameOfPhysiciansReadingStudy' },
  0x00081062: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhysiciansReadingStudyIdentificationSequence' },
  0x00081070: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OperatorsName' },
  0x00081072: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OperatorIdentificationSequence' },
  0x00081080: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'AdmittingDiagnosesDescription' },
  0x00081084: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AdmittingDiagnosesCodeSequence' },
  0x00081090: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ManufacturerModelName' },
  0x00081100: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedResultsSequence' },
  0x00081110: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedStudySequence' },
  0x00081111: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedPerformedProcedureStepSequence' },
  0x00081115: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSeriesSequence' },
  0x00081120: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedPatientSequence' },
  0x00081125: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedVisitSequence' },
  0x00081130: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedOverlaySequence' },
  0x00081134: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedStereometricInstanceSequence' },
  0x0008113A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedWaveformSequence' },
  0x00081140: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedImageSequence' },
  0x00081145: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedCurveSequence' },
  0x0008114A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedInstanceSequence' },
  0x0008114B: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedRealWorldValueMappingInstanceSequence' },
  0x00081150: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSOPClassUID' },
  0x00081155: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSOPInstanceUID' },
  0x0008115A: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SOPClassesSupported' },
  0x00081160: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ReferencedFrameNumber' },
  0x00081161: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SimpleFrameList' },
  0x00081162: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_3_3N,
    keyword: 'CalculatedFrameList' },
  0x00081163: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'TimeRange' },
  0x00081164: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameExtractionSequence' },
  0x00081167: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiFrameSourceSOPInstanceUID' },
  0x00081195: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransactionUID' },
  0x00081197: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FailureReason' },
  0x00081198: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FailedSOPSequence' },
  0x00081199: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSOPSequence' },
  0x00081200: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudiesContainingOtherReferencedInstancesSequence' },
  0x00081250: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelatedSeriesSequence' },
  0x00082110: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LossyImageCompressionRetired' },
  0x00082111: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DerivationDescription' },
  0x00082112: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceImageSequence' },
  0x00082120: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StageName' },
  0x00082122: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StageNumber' },
  0x00082124: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfStages' },
  0x00082127: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ViewName' },
  0x00082128: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ViewNumber' },
  0x00082129: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfEventTimers' },
  0x0008212A: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfViewsInStage' },
  0x00082130: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'EventElapsedTimes' },
  0x00082132: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'EventTimerNames' },
  0x00082133: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EventTimerSequence' },
  0x00082134: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EventTimeOffset' },
  0x00082135: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EventCodeSequence' },
  0x00082142: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartTrim' },
  0x00082143: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StopTrim' },
  0x00082144: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecommendedDisplayFrameRate' },
  0x00082200: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerPosition' },
  0x00082204: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerOrientation' },
  0x00082208: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicStructure' },
  0x00082218: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicRegionSequence' },
  0x00082220: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicRegionModifierSequence' },
  0x00082228: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrimaryAnatomicStructureSequence' },
  0x00082229: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicStructureSpaceOrRegionSequence' },
  0x00082230: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrimaryAnatomicStructureModifierSequence' },
  0x00082240: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerPositionSequence' },
  0x00082242: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerPositionModifierSequence' },
  0x00082244: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerOrientationSequence' },
  0x00082246: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerOrientationModifierSequence' },
  0x00082251: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicStructureSpaceOrRegionCodeSequenceTrial' },
  0x00082253: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicPortalOfEntranceCodeSequenceTrial' },
  0x00082255: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicApproachDirectionCodeSequenceTrial' },
  0x00082256: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicPerspectiveDescriptionTrial' },
  0x00082257: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicPerspectiveCodeSequenceTrial' },
  0x00082258: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicLocationOfExaminingInstrumentDescriptionTrial' },
  0x00082259: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial' },
  0x0008225A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial' },
  0x0008225C: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial' },
  0x00083001: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlternateRepresentationSequence' },
  0x00083010: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IrradiationEventUID' },
  0x00084000: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IdentifyingComments' },
  0x00089007: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'FrameType' },
  0x00089092: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedImageEvidenceSequence' },
  0x00089121: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedRawDataSequence' },
  0x00089123: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CreatorVersionUID' },
  0x00089124: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DerivationImageSequence' },
  0x00089154: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceImageEvidenceSequence' },
  0x00089205: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelPresentation' },
  0x00089206: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VolumetricProperties' },
  0x00089207: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VolumeBasedCalculationTechnique' },
  0x00089208: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ComplexImageComponent' },
  0x00089209: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionContrast' },
  0x00089215: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DerivationCodeSequence' },
  0x00089237: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedPresentationStateSequence' },
  0x00089410: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedOtherPlaneSequence' },
  0x00089458: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameDisplaySequence' },
  0x00089459: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecommendedDisplayFrameRateInFloat' },
  0x00089460: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SkipFrameRangeFlag' },
  0x00100010: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientName' },
  0x00100020: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientID' },
  0x00100021: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssuerOfPatientID' },
  0x00100022: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TypeOfPatientID' },
  0x00100024: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssuerOfPatientIDQualifiersSequence' },
  0x00100030: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientBirthDate' },
  0x00100032: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientBirthTime' },
  0x00100040: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSex' },
  0x00100050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientInsurancePlanCodeSequence' },
  0x00100101: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientPrimaryLanguageCodeSequence' },
  0x00100102: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientPrimaryLanguageModifierCodeSequence' },
  0x00101000: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OtherPatientIDs' },
  0x00101001: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OtherPatientNames' },
  0x00101002: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OtherPatientIDsSequence' },
  0x00101005: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientBirthName' },
  0x00101010: { vr: 'AS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientAge' },
  0x00101020: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSize' },
  0x00101021: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSizeCodeSequence' },
  0x00101030: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientWeight' },
  0x00101040: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientAddress' },
  0x00101050: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'InsurancePlanIdentification' },
  0x00101060: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientMotherBirthName' },
  0x00101080: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MilitaryRank' },
  0x00101081: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BranchOfService' },
  0x00101090: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MedicalRecordLocator' },
  0x00102000: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MedicalAlerts' },
  0x00102110: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'Allergies' },
  0x00102150: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CountryOfResidence' },
  0x00102152: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegionOfResidence' },
  0x00102154: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PatientTelephoneNumbers' },
  0x00102160: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EthnicGroup' },
  0x00102180: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Occupation' },
  0x001021A0: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SmokingStatus' },
  0x001021B0: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AdditionalPatientHistory' },
  0x001021C0: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PregnancyStatus' },
  0x001021D0: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LastMenstrualDate' },
  0x001021F0: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientReligiousPreference' },
  0x00102201: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSpeciesDescription' },
  0x00102202: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSpeciesCodeSequence' },
  0x00102203: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSexNeutered' },
  0x00102210: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnatomicalOrientationType' },
  0x00102292: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientBreedDescription' },
  0x00102293: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientBreedCodeSequence' },
  0x00102294: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BreedRegistrationSequence' },
  0x00102295: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BreedRegistrationNumber' },
  0x00102296: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BreedRegistryCodeSequence' },
  0x00102297: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResponsiblePerson' },
  0x00102298: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResponsiblePersonRole' },
  0x00102299: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResponsibleOrganization' },
  0x00104000: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientComments' },
  0x00109431: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExaminedBodyThickness' },
  0x00120010: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialSponsorName' },
  0x00120020: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialProtocolID' },
  0x00120021: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialProtocolName' },
  0x00120030: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialSiteID' },
  0x00120031: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialSiteName' },
  0x00120040: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialSubjectID' },
  0x00120042: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialSubjectReadingID' },
  0x00120050: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialTimePointID' },
  0x00120051: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialTimePointDescription' },
  0x00120060: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialCoordinatingCenterName' },
  0x00120062: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientIdentityRemoved' },
  0x00120063: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DeidentificationMethod' },
  0x00120064: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeidentificationMethodCodeSequence' },
  0x00120071: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialSeriesID' },
  0x00120072: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialSeriesDescription' },
  0x00120081: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialProtocolEthicsCommitteeName' },
  0x00120082: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber' },
  0x00120083: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConsentForClinicalTrialUseSequence' },
  0x00120084: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistributionType' },
  0x00120085: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConsentForDistributionFlag' },
  0x00140023: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CADFileFormat' },
  0x00140024: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ComponentReferenceSystem' },
  0x00140025: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ComponentManufacturingProcedure' },
  0x00140028: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ComponentManufacturer' },
  0x00140030: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaterialThickness' },
  0x00140032: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaterialPipeDiameter' },
  0x00140034: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaterialIsolationDiameter' },
  0x00140042: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaterialGrade' },
  0x00140044: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaterialPropertiesFileID' },
  0x00140045: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaterialPropertiesFileFormat' },
  0x00140046: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaterialNotes' },
  0x00140050: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ComponentShape' },
  0x00140052: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurvatureType' },
  0x00140054: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OuterDiameter' },
  0x00140056: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InnerDiameter' },
  0x00141010: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ActualEnvironmentalConditions' },
  0x00141020: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExpiryDate' },
  0x00141040: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnvironmentalConditions' },
  0x00142002: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EvaluatorSequence' },
  0x00142004: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EvaluatorNumber' },
  0x00142006: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EvaluatorName' },
  0x00142008: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EvaluationAttempt' },
  0x00142012: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndicationSequence' },
  0x00142014: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndicationNumber' },
  0x00142016: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndicationLabel' },
  0x00142018: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndicationDescription' },
  0x0014201A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'IndicationType' },
  0x0014201C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndicationDisposition' },
  0x0014201E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndicationROISequence' },
  0x00142030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndicationPhysicalPropertySequence' },
  0x00142032: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PropertyLabel' },
  0x00142202: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemNumberOfAxes' },
  0x00142204: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemAxesSequence' },
  0x00142206: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemAxisDescription' },
  0x00142208: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemDataSetMapping' },
  0x0014220A: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemAxisNumber' },
  0x0014220C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemAxisType' },
  0x0014220E: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemAxisUnits' },
  0x00142210: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemAxisValues' },
  0x00142220: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemTransformSequence' },
  0x00142222: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransformDescription' },
  0x00142224: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransformNumberOfAxes' },
  0x00142226: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TransformOrderOfAxes' },
  0x00142228: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransformedAxisUnits' },
  0x0014222A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CoordinateSystemTransformRotationAndScaleMatrix' },
  0x0014222C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CoordinateSystemTransformTranslationMatrix' },
  0x00143011: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InternalDetectorFrameTime' },
  0x00143012: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFramesIntegrated' },
  0x00143020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorTemperatureSequence' },
  0x00143022: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SensorName' },
  0x00143024: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HorizontalOffsetOfSensor' },
  0x00143026: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerticalOffsetOfSensor' },
  0x00143028: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SensorTemperature' },
  0x00143040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DarkCurrentSequence' },
  0x00143050: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DarkCurrentCounts' },
  0x00143060: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GainCorrectionReferenceSequence' },
  0x00143070: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AirCounts' },
  0x00143071: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'KVUsedInGainCalibration' },
  0x00143072: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MAUsedInGainCalibration' },
  0x00143073: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFramesUsedForIntegration' },
  0x00143074: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilterMaterialUsedInGainCalibration' },
  0x00143075: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilterThicknessUsedInGainCalibration' },
  0x00143076: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DateOfGainCalibration' },
  0x00143077: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeOfGainCalibration' },
  0x00143080: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BadPixelImage' },
  0x00143099: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalibrationNotes' },
  0x00144002: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PulserEquipmentSequence' },
  0x00144004: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PulserType' },
  0x00144006: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PulserNotes' },
  0x00144008: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReceiverEquipmentSequence' },
  0x0014400A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AmplifierType' },
  0x0014400C: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReceiverNotes' },
  0x0014400E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PreAmplifierEquipmentSequence' },
  0x0014400F: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PreAmplifierNotes' },
  0x00144010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransmitTransducerSequence' },
  0x00144011: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReceiveTransducerSequence' },
  0x00144012: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfElements' },
  0x00144013: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ElementShape' },
  0x00144014: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ElementDimensionA' },
  0x00144015: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ElementDimensionB' },
  0x00144016: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ElementPitch' },
  0x00144017: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredBeamDimensionA' },
  0x00144018: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredBeamDimensionB' },
  0x00144019: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LocationOfMeasuredBeamDiameter' },
  0x0014401A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalFrequency' },
  0x0014401B: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredCenterFrequency' },
  0x0014401C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredBandwidth' },
  0x00144020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PulserSettingsSequence' },
  0x00144022: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PulseWidth' },
  0x00144024: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExcitationFrequency' },
  0x00144026: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModulationType' },
  0x00144028: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Damping' },
  0x00144030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReceiverSettingsSequence' },
  0x00144031: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquiredSoundpathLength' },
  0x00144032: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionCompressionType' },
  0x00144033: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionSampleSize' },
  0x00144034: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RectifierSmoothing' },
  0x00144035: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DACSequence' },
  0x00144036: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DACType' },
  0x00144038: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DACGainPoints' },
  0x0014403A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DACTimePoints' },
  0x0014403C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DACAmplitude' },
  0x00144040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PreAmplifierSettingsSequence' },
  0x00144050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransmitTransducerSettingsSequence' },
  0x00144051: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReceiveTransducerSettingsSequence' },
  0x00144052: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IncidentAngle' },
  0x00144054: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CouplingTechnique' },
  0x00144056: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CouplingMedium' },
  0x00144057: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CouplingVelocity' },
  0x00144058: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CrystalCenterLocationX' },
  0x00144059: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CrystalCenterLocationZ' },
  0x0014405A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SoundPathLength' },
  0x0014405C: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DelayLawIdentifier' },
  0x00144060: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GateSettingsSequence' },
  0x00144062: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GateThreshold' },
  0x00144064: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VelocityOfSound' },
  0x00144070: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalibrationSettingsSequence' },
  0x00144072: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalibrationProcedure' },
  0x00144074: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureVersion' },
  0x00144076: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureCreationDate' },
  0x00144078: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureExpirationDate' },
  0x0014407A: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureLastModifiedDate' },
  0x0014407C: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CalibrationTime' },
  0x0014407E: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CalibrationDate' },
  0x00145002: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LINACEnergy' },
  0x00145004: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LINACOutput' },
  0x00180010: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusAgent' },
  0x00180012: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusAgentSequence' },
  0x00180014: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusAdministrationRouteSequence' },
  0x00180015: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BodyPartExamined' },
  0x00180020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ScanningSequence' },
  0x00180021: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SequenceVariant' },
  0x00180022: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ScanOptions' },
  0x00180023: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRAcquisitionType' },
  0x00180024: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SequenceName' },
  0x00180025: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AngioFlag' },
  0x00180026: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterventionDrugInformationSequence' },
  0x00180027: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterventionDrugStopTime' },
  0x00180028: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterventionDrugDose' },
  0x00180029: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterventionDrugCodeSequence' },
  0x0018002A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AdditionalDrugSequence' },
  0x00180030: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'Radionuclide' },
  0x00180031: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Radiopharmaceutical' },
  0x00180032: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnergyWindowCenterline' },
  0x00180033: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'EnergyWindowTotalWidth' },
  0x00180034: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterventionDrugName' },
  0x00180035: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterventionDrugStartTime' },
  0x00180036: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterventionSequence' },
  0x00180037: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TherapyType' },
  0x00180038: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterventionStatus' },
  0x00180039: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TherapyDescription' },
  0x0018003A: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterventionDescription' },
  0x00180040: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CineRate' },
  0x00180042: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InitialCineRunState' },
  0x00180050: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SliceThickness' },
  0x00180060: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'KVP' },
  0x00180070: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CountsAccumulated' },
  0x00180071: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionTerminationCondition' },
  0x00180072: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EffectiveDuration' },
  0x00180073: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionStartCondition' },
  0x00180074: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionStartConditionData' },
  0x00180075: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionTerminationConditionData' },
  0x00180080: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RepetitionTime' },
  0x00180081: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EchoTime' },
  0x00180082: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InversionTime' },
  0x00180083: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfAverages' },
  0x00180084: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagingFrequency' },
  0x00180085: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagedNucleus' },
  0x00180086: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'EchoNumbers' },
  0x00180087: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MagneticFieldStrength' },
  0x00180088: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpacingBetweenSlices' },
  0x00180089: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPhaseEncodingSteps' },
  0x00180090: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataCollectionDiameter' },
  0x00180091: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EchoTrainLength' },
  0x00180093: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PercentSampling' },
  0x00180094: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PercentPhaseFieldOfView' },
  0x00180095: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelBandwidth' },
  0x00181000: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviceSerialNumber' },
  0x00181002: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviceUID' },
  0x00181003: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviceID' },
  0x00181004: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlateID' },
  0x00181005: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneratorID' },
  0x00181006: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GridID' },
  0x00181007: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CassetteID' },
  0x00181008: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryID' },
  0x00181010: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SecondaryCaptureDeviceID' },
  0x00181011: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HardcopyCreationDeviceID' },
  0x00181012: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DateOfSecondaryCapture' },
  0x00181014: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeOfSecondaryCapture' },
  0x00181016: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SecondaryCaptureDeviceManufacturer' },
  0x00181017: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HardcopyDeviceManufacturer' },
  0x00181018: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SecondaryCaptureDeviceManufacturerModelName' },
  0x00181019: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SecondaryCaptureDeviceSoftwareVersions' },
  0x0018101A: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'HardcopyDeviceSoftwareVersion' },
  0x0018101B: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HardcopyDeviceManufacturerModelName' },
  0x00181020: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SoftwareVersions' },
  0x00181022: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VideoImageFormatAcquired' },
  0x00181023: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DigitalImageFormatAcquired' },
  0x00181030: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProtocolName' },
  0x00181040: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusRoute' },
  0x00181041: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusVolume' },
  0x00181042: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusStartTime' },
  0x00181043: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusStopTime' },
  0x00181044: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusTotalDose' },
  0x00181045: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SyringeCounts' },
  0x00181046: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ContrastFlowRate' },
  0x00181047: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ContrastFlowDuration' },
  0x00181048: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusIngredient' },
  0x00181049: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusIngredientConcentration' },
  0x00181050: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpatialResolution' },
  0x00181060: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TriggerTime' },
  0x00181061: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TriggerSourceOrType' },
  0x00181062: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalInterval' },
  0x00181063: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameTime' },
  0x00181064: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CardiacFramingType' },
  0x00181065: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FrameTimeVector' },
  0x00181066: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameDelay' },
  0x00181067: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageTriggerDelay' },
  0x00181068: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiplexGroupTimeOffset' },
  0x00181069: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TriggerTimeOffset' },
  0x0018106A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SynchronizationTrigger' },
  0x0018106C: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'SynchronizationChannel' },
  0x0018106E: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TriggerSamplePosition' },
  0x00181070: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalRoute' },
  0x00181071: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalVolume' },
  0x00181072: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalStartTime' },
  0x00181073: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalStopTime' },
  0x00181074: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadionuclideTotalDose' },
  0x00181075: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadionuclideHalfLife' },
  0x00181076: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadionuclidePositronFraction' },
  0x00181077: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalSpecificActivity' },
  0x00181078: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalStartDateTime' },
  0x00181079: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalStopDateTime' },
  0x00181080: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeatRejectionFlag' },
  0x00181081: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LowRRValue' },
  0x00181082: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HighRRValue' },
  0x00181083: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntervalsAcquired' },
  0x00181084: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntervalsRejected' },
  0x00181085: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PVCRejection' },
  0x00181086: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SkipBeats' },
  0x00181088: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HeartRate' },
  0x00181090: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CardiacNumberOfImages' },
  0x00181094: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TriggerWindow' },
  0x00181100: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReconstructionDiameter' },
  0x00181110: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistanceSourceToDetector' },
  0x00181111: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistanceSourceToPatient' },
  0x00181114: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EstimatedRadiographicMagnificationFactor' },
  0x00181120: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryDetectorTilt' },
  0x00181121: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryDetectorSlew' },
  0x00181130: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableHeight' },
  0x00181131: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTraverse' },
  0x00181134: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableMotion' },
  0x00181135: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TableVerticalIncrement' },
  0x00181136: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TableLateralIncrement' },
  0x00181137: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TableLongitudinalIncrement' },
  0x00181138: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableAngle' },
  0x0018113A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableType' },
  0x00181140: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RotationDirection' },
  0x00181141: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AngularPosition' },
  0x00181142: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'RadialPosition' },
  0x00181143: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScanArc' },
  0x00181144: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AngularStep' },
  0x00181145: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CenterOfRotationOffset' },
  0x00181146: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'RotationOffset' },
  0x00181147: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FieldOfViewShape' },
  0x00181149: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'FieldOfViewDimensions' },
  0x00181150: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureTime' },
  0x00181151: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRayTubeCurrent' },
  0x00181152: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Exposure' },
  0x00181153: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureInuAs' },
  0x00181154: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AveragePulseWidth' },
  0x00181155: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiationSetting' },
  0x00181156: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RectificationType' },
  0x0018115A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiationMode' },
  0x0018115E: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageAndFluoroscopyAreaDoseProduct' },
  0x00181160: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilterType' },
  0x00181161: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TypeOfFilters' },
  0x00181162: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntensifierSize' },
  0x00181164: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ImagerPixelSpacing' },
  0x00181166: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'Grid' },
  0x00181170: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneratorPower' },
  0x00181180: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CollimatorGridName' },
  0x00181181: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CollimatorType' },
  0x00181182: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'FocalDistance' },
  0x00181183: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'XFocusCenter' },
  0x00181184: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'YFocusCenter' },
  0x00181190: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FocalSpots' },
  0x00181191: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnodeTargetMaterial' },
  0x001811A0: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BodyPartThickness' },
  0x001811A2: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompressionForce' },
  0x00181200: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DateOfLastCalibration' },
  0x00181201: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TimeOfLastCalibration' },
  0x00181210: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ConvolutionKernel' },
  0x00181240: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'UpperLowerPixelValues' },
  0x00181242: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ActualFrameDuration' },
  0x00181243: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CountRate' },
  0x00181244: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PreferredPlaybackSequencing' },
  0x00181250: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReceiveCoilName' },
  0x00181251: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransmitCoilName' },
  0x00181260: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlateType' },
  0x00181261: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhosphorType' },
  0x00181300: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScanVelocity' },
  0x00181301: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'WholeBodyTechnique' },
  0x00181302: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScanLength' },
  0x00181310: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'AcquisitionMatrix' },
  0x00181312: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InPlanePhaseEncodingDirection' },
  0x00181314: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FlipAngle' },
  0x00181315: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VariableFlipAngleFlag' },
  0x00181316: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SAR' },
  0x00181318: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'dBdt' },
  0x00181400: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionDeviceProcessingDescription' },
  0x00181401: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionDeviceProcessingCode' },
  0x00181402: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CassetteOrientation' },
  0x00181403: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CassetteSize' },
  0x00181404: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposuresOnPlate' },
  0x00181405: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelativeXRayExposure' },
  0x00181411: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureIndex' },
  0x00181412: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TargetExposureIndex' },
  0x00181413: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviationIndex' },
  0x00181450: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ColumnAngulation' },
  0x00181460: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TomoLayerHeight' },
  0x00181470: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TomoAngle' },
  0x00181480: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TomoTime' },
  0x00181490: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TomoType' },
  0x00181491: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TomoClass' },
  0x00181495: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTomosynthesisSourceImages' },
  0x00181500: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionerMotion' },
  0x00181508: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionerType' },
  0x00181510: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionerPrimaryAngle' },
  0x00181511: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionerSecondaryAngle' },
  0x00181520: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PositionerPrimaryAngleIncrement' },
  0x00181521: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PositionerSecondaryAngleIncrement' },
  0x00181530: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorPrimaryAngle' },
  0x00181531: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorSecondaryAngle' },
  0x00181600: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_3,
    keyword: 'ShutterShape' },
  0x00181602: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShutterLeftVerticalEdge' },
  0x00181604: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShutterRightVerticalEdge' },
  0x00181606: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShutterUpperHorizontalEdge' },
  0x00181608: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShutterLowerHorizontalEdge' },
  0x00181610: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'CenterOfCircularShutter' },
  0x00181612: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiusOfCircularShutter' },
  0x00181620: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'VerticesOfThePolygonalShutter' },
  0x00181622: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShutterPresentationValue' },
  0x00181623: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShutterOverlayGroup' },
  0x00181624: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ShutterPresentationColorCIELabValue' },
  0x00181700: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_3,
    keyword: 'CollimatorShape' },
  0x00181702: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CollimatorLeftVerticalEdge' },
  0x00181704: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CollimatorRightVerticalEdge' },
  0x00181706: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CollimatorUpperHorizontalEdge' },
  0x00181708: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CollimatorLowerHorizontalEdge' },
  0x00181710: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'CenterOfCircularCollimator' },
  0x00181712: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiusOfCircularCollimator' },
  0x00181720: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'VerticesOfThePolygonalCollimator' },
  0x00181800: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionTimeSynchronized' },
  0x00181801: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeSource' },
  0x00181802: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeDistributionProtocol' },
  0x00181803: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NTPSourceAddress' },
  0x00182001: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PageNumberVector' },
  0x00182002: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FrameLabelVector' },
  0x00182003: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FramePrimaryAngleVector' },
  0x00182004: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FrameSecondaryAngleVector' },
  0x00182005: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SliceLocationVector' },
  0x00182006: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DisplayWindowLabelVector' },
  0x00182010: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'NominalScannedPixelSpacing' },
  0x00182020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DigitizingDeviceTransportDirection' },
  0x00182030: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RotationOfScannedFilm' },
  0x00183100: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IVUSAcquisition' },
  0x00183101: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IVUSPullbackRate' },
  0x00183102: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IVUSGatedRate' },
  0x00183103: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IVUSPullbackStartFrameNumber' },
  0x00183104: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IVUSPullbackStopFrameNumber' },
  0x00183105: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'LesionNumber' },
  0x00184000: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionComments' },
  0x00185000: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OutputPower' },
  0x00185010: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TransducerData' },
  0x00185012: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FocusDepth' },
  0x00185020: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcessingFunction' },
  0x00185021: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PostprocessingFunction' },
  0x00185022: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MechanicalIndex' },
  0x00185024: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BoneThermalIndex' },
  0x00185026: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CranialThermalIndex' },
  0x00185027: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SoftTissueThermalIndex' },
  0x00185028: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SoftTissueFocusThermalIndex' },
  0x00185029: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SoftTissueSurfaceThermalIndex' },
  0x00185030: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DynamicRange' },
  0x00185040: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalGain' },
  0x00185050: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DepthOfScanField' },
  0x00185100: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientPosition' },
  0x00185101: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ViewPosition' },
  0x00185104: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProjectionEponymousNameCodeSequence' },
  0x00185210: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SIX,
    keyword: 'ImageTransformationMatrix' },
  0x00185212: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ImageTranslationVector' },
  0x00186000: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Sensitivity' },
  0x00186011: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SequenceOfUltrasoundRegions' },
  0x00186012: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegionSpatialFormat' },
  0x00186014: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegionDataType' },
  0x00186016: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegionFlags' },
  0x00186018: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegionLocationMinX0' },
  0x0018601A: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegionLocationMinY0' },
  0x0018601C: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegionLocationMaxX1' },
  0x0018601E: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegionLocationMaxY1' },
  0x00186020: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencePixelX0' },
  0x00186022: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencePixelY0' },
  0x00186024: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhysicalUnitsXDirection' },
  0x00186026: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhysicalUnitsYDirection' },
  0x00186028: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencePixelPhysicalValueX' },
  0x0018602A: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencePixelPhysicalValueY' },
  0x0018602C: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhysicalDeltaX' },
  0x0018602E: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhysicalDeltaY' },
  0x00186030: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerFrequency' },
  0x00186031: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerType' },
  0x00186032: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PulseRepetitionFrequency' },
  0x00186034: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DopplerCorrectionAngle' },
  0x00186036: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SteeringAngle' },
  0x00186038: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DopplerSampleVolumeXPositionRetired' },
  0x00186039: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DopplerSampleVolumeXPosition' },
  0x0018603A: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DopplerSampleVolumeYPositionRetired' },
  0x0018603B: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DopplerSampleVolumeYPosition' },
  0x0018603C: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TMLinePositionX0Retired' },
  0x0018603D: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TMLinePositionX0' },
  0x0018603E: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TMLinePositionY0Retired' },
  0x0018603F: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TMLinePositionY0' },
  0x00186040: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TMLinePositionX1Retired' },
  0x00186041: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TMLinePositionX1' },
  0x00186042: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TMLinePositionY1Retired' },
  0x00186043: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TMLinePositionY1' },
  0x00186044: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelComponentOrganization' },
  0x00186046: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelComponentMask' },
  0x00186048: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelComponentRangeStart' },
  0x0018604A: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelComponentRangeStop' },
  0x0018604C: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelComponentPhysicalUnits' },
  0x0018604E: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelComponentDataType' },
  0x00186050: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTableBreakPoints' },
  0x00186052: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TableOfXBreakPoints' },
  0x00186054: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TableOfYBreakPoints' },
  0x00186056: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTableEntries' },
  0x00186058: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TableOfPixelValues' },
  0x0018605A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TableOfParameterValues' },
  0x00186060: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'RWaveTimeVector' },
  0x00187000: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorConditionsNominalFlag' },
  0x00187001: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorTemperature' },
  0x00187004: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorType' },
  0x00187005: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorConfiguration' },
  0x00187006: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorDescription' },
  0x00187008: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorMode' },
  0x0018700A: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorID' },
  0x0018700C: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DateOfLastDetectorCalibration' },
  0x0018700E: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeOfLastDetectorCalibration' },
  0x00187010: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposuresOnDetectorSinceLastCalibration' },
  0x00187011: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposuresOnDetectorSinceManufactured' },
  0x00187012: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorTimeSinceLastExposure' },
  0x00187014: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorActiveTime' },
  0x00187016: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorActivationOffsetFromExposure' },
  0x0018701A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DetectorBinning' },
  0x00187020: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DetectorElementPhysicalSize' },
  0x00187022: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DetectorElementSpacing' },
  0x00187024: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorActiveShape' },
  0x00187026: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'DetectorActiveDimensions' },
  0x00187028: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DetectorActiveOrigin' },
  0x0018702A: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorManufacturerName' },
  0x0018702B: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorManufacturerModelName' },
  0x00187030: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'FieldOfViewOrigin' },
  0x00187032: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FieldOfViewRotation' },
  0x00187034: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FieldOfViewHorizontalFlip' },
  0x00187036: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'PixelDataAreaOriginRelativeToFOV' },
  0x00187038: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelDataAreaRotationAngleRelativeToFOV' },
  0x00187040: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GridAbsorbingMaterial' },
  0x00187041: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GridSpacingMaterial' },
  0x00187042: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GridThickness' },
  0x00187044: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GridPitch' },
  0x00187046: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'GridAspectRatio' },
  0x00187048: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GridPeriod' },
  0x0018704C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GridFocalDistance' },
  0x00187050: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FilterMaterial' },
  0x00187052: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FilterThicknessMinimum' },
  0x00187054: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FilterThicknessMaximum' },
  0x00187056: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FilterBeamPathLengthMinimum' },
  0x00187058: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FilterBeamPathLengthMaximum' },
  0x00187060: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureControlMode' },
  0x00187062: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureControlModeDescription' },
  0x00187064: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureStatus' },
  0x00187065: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhototimerSetting' },
  0x00188150: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureTimeInuS' },
  0x00188151: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRayTubeCurrentInuA' },
  0x00189004: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentQualification' },
  0x00189005: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PulseSequenceName' },
  0x00189006: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRImagingModifierSequence' },
  0x00189008: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EchoPulseSequence' },
  0x00189009: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InversionRecovery' },
  0x00189010: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FlowCompensation' },
  0x00189011: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultipleSpinEcho' },
  0x00189012: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiPlanarExcitation' },
  0x00189014: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhaseContrast' },
  0x00189015: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeOfFlightContrast' },
  0x00189016: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Spoiling' },
  0x00189017: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SteadyStatePulseSequence' },
  0x00189018: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EchoPlanarPulseSequence' },
  0x00189019: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TagAngleFirstAxis' },
  0x00189020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MagnetizationTransfer' },
  0x00189021: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'T2Preparation' },
  0x00189022: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BloodSignalNulling' },
  0x00189024: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SaturationRecovery' },
  0x00189025: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpectrallySelectedSuppression' },
  0x00189026: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpectrallySelectedExcitation' },
  0x00189027: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpatialPresaturation' },
  0x00189028: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Tagging' },
  0x00189029: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OversamplingPhase' },
  0x00189030: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TagSpacingFirstDimension' },
  0x00189032: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeometryOfKSpaceTraversal' },
  0x00189033: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentedKSpaceTraversal' },
  0x00189034: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RectilinearPhaseEncodeReordering' },
  0x00189035: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TagThickness' },
  0x00189036: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PartialFourierDirection' },
  0x00189037: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CardiacSynchronizationTechnique' },
  0x00189041: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReceiveCoilManufacturerName' },
  0x00189042: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRReceiveCoilSequence' },
  0x00189043: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReceiveCoilType' },
  0x00189044: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'QuadratureReceiveCoil' },
  0x00189045: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiCoilDefinitionSequence' },
  0x00189046: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiCoilConfiguration' },
  0x00189047: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiCoilElementName' },
  0x00189048: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiCoilElementUsed' },
  0x00189049: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRTransmitCoilSequence' },
  0x00189050: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransmitCoilManufacturerName' },
  0x00189051: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransmitCoilType' },
  0x00189052: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'SpectralWidth' },
  0x00189053: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'ChemicalShiftReference' },
  0x00189054: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VolumeLocalizationTechnique' },
  0x00189058: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRAcquisitionFrequencyEncodingSteps' },
  0x00189059: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Decoupling' },
  0x00189060: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'DecoupledNucleus' },
  0x00189061: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'DecouplingFrequency' },
  0x00189062: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DecouplingMethod' },
  0x00189063: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'DecouplingChemicalShiftReference' },
  0x00189064: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'KSpaceFiltering' },
  0x00189065: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'TimeDomainFiltering' },
  0x00189066: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'NumberOfZeroFills' },
  0x00189067: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BaselineCorrection' },
  0x00189069: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParallelReductionFactorInPlane' },
  0x00189070: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CardiacRRIntervalSpecified' },
  0x00189073: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionDuration' },
  0x00189074: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameAcquisitionDateTime' },
  0x00189075: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionDirectionality' },
  0x00189076: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionGradientDirectionSequence' },
  0x00189077: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParallelAcquisition' },
  0x00189078: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParallelAcquisitionTechnique' },
  0x00189079: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'InversionTimes' },
  0x00189080: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MetaboliteMapDescription' },
  0x00189081: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PartialFourier' },
  0x00189082: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EffectiveEchoTime' },
  0x00189083: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MetaboliteMapCodeSequence' },
  0x00189084: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChemicalShiftSequence' },
  0x00189085: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CardiacSignalSource' },
  0x00189087: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionBValue' },
  0x00189089: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'DiffusionGradientOrientation' },
  0x00189090: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'VelocityEncodingDirection' },
  0x00189091: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VelocityEncodingMinimumValue' },
  0x00189092: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VelocityEncodingAcquisitionSequence' },
  0x00189093: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfKSpaceTrajectories' },
  0x00189094: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoverageOfKSpace' },
  0x00189095: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpectroscopyAcquisitionPhaseRows' },
  0x00189096: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParallelReductionFactorInPlaneRetired' },
  0x00189098: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'TransmitterFrequency' },
  0x00189100: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'ResonantNucleus' },
  0x00189101: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrequencyCorrection' },
  0x00189103: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRSpectroscopyFOVGeometrySequence' },
  0x00189104: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SlabThickness' },
  0x00189105: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'SlabOrientation' },
  0x00189106: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'MidSlabPosition' },
  0x00189107: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRSpatialSaturationSequence' },
  0x00189112: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRTimingAndRelatedParametersSequence' },
  0x00189114: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MREchoSequence' },
  0x00189115: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRModifierSequence' },
  0x00189117: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRDiffusionSequence' },
  0x00189118: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CardiacSynchronizationSequence' },
  0x00189119: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRAveragesSequence' },
  0x00189125: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRFOVGeometrySequence' },
  0x00189126: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VolumeLocalizationSequence' },
  0x00189127: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpectroscopyAcquisitionDataColumns' },
  0x00189147: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionAnisotropyType' },
  0x00189151: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameReferenceDateTime' },
  0x00189152: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRMetaboliteMapSequence' },
  0x00189155: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParallelReductionFactorOutOfPlane' },
  0x00189159: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpectroscopyAcquisitionOutOfPlanePhaseSteps' },
  0x00189166: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BulkMotionStatus' },
  0x00189168: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParallelReductionFactorSecondInPlane' },
  0x00189169: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CardiacBeatRejectionTechnique' },
  0x00189170: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RespiratoryMotionCompensationTechnique' },
  0x00189171: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RespiratorySignalSource' },
  0x00189172: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BulkMotionCompensationTechnique' },
  0x00189173: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BulkMotionSignalSource' },
  0x00189174: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicableSafetyStandardAgency' },
  0x00189175: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicableSafetyStandardDescription' },
  0x00189176: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OperatingModeSequence' },
  0x00189177: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OperatingModeType' },
  0x00189178: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OperatingMode' },
  0x00189179: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecificAbsorptionRateDefinition' },
  0x00189180: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GradientOutputType' },
  0x00189181: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecificAbsorptionRateValue' },
  0x00189182: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GradientOutput' },
  0x00189183: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FlowCompensationDirection' },
  0x00189184: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TaggingDelay' },
  0x00189185: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RespiratoryMotionCompensationTechniqueDescription' },
  0x00189186: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RespiratorySignalSourceID' },
  0x00189195: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChemicalShiftMinimumIntegrationLimitInHz' },
  0x00189196: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChemicalShiftMaximumIntegrationLimitInHz' },
  0x00189197: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRVelocityEncodingSequence' },
  0x00189198: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FirstOrderPhaseCorrection' },
  0x00189199: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaterReferencedPhaseCorrection' },
  0x00189200: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRSpectroscopyAcquisitionType' },
  0x00189214: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RespiratoryCyclePosition' },
  0x00189217: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VelocityEncodingMaximumValue' },
  0x00189218: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TagSpacingSecondDimension' },
  0x00189219: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TagAngleSecondAxis' },
  0x00189220: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameAcquisitionDuration' },
  0x00189226: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRImageFrameTypeSequence' },
  0x00189227: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRSpectroscopyFrameTypeSequence' },
  0x00189231: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRAcquisitionPhaseEncodingStepsInPlane' },
  0x00189232: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRAcquisitionPhaseEncodingStepsOutOfPlane' },
  0x00189234: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpectroscopyAcquisitionPhaseColumns' },
  0x00189236: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CardiacCyclePosition' },
  0x00189239: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecificAbsorptionRateSequence' },
  0x00189240: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RFEchoTrainLength' },
  0x00189241: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GradientEchoTrainLength' },
  0x00189250: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ArterialSpinLabelingContrast' },
  0x00189251: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MRArterialSpinLabelingSequence' },
  0x00189252: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLTechniqueDescription' },
  0x00189253: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLSlabNumber' },
  0x00189254: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLSlabThickness' },
  0x00189255: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ASLSlabOrientation' },
  0x00189256: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ASLMidSlabPosition' },
  0x00189257: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLContext' },
  0x00189258: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLPulseTrainDuration' },
  0x00189259: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLCrusherFlag' },
  0x0018925A: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLCrusherFlow' },
  0x0018925B: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLCrusherDescription' },
  0x0018925C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLBolusCutoffFlag' },
  0x0018925D: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLBolusCutoffTimingSequence' },
  0x0018925E: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLBolusCutoffTechnique' },
  0x0018925F: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLBolusCutoffDelayTime' },
  0x00189260: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ASLSlabSequence' },
  0x00189295: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChemicalShiftMinimumIntegrationLimitInppm' },
  0x00189296: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChemicalShiftMaximumIntegrationLimitInppm' },
  0x00189301: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTAcquisitionTypeSequence' },
  0x00189302: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionType' },
  0x00189303: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TubeAngle' },
  0x00189304: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTAcquisitionDetailsSequence' },
  0x00189305: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RevolutionTime' },
  0x00189306: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SingleCollimationWidth' },
  0x00189307: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalCollimationWidth' },
  0x00189308: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTTableDynamicsSequence' },
  0x00189309: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableSpeed' },
  0x00189310: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableFeedPerRotation' },
  0x00189311: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpiralPitchFactor' },
  0x00189312: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTGeometrySequence' },
  0x00189313: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'DataCollectionCenterPatient' },
  0x00189314: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTReconstructionSequence' },
  0x00189315: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReconstructionAlgorithm' },
  0x00189316: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConvolutionKernelGroup' },
  0x00189317: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ReconstructionFieldOfView' },
  0x00189318: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ReconstructionTargetCenterPatient' },
  0x00189319: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReconstructionAngle' },
  0x00189320: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageFilter' },
  0x00189321: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTExposureSequence' },
  0x00189322: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ReconstructionPixelSpacing' },
  0x00189323: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureModulationType' },
  0x00189324: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EstimatedDoseSaving' },
  0x00189325: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTXRayDetailsSequence' },
  0x00189326: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTPositionSequence' },
  0x00189327: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TablePosition' },
  0x00189328: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureTimeInms' },
  0x00189329: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTImageFrameTypeSequence' },
  0x00189330: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRayTubeCurrentInmA' },
  0x00189332: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureInmAs' },
  0x00189333: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConstantVolumeFlag' },
  0x00189334: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FluoroscopyFlag' },
  0x00189335: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistanceSourceToDataCollectionCenter' },
  0x00189337: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusAgentNumber' },
  0x00189338: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusIngredientCodeSequence' },
  0x00189340: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastAdministrationProfileSequence' },
  0x00189341: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusUsageSequence' },
  0x00189342: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusAgentAdministered' },
  0x00189343: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusAgentDetected' },
  0x00189344: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusAgentPhase' },
  0x00189345: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTDIvol' },
  0x00189346: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTDIPhantomTypeCodeSequence' },
  0x00189351: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalciumScoringMassFactorPatient' },
  0x00189352: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'CalciumScoringMassFactorDevice' },
  0x00189353: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnergyWeightingFactor' },
  0x00189360: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CTAdditionalXRaySourceSequence' },
  0x00189401: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProjectionPixelCalibrationSequence' },
  0x00189402: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistanceSourceToIsocenter' },
  0x00189403: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistanceObjectToTableTop' },
  0x00189404: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ObjectPixelSpacingInCenterOfBeam' },
  0x00189405: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionerPositionSequence' },
  0x00189406: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TablePositionSequence' },
  0x00189407: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CollimatorShapeSequence' },
  0x00189410: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanesInAcquisition' },
  0x00189412: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XAXRFFrameCharacteristicsSequence' },
  0x00189417: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameAcquisitionSequence' },
  0x00189420: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRayReceptorType' },
  0x00189423: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionProtocolName' },
  0x00189424: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionProtocolDescription' },
  0x00189425: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusIngredientOpaque' },
  0x00189426: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistanceReceptorPlaneToDetectorHousing' },
  0x00189427: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntensifierActiveShape' },
  0x00189428: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'IntensifierActiveDimensions' },
  0x00189429: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'PhysicalDetectorSize' },
  0x00189430: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'PositionOfIsocenterProjection' },
  0x00189432: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FieldOfViewSequence' },
  0x00189433: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FieldOfViewDescription' },
  0x00189434: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureControlSensingRegionsSequence' },
  0x00189435: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureControlSensingRegionShape' },
  0x00189436: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureControlSensingRegionLeftVerticalEdge' },
  0x00189437: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureControlSensingRegionRightVerticalEdge' },
  0x00189438: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureControlSensingRegionUpperHorizontalEdge' },
  0x00189439: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureControlSensingRegionLowerHorizontalEdge' },
  0x00189440: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'CenterOfCircularExposureControlSensingRegion' },
  0x00189441: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiusOfCircularExposureControlSensingRegion' },
  0x00189442: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2N,
    keyword: 'VerticesOfThePolygonalExposureControlSensingRegion' },
  0x00189447: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ColumnAngulationPatient' },
  0x00189449: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamAngle' },
  0x00189451: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameDetectorParametersSequence' },
  0x00189452: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalculatedAnatomyThickness' },
  0x00189455: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalibrationSequence' },
  0x00189456: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObjectThicknessSequence' },
  0x00189457: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlaneIdentification' },
  0x00189461: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'FieldOfViewDimensionsInFloat' },
  0x00189462: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IsocenterReferenceSystemSequence' },
  0x00189463: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionerIsocenterPrimaryAngle' },
  0x00189464: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionerIsocenterSecondaryAngle' },
  0x00189465: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionerIsocenterDetectorRotationAngle' },
  0x00189466: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableXPositionToIsocenter' },
  0x00189467: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableYPositionToIsocenter' },
  0x00189468: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableZPositionToIsocenter' },
  0x00189469: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableHorizontalRotationAngle' },
  0x00189470: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableHeadTiltAngle' },
  0x00189471: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableCradleTiltAngle' },
  0x00189472: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameDisplayShutterSequence' },
  0x00189473: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquiredImageAreaDoseProduct' },
  0x00189474: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CArmPositionerTabletopRelationship' },
  0x00189476: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRayGeometrySequence' },
  0x00189477: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IrradiationEventIdentificationSequence' },
  0x00189504: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRay3DFrameTypeSequence' },
  0x00189506: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContributingSourcesSequence' },
  0x00189507: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRay3DAcquisitionSequence' },
  0x00189508: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrimaryPositionerScanArc' },
  0x00189509: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SecondaryPositionerScanArc' },
  0x00189510: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrimaryPositionerScanStartAngle' },
  0x00189511: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SecondaryPositionerScanStartAngle' },
  0x00189514: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrimaryPositionerIncrement' },
  0x00189515: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SecondaryPositionerIncrement' },
  0x00189516: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartAcquisitionDateTime' },
  0x00189517: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EndAcquisitionDateTime' },
  0x00189524: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationName' },
  0x00189525: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationVersion' },
  0x00189526: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationManufacturer' },
  0x00189527: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmType' },
  0x00189528: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmDescription' },
  0x00189530: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRay3DReconstructionSequence' },
  0x00189531: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReconstructionDescription' },
  0x00189538: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerProjectionAcquisitionSequence' },
  0x00189601: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionBMatrixSequence' },
  0x00189602: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionBValueXX' },
  0x00189603: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionBValueXY' },
  0x00189604: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionBValueXZ' },
  0x00189605: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionBValueYY' },
  0x00189606: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionBValueYZ' },
  0x00189607: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiffusionBValueZZ' },
  0x00189701: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DecayCorrectionDateTime' },
  0x00189715: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartDensityThreshold' },
  0x00189716: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartRelativeDensityDifferenceThreshold' },
  0x00189717: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartCardiacTriggerCountThreshold' },
  0x00189718: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartRespiratoryTriggerCountThreshold' },
  0x00189719: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TerminationCountsThreshold' },
  0x00189720: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TerminationDensityThreshold' },
  0x00189721: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TerminationRelativeDensityThreshold' },
  0x00189722: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TerminationTimeThreshold' },
  0x00189723: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TerminationCardiacTriggerCountThreshold' },
  0x00189724: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TerminationRespiratoryTriggerCountThreshold' },
  0x00189725: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorGeometry' },
  0x00189726: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransverseDetectorSeparation' },
  0x00189727: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AxialDetectorDimension' },
  0x00189729: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalAgentNumber' },
  0x00189732: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PETFrameAcquisitionSequence' },
  0x00189733: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PETDetectorMotionDetailsSequence' },
  0x00189734: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PETTableDynamicsSequence' },
  0x00189735: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PETPositionSequence' },
  0x00189736: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PETFrameCorrectionFactorsSequence' },
  0x00189737: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalUsageSequence' },
  0x00189738: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AttenuationCorrectionSource' },
  0x00189739: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfIterations' },
  0x00189740: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfSubsets' },
  0x00189749: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PETReconstructionSequence' },
  0x00189751: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PETFrameTypeSequence' },
  0x00189755: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeOfFlightInformationUsed' },
  0x00189756: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReconstructionType' },
  0x00189758: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DecayCorrected' },
  0x00189759: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AttenuationCorrected' },
  0x00189760: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScatterCorrected' },
  0x00189761: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeadTimeCorrected' },
  0x00189762: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryMotionCorrected' },
  0x00189763: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientMotionCorrected' },
  0x00189764: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CountLossNormalizationCorrected' },
  0x00189765: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RandomsCorrected' },
  0x00189766: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NonUniformRadialSamplingCorrected' },
  0x00189767: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SensitivityCalibrated' },
  0x00189768: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorNormalizationCorrection' },
  0x00189769: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IterativeReconstructionMethod' },
  0x00189770: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AttenuationCorrectionTemporalRelationship' },
  0x00189771: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientPhysiologicalStateSequence' },
  0x00189772: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientPhysiologicalStateCodeSequence' },
  0x00189801: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DepthsOfFocus' },
  0x00189803: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExcludedIntervalsSequence' },
  0x00189804: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExclusionStartDatetime' },
  0x00189805: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExclusionDuration' },
  0x00189806: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'USImageDescriptionSequence' },
  0x00189807: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageDataTypeSequence' },
  0x00189808: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataType' },
  0x00189809: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerScanPatternCodeSequence' },
  0x0018980B: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AliasedDataType' },
  0x0018980C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionMeasuringDeviceUsed' },
  0x0018980D: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerGeometryCodeSequence' },
  0x0018980E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerBeamSteeringCodeSequence' },
  0x0018980F: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransducerApplicationCodeSequence' },
  0x0018A001: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContributingEquipmentSequence' },
  0x0018A002: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContributionDateTime' },
  0x0018A003: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContributionDescription' },
  0x0020000D: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyInstanceUID' },
  0x0020000E: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SeriesInstanceUID' },
  0x00200010: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyID' },
  0x00200011: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SeriesNumber' },
  0x00200012: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionNumber' },
  0x00200013: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InstanceNumber' },
  0x00200014: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IsotopeNumber' },
  0x00200015: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhaseNumber' },
  0x00200016: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntervalNumber' },
  0x00200017: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeSlotNumber' },
  0x00200018: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AngleNumber' },
  0x00200019: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ItemNumber' },
  0x00200020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'PatientOrientation' },
  0x00200022: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayNumber' },
  0x00200024: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveNumber' },
  0x00200026: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LUTNumber' },
  0x00200030: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ImagePosition' },
  0x00200032: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ImagePositionPatient' },
  0x00200035: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SIX,
    keyword: 'ImageOrientation' },
  0x00200037: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SIX,
    keyword: 'ImageOrientationPatient' },
  0x00200050: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Location' },
  0x00200052: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameOfReferenceUID' },
  0x00200060: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Laterality' },
  0x00200062: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageLaterality' },
  0x00200070: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageGeometryType' },
  0x00200080: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaskingImage' },
  0x002000AA: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReportNumber' },
  0x00200100: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemporalPositionIdentifier' },
  0x00200105: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTemporalPositions' },
  0x00200110: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemporalResolution' },
  0x00200200: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SynchronizationFrameOfReferenceUID' },
  0x00200242: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SOPInstanceUIDOfConcatenationSource' },
  0x00201000: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SeriesInStudy' },
  0x00201001: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionsInSeries' },
  0x00201002: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagesInAcquisition' },
  0x00201003: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagesInSeries' },
  0x00201004: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionsInStudy' },
  0x00201005: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagesInStudy' },
  0x00201020: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'Reference' },
  0x00201040: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositionReferenceIndicator' },
  0x00201041: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SliceLocation' },
  0x00201070: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OtherStudyNumbers' },
  0x00201200: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPatientRelatedStudies' },
  0x00201202: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPatientRelatedSeries' },
  0x00201204: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPatientRelatedInstances' },
  0x00201206: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfStudyRelatedSeries' },
  0x00201208: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfStudyRelatedInstances' },
  0x00201209: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfSeriesRelatedInstances' },
  0x00203401: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModifyingDeviceID' },
  0x00203402: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModifiedImageID' },
  0x00203403: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModifiedImageDate' },
  0x00203404: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModifyingDeviceManufacturer' },
  0x00203405: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModifiedImageTime' },
  0x00203406: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModifiedImageDescription' },
  0x00204000: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageComments' },
  0x00205000: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OriginalImageIdentification' },
  0x00205002: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OriginalImageIdentificationNomenclature' },
  0x00209056: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StackID' },
  0x00209057: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InStackPositionNumber' },
  0x00209071: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameAnatomySequence' },
  0x00209072: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameLaterality' },
  0x00209111: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameContentSequence' },
  0x00209113: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanePositionSequence' },
  0x00209116: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlaneOrientationSequence' },
  0x00209128: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemporalPositionIndex' },
  0x00209153: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalCardiacTriggerDelayTime' },
  0x00209154: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalCardiacTriggerTimePriorToRPeak' },
  0x00209155: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ActualCardiacTriggerTimePriorToRPeak' },
  0x00209156: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameAcquisitionNumber' },
  0x00209157: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DimensionIndexValues' },
  0x00209158: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameComments' },
  0x00209161: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConcatenationUID' },
  0x00209162: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InConcatenationNumber' },
  0x00209163: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InConcatenationTotalNumber' },
  0x00209164: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DimensionOrganizationUID' },
  0x00209165: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DimensionIndexPointer' },
  0x00209167: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FunctionalGroupPointer' },
  0x00209213: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DimensionIndexPrivateCreator' },
  0x00209221: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DimensionOrganizationSequence' },
  0x00209222: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DimensionIndexSequence' },
  0x00209228: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConcatenationFrameOffsetNumber' },
  0x00209238: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FunctionalGroupPrivateCreator' },
  0x00209241: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalPercentageOfCardiacPhase' },
  0x00209245: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalPercentageOfRespiratoryPhase' },
  0x00209246: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartingRespiratoryAmplitude' },
  0x00209247: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartingRespiratoryPhase' },
  0x00209248: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EndingRespiratoryAmplitude' },
  0x00209249: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EndingRespiratoryPhase' },
  0x00209250: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RespiratoryTriggerType' },
  0x00209251: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RRIntervalTimeNominal' },
  0x00209252: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ActualCardiacTriggerDelayTime' },
  0x00209253: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RespiratorySynchronizationSequence' },
  0x00209254: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RespiratoryIntervalTime' },
  0x00209255: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalRespiratoryTriggerDelayTime' },
  0x00209256: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RespiratoryTriggerDelayThreshold' },
  0x00209257: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ActualRespiratoryTriggerDelayTime' },
  0x00209301: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ImagePositionVolume' },
  0x00209302: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SIX,
    keyword: 'ImageOrientationVolume' },
  0x00209307: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UltrasoundAcquisitionGeometry' },
  0x00209308: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ApexPosition' },
  0x00209309: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_16,
    keyword: 'VolumeToTransducerMappingMatrix' },
  0x0020930A: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_16,
    keyword: 'VolumeToTableMappingMatrix' },
  0x0020930C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientFrameOfReferenceSource' },
  0x0020930D: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemporalPositionTimeOffset' },
  0x0020930E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanePositionVolumeSequence' },
  0x0020930F: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlaneOrientationVolumeSequence' },
  0x00209310: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemporalPositionSequence' },
  0x00209311: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DimensionOrganizationType' },
  0x00209312: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VolumeFrameOfReferenceUID' },
  0x00209313: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableFrameOfReferenceUID' },
  0x00209421: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DimensionDescriptionLabel' },
  0x00209450: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientOrientationInFrameSequence' },
  0x00209453: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameLabel' },
  0x00209518: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'AcquisitionIndex' },
  0x00209529: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContributingSOPInstancesReferenceSequence' },
  0x00209536: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReconstructionIndex' },
  0x00220001: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LightPathFilterPassThroughWavelength' },
  0x00220002: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'LightPathFilterPassBand' },
  0x00220003: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagePathFilterPassThroughWavelength' },
  0x00220004: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ImagePathFilterPassBand' },
  0x00220005: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientEyeMovementCommanded' },
  0x00220006: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientEyeMovementCommandCodeSequence' },
  0x00220007: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SphericalLensPower' },
  0x00220008: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CylinderLensPower' },
  0x00220009: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CylinderAxis' },
  0x0022000A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EmmetropicMagnification' },
  0x0022000B: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntraOcularPressure' },
  0x0022000C: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HorizontalFieldOfView' },
  0x0022000D: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PupilDilated' },
  0x0022000E: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DegreeOfDilation' },
  0x00220010: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StereoBaselineAngle' },
  0x00220011: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StereoBaselineDisplacement' },
  0x00220012: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StereoHorizontalPixelOffset' },
  0x00220013: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StereoVerticalPixelOffset' },
  0x00220014: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StereoRotation' },
  0x00220015: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionDeviceTypeCodeSequence' },
  0x00220016: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IlluminationTypeCodeSequence' },
  0x00220017: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LightPathFilterTypeStackCodeSequence' },
  0x00220018: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagePathFilterTypeStackCodeSequence' },
  0x00220019: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LensesCodeSequence' },
  0x0022001A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelDescriptionCodeSequence' },
  0x0022001B: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RefractiveStateSequence' },
  0x0022001C: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MydriaticAgentCodeSequence' },
  0x0022001D: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelativeImagePositionCodeSequence' },
  0x0022001E: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CameraAngleOfView' },
  0x00220020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StereoPairsSequence' },
  0x00220021: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LeftImageSequence' },
  0x00220022: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RightImageSequence' },
  0x00220030: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AxialLengthOfTheEye' },
  0x00220031: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicFrameLocationSequence' },
  0x00220032: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'ReferenceCoordinates' },
  0x00220035: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DepthSpatialResolution' },
  0x00220036: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaximumDepthDistortion' },
  0x00220037: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlongScanSpatialResolution' },
  0x00220038: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaximumAlongScanDistortion' },
  0x00220039: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicImageOrientation' },
  0x00220041: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DepthOfTransverseImage' },
  0x00220042: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MydriaticAgentConcentrationUnitsSequence' },
  0x00220048: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcrossScanSpatialResolution' },
  0x00220049: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaximumAcrossScanDistortion' },
  0x0022004E: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MydriaticAgentConcentration' },
  0x00220055: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IlluminationWaveLength' },
  0x00220056: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IlluminationPower' },
  0x00220057: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IlluminationBandwidth' },
  0x00220058: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MydriaticAgentSequence' },
  0x00221007: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialMeasurementsRightEyeSequence' },
  0x00221008: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialMeasurementsLeftEyeSequence' },
  0x00221010: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthMeasurementsType' },
  0x00221019: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLength' },
  0x00221024: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LensStatusCodeSequence' },
  0x00221025: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VitreousStatusCodeSequence' },
  0x00221028: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IOLFormulaCodeSequence' },
  0x00221029: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IOLFormulaDetail' },
  0x00221033: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'KeratometerIndex' },
  0x00221035: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceOfOphthalmicAxialLengthCodeSequence' },
  0x00221037: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TargetRefraction' },
  0x00221039: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RefractiveProcedureOccurred' },
  0x00221040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RefractiveSurgeryTypeCodeSequence' },
  0x00221044: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicUltrasoundAxialMeasurementsTypeCodeSequence' },
  0x00221050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthMeasurementsSequence' },
  0x00221053: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IOLPower' },
  0x00221054: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PredictedRefractiveError' },
  0x00221059: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthVelocity' },
  0x00221065: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LensStatusDescription' },
  0x00221066: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VitreousStatusDescription' },
  0x00221090: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IOLPowerSequence' },
  0x00221092: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LensConstantSequence' },
  0x00221093: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IOLManufacturer' },
  0x00221094: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LensConstantDescription' },
  0x00221096: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'KeratometryMeasurementTypeCodeSequence' },
  0x00221100: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedOphthalmicAxialMeasurementsSequence' },
  0x00221101: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence' },
  0x00221103: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence' },
  0x00221121: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IOLPowerForExactEmmetropia' },
  0x00221122: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IOLPowerForExactTargetRefraction' },
  0x00221125: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnteriorChamberDepthDefinitionCodeSequence' },
  0x00221130: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LensThickness' },
  0x00221131: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnteriorChamberDepth' },
  0x00221132: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceOfLensThicknessDataCodeSequence' },
  0x00221133: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceOfAnteriorChamberDepthDataCodeSequence' },
  0x00221135: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceOfRefractiveErrorDataCodeSequence' },
  0x00221140: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthMeasurementModified' },
  0x00221150: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthDataSourceCodeSequence' },
  0x00221153: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthAcquisitionMethodCodeSequence' },
  0x00221155: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SignalToNoiseRatio' },
  0x00221159: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthDataSourceDescription' },
  0x00221210: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthMeasurementsTotalLengthSequence' },
  0x00221211: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence' },
  0x00221212: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthMeasurementsLengthSummationSequence' },
  0x00221220: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UltrasoundOphthalmicAxialLengthMeasurementsSequence' },
  0x00221225: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OpticalOphthalmicAxialLengthMeasurementsSequence' },
  0x00221230: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UltrasoundSelectedOphthalmicAxialLengthSequence' },
  0x00221250: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthSelectionMethodCodeSequence' },
  0x00221255: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OpticalSelectedOphthalmicAxialLengthSequence' },
  0x00221257: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectedSegmentalOphthalmicAxialLengthSequence' },
  0x00221260: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectedTotalOphthalmicAxialLengthSequence' },
  0x00221262: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthQualityMetricSequence' },
  0x00221273: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicAxialLengthQualityMetricTypeDescription' },
  0x00221300: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntraocularLensCalculationsRightEyeSequence' },
  0x00221310: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntraocularLensCalculationsLeftEyeSequence' },
  0x00221330: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence' },
  0x00240010: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldHorizontalExtent' },
  0x00240011: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldVerticalExtent' },
  0x00240012: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldShape' },
  0x00240016: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScreeningTestModeCodeSequence' },
  0x00240018: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaximumStimulusLuminance' },
  0x00240020: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BackgroundLuminance' },
  0x00240021: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StimulusColorCodeSequence' },
  0x00240024: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BackgroundIlluminationColorCodeSequence' },
  0x00240025: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StimulusArea' },
  0x00240028: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StimulusPresentationTime' },
  0x00240032: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationSequence' },
  0x00240033: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationMonitoringCodeSequence' },
  0x00240034: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldCatchTrialSequence' },
  0x00240035: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationCheckedQuantity' },
  0x00240036: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientNotProperlyFixatedQuantity' },
  0x00240037: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentedVisualStimuliDataFlag' },
  0x00240038: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfVisualStimuli' },
  0x00240039: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExcessiveFixationLossesDataFlag' },
  0x00240040: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExcessiveFixationLosses' },
  0x00240042: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StimuliRetestingQuantity' },
  0x00240044: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CommentsOnPatientPerformanceOfVisualField' },
  0x00240045: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FalseNegativesEstimateFlag' },
  0x00240046: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FalseNegativesEstimate' },
  0x00240048: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NegativeCatchTrialsQuantity' },
  0x00240050: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FalseNegativesQuantity' },
  0x00240051: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExcessiveFalseNegativesDataFlag' },
  0x00240052: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExcessiveFalseNegatives' },
  0x00240053: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FalsePositivesEstimateFlag' },
  0x00240054: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FalsePositivesEstimate' },
  0x00240055: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CatchTrialsDataFlag' },
  0x00240056: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PositiveCatchTrialsQuantity' },
  0x00240057: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TestPointNormalsDataFlag' },
  0x00240058: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TestPointNormalsSequence' },
  0x00240059: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GlobalDeviationProbabilityNormalsFlag' },
  0x00240060: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FalsePositivesQuantity' },
  0x00240061: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExcessiveFalsePositivesDataFlag' },
  0x00240062: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExcessiveFalsePositives' },
  0x00240063: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldTestNormalsFlag' },
  0x00240064: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResultsNormalsSequence' },
  0x00240065: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AgeCorrectedSensitivityDeviationAlgorithmSequence' },
  0x00240066: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GlobalDeviationFromNormal' },
  0x00240067: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralizedDefectSensitivityDeviationAlgorithmSequence' },
  0x00240068: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LocalizedDeviationfromNormal' },
  0x00240069: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientReliabilityIndicator' },
  0x00240070: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldMeanSensitivity' },
  0x00240071: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GlobalDeviationProbability' },
  0x00240072: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LocalDeviationProbabilityNormalsFlag' },
  0x00240073: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LocalizedDeviationProbability' },
  0x00240074: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShortTermFluctuationCalculated' },
  0x00240075: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShortTermFluctuation' },
  0x00240076: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShortTermFluctuationProbabilityCalculated' },
  0x00240077: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShortTermFluctuationProbability' },
  0x00240078: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CorrectedLocalizedDeviationFromNormalCalculated' },
  0x00240079: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CorrectedLocalizedDeviationFromNormal' },
  0x00240080: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated' },
  0x00240081: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CorrectedLocalizedDeviationFromNormalProbability' },
  0x00240083: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GlobalDeviationProbabilitySequence' },
  0x00240085: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LocalizedDeviationProbabilitySequence' },
  0x00240086: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FovealSensitivityMeasured' },
  0x00240087: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FovealSensitivity' },
  0x00240088: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldTestDuration' },
  0x00240089: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldTestPointSequence' },
  0x00240090: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldTestPointXCoordinate' },
  0x00240091: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldTestPointYCoordinate' },
  0x00240092: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AgeCorrectedSensitivityDeviationValue' },
  0x00240093: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StimulusResults' },
  0x00240094: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SensitivityValue' },
  0x00240095: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RetestStimulusSeen' },
  0x00240096: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RetestSensitivityValue' },
  0x00240097: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldTestPointNormalsSequence' },
  0x00240098: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'QuantifiedDefect' },
  0x00240100: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AgeCorrectedSensitivityDeviationProbabilityValue' },
  0x00240102: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralizedDefectCorrectedSensitivityDeviationFlag' },
  0x00240103: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralizedDefectCorrectedSensitivityDeviationValue' },
  0x00240104: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue' },
  0x00240105: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MinimumSensitivityValue' },
  0x00240106: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlindSpotLocalized' },
  0x00240107: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlindSpotXCoordinate' },
  0x00240108: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlindSpotYCoordinate' },
  0x00240110: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualAcuityMeasurementSequence' },
  0x00240112: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RefractiveParametersUsedOnPatientSequence' },
  0x00240113: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasurementLaterality' },
  0x00240114: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicPatientClinicalInformationLeftEyeSequence' },
  0x00240115: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OphthalmicPatientClinicalInformationRightEyeSequence' },
  0x00240117: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FovealPointNormativeDataFlag' },
  0x00240118: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FovealPointProbabilityValue' },
  0x00240120: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScreeningBaselineMeasured' },
  0x00240122: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScreeningBaselineMeasuredSequence' },
  0x00240124: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScreeningBaselineType' },
  0x00240126: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScreeningBaselineValue' },
  0x00240202: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmSource' },
  0x00240306: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataSetName' },
  0x00240307: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataSetVersion' },
  0x00240308: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataSetSource' },
  0x00240309: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataSetDescription' },
  0x00240317: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldTestReliabilityGlobalIndexSequence' },
  0x00240320: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualFieldGlobalResultsIndexSequence' },
  0x00240325: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataObservationSequence' },
  0x00240338: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndexNormalsFlag' },
  0x00240341: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndexProbability' },
  0x00240344: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IndexProbabilitySequence' },
  0x00280002: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SamplesPerPixel' },
  0x00280003: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SamplesPerPixelUsed' },
  0x00280004: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhotometricInterpretation' },
  0x00280005: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageDimensions' },
  0x00280006: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanarConfiguration' },
  0x00280008: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFrames' },
  0x00280009: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FrameIncrementPointer' },
  0x0028000A: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FrameDimensionPointer' },
  0x00280010: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Rows' },
  0x00280011: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Columns' },
  0x00280012: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Planes' },
  0x00280014: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UltrasoundColorDataPresent' },
  0x00280030: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'PixelSpacing' },
  0x00280031: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ZoomFactor' },
  0x00280032: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ZoomCenter' },
  0x00280034: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'PixelAspectRatio' },
  0x00280040: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageFormat' },
  0x00280050: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ManipulatedImage' },
  0x00280051: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CorrectedImage' },
  0x0028005F: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompressionRecognitionCode' },
  0x00280060: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompressionCode' },
  0x00280061: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompressionOriginator' },
  0x00280062: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompressionLabel' },
  0x00280063: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompressionDescription' },
  0x00280065: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CompressionSequence' },
  0x00280066: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CompressionStepPointers' },
  0x00280068: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RepeatInterval' },
  0x00280069: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BitsGrouped' },
  0x00280070: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PerimeterTable' },
  0x00280071: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerimeterValue' },
  0x00280080: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PredictorRows' },
  0x00280081: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PredictorColumns' },
  0x00280082: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PredictorConstants' },
  0x00280090: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockedPixels' },
  0x00280091: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockRows' },
  0x00280092: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockColumns' },
  0x00280093: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RowOverlap' },
  0x00280094: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ColumnOverlap' },
  0x00280100: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BitsAllocated' },
  0x00280101: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BitsStored' },
  0x00280102: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HighBit' },
  0x00280103: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelRepresentation' },
  0x00280104: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SmallestValidPixelValue' },
  0x00280105: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LargestValidPixelValue' },
  0x00280106: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SmallestImagePixelValue' },
  0x00280107: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LargestImagePixelValue' },
  0x00280108: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SmallestPixelValueInSeries' },
  0x00280109: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LargestPixelValueInSeries' },
  0x00280110: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SmallestImagePixelValueInPlane' },
  0x00280111: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LargestImagePixelValueInPlane' },
  0x00280120: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelPaddingValue' },
  0x00280121: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelPaddingRangeLimit' },
  0x00280200: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageLocation' },
  0x00280300: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'QualityControlImage' },
  0x00280301: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BurnedInAnnotation' },
  0x00280302: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecognizableVisualFeatures' },
  0x00280303: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LongitudinalTemporalInformationModified' },
  0x00280400: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransformLabel' },
  0x00280401: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransformVersionNumber' },
  0x00280402: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTransformSteps' },
  0x00280403: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SequenceOfCompressedData' },
  0x00280404: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DetailsOfCoefficients' },
  0x00280700: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DCTLabel' },
  0x00280701: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DataBlockDescription' },
  0x00280702: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DataBlock' },
  0x00280710: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NormalizationFactorFormat' },
  0x00280720: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ZonalMapNumberFormat' },
  0x00280721: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ZonalMapLocation' },
  0x00280722: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ZonalMapFormat' },
  0x00280730: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AdaptiveMapFormat' },
  0x00280740: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CodeNumberFormat' },
  0x00280A02: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelSpacingCalibrationType' },
  0x00280A04: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelSpacingCalibrationDescription' },
  0x00281040: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelIntensityRelationship' },
  0x00281041: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelIntensityRelationshipSign' },
  0x00281050: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'WindowCenter' },
  0x00281051: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'WindowWidth' },
  0x00281052: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RescaleIntercept' },
  0x00281053: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RescaleSlope' },
  0x00281054: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RescaleType' },
  0x00281055: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'WindowCenterWidthExplanation' },
  0x00281056: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VOILUTFunction' },
  0x00281080: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GrayScale' },
  0x00281090: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecommendedViewingMode' },
  0x00281100: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'GrayLookupTableDescriptor' },
  0x00281101: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'RedPaletteColorLookupTableDescriptor' },
  0x00281102: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'GreenPaletteColorLookupTableDescriptor' },
  0x00281103: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'BluePaletteColorLookupTableDescriptor' },
  0x00281104: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'AlphaPaletteColorLookupTableDescriptor' },
  0x00281111: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'LargeRedPaletteColorLookupTableDescriptor' },
  0x00281112: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'LargeGreenPaletteColorLookupTableDescriptor' },
  0x00281113: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'LargeBluePaletteColorLookupTableDescriptor' },
  0x00281199: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PaletteColorLookupTableUID' },
  0x00281200: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'GrayLookupTableData' },
  0x00281201: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RedPaletteColorLookupTableData' },
  0x00281202: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GreenPaletteColorLookupTableData' },
  0x00281203: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BluePaletteColorLookupTableData' },
  0x00281204: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlphaPaletteColorLookupTableData' },
  0x00281211: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LargeRedPaletteColorLookupTableData' },
  0x00281212: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LargeGreenPaletteColorLookupTableData' },
  0x00281213: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LargeBluePaletteColorLookupTableData' },
  0x00281214: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LargePaletteColorLookupTableUID' },
  0x00281221: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentedRedPaletteColorLookupTableData' },
  0x00281222: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentedGreenPaletteColorLookupTableData' },
  0x00281223: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentedBluePaletteColorLookupTableData' },
  0x00281300: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BreastImplantPresent' },
  0x00281350: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PartialView' },
  0x00281351: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PartialViewDescription' },
  0x00281352: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PartialViewCodeSequence' },
  0x0028135A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpatialLocationsPreserved' },
  0x00281401: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataFrameAssignmentSequence' },
  0x00281402: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataPathAssignment' },
  0x00281403: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BitsMappedToColorLookupTable' },
  0x00281404: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlendingLUT1Sequence' },
  0x00281405: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlendingLUT1TransferFunction' },
  0x00281406: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlendingWeightConstant' },
  0x00281407: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'BlendingLookupTableDescriptor' },
  0x00281408: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlendingLookupTableData' },
  0x0028140B: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnhancedPaletteColorLookupTableSequence' },
  0x0028140C: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlendingLUT2Sequence' },
  0x0028140D: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlendingLUT2TransferFunction' },
  0x0028140E: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataPathID' },
  0x0028140F: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RGBLUTTransferFunction' },
  0x00281410: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlphaLUTTransferFunction' },
  0x00282000: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ICCProfile' },
  0x00282110: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LossyImageCompression' },
  0x00282112: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'LossyImageCompressionRatio' },
  0x00282114: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'LossyImageCompressionMethod' },
  0x00283000: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModalityLUTSequence' },
  0x00283002: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'LUTDescriptor' },
  0x00283003: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LUTExplanation' },
  0x00283004: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModalityLUTType' },
  0x00283006: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'LUTData' },
  0x00283010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VOILUTSequence' },
  0x00283110: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SoftcopyVOILUTSequence' },
  0x00284000: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagePresentationComments' },
  0x00285000: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BiPlaneAcquisitionSequence' },
  0x00286010: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RepresentativeFrameNumber' },
  0x00286020: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FrameNumbersOfInterest' },
  0x00286022: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FrameOfInterestDescription' },
  0x00286023: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FrameOfInterestType' },
  0x00286030: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaskPointers' },
  0x00286040: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'RWavePointer' },
  0x00286100: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaskSubtractionSequence' },
  0x00286101: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaskOperation' },
  0x00286102: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'ApplicableFrameRange' },
  0x00286110: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaskFrameNumbers' },
  0x00286112: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastFrameAveraging' },
  0x00286114: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'MaskSubPixelShift' },
  0x00286120: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TIDOffset' },
  0x00286190: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaskOperationExplanation' },
  0x00287FE0: { vr: 'UT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelDataProviderURL' },
  0x00289001: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataPointRows' },
  0x00289002: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataPointColumns' },
  0x00289003: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SignalDomainColumns' },
  0x00289099: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LargestMonochromePixelValue' },
  0x00289108: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataRepresentation' },
  0x00289110: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelMeasuresSequence' },
  0x00289132: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameVOILUTSequence' },
  0x00289145: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelValueTransformationSequence' },
  0x00289235: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SignalDomainRows' },
  0x00289411: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplayFilterPercentage' },
  0x00289415: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FramePixelShiftSequence' },
  0x00289416: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SubtractionItemID' },
  0x00289422: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelIntensityRelationshipLUTSequence' },
  0x00289443: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FramePixelDataPropertiesSequence' },
  0x00289444: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeometricalProperties' },
  0x00289445: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeometricMaximumDistortion' },
  0x00289446: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ImageProcessingApplied' },
  0x00289454: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaskSelectionMode' },
  0x00289474: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LUTFunction' },
  0x00289478: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaskVisibilityPercentage' },
  0x00289501: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelShiftSequence' },
  0x00289502: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegionPixelShiftSequence' },
  0x00289503: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'VerticesOfTheRegion' },
  0x00289505: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiFramePresentationSequence' },
  0x00289506: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'PixelShiftFrameRange' },
  0x00289507: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'LUTFrameRange' },
  0x00289520: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_16,
    keyword: 'ImageToEquipmentMappingMatrix' },
  0x00289537: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EquipmentCoordinateSystemIdentification' },
  0x0032000A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyStatusID' },
  0x0032000C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyPriorityID' },
  0x00320012: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyIDIssuer' },
  0x00320032: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyVerifiedDate' },
  0x00320033: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyVerifiedTime' },
  0x00320034: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyReadDate' },
  0x00320035: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyReadTime' },
  0x00321000: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledStudyStartDate' },
  0x00321001: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledStudyStartTime' },
  0x00321010: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledStudyStopDate' },
  0x00321011: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledStudyStopTime' },
  0x00321020: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledStudyLocation' },
  0x00321021: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ScheduledStudyLocationAETitle' },
  0x00321030: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReasonForStudy' },
  0x00321031: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestingPhysicianIdentificationSequence' },
  0x00321032: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestingPhysician' },
  0x00321033: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestingService' },
  0x00321034: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestingServiceCodeSequence' },
  0x00321040: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyArrivalDate' },
  0x00321041: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyArrivalTime' },
  0x00321050: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyCompletionDate' },
  0x00321051: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyCompletionTime' },
  0x00321055: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyComponentStatusID' },
  0x00321060: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedProcedureDescription' },
  0x00321064: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedProcedureCodeSequence' },
  0x00321070: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedContrastAgent' },
  0x00324000: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StudyComments' },
  0x00380004: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedPatientAliasSequence' },
  0x00380008: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisitStatusID' },
  0x00380010: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AdmissionID' },
  0x00380011: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssuerOfAdmissionID' },
  0x00380014: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssuerOfAdmissionIDSequence' },
  0x00380016: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteOfAdmissions' },
  0x0038001A: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledAdmissionDate' },
  0x0038001B: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledAdmissionTime' },
  0x0038001C: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledDischargeDate' },
  0x0038001D: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledDischargeTime' },
  0x0038001E: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledPatientInstitutionResidence' },
  0x00380020: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AdmittingDate' },
  0x00380021: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AdmittingTime' },
  0x00380030: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DischargeDate' },
  0x00380032: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DischargeTime' },
  0x00380040: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DischargeDiagnosisDescription' },
  0x00380044: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DischargeDiagnosisCodeSequence' },
  0x00380050: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecialNeeds' },
  0x00380060: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ServiceEpisodeID' },
  0x00380061: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssuerOfServiceEpisodeID' },
  0x00380062: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ServiceEpisodeDescription' },
  0x00380064: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssuerOfServiceEpisodeIDSequence' },
  0x00380100: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PertinentDocumentsSequence' },
  0x00380300: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurrentPatientLocation' },
  0x00380400: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientInstitutionResidence' },
  0x00380500: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientState' },
  0x00380502: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientClinicalTrialParticipationSequence' },
  0x00384000: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisitComments' },
  0x003A0004: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformOriginality' },
  0x003A0005: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfWaveformChannels' },
  0x003A0010: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfWaveformSamples' },
  0x003A001A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SamplingFrequency' },
  0x003A0020: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiplexGroupLabel' },
  0x003A0200: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelDefinitionSequence' },
  0x003A0202: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformChannelNumber' },
  0x003A0203: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelLabel' },
  0x003A0205: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ChannelStatus' },
  0x003A0208: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelSourceSequence' },
  0x003A0209: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelSourceModifiersSequence' },
  0x003A020A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceWaveformSequence' },
  0x003A020C: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelDerivationDescription' },
  0x003A0210: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelSensitivity' },
  0x003A0211: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelSensitivityUnitsSequence' },
  0x003A0212: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelSensitivityCorrectionFactor' },
  0x003A0213: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelBaseline' },
  0x003A0214: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelTimeSkew' },
  0x003A0215: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelSampleSkew' },
  0x003A0218: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelOffset' },
  0x003A021A: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformBitsStored' },
  0x003A0220: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilterLowFrequency' },
  0x003A0221: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilterHighFrequency' },
  0x003A0222: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NotchFilterFrequency' },
  0x003A0223: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NotchFilterBandwidth' },
  0x003A0230: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformDataDisplayScale' },
  0x003A0231: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'WaveformDisplayBackgroundCIELabValue' },
  0x003A0240: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformPresentationGroupSequence' },
  0x003A0241: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationGroupNumber' },
  0x003A0242: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelDisplaySequence' },
  0x003A0244: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ChannelRecommendedDisplayCIELabValue' },
  0x003A0245: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelPosition' },
  0x003A0246: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplayShadingFlag' },
  0x003A0247: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FractionalChannelDisplayScale' },
  0x003A0248: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AbsoluteChannelDisplayScale' },
  0x003A0300: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultiplexedAudioChannelsDescriptionCodeSequence' },
  0x003A0301: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelIdentificationCode' },
  0x003A0302: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelMode' },
  0x00400001: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ScheduledStationAETitle' },
  0x00400002: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepStartDate' },
  0x00400003: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepStartTime' },
  0x00400004: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepEndDate' },
  0x00400005: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepEndTime' },
  0x00400006: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledPerformingPhysicianName' },
  0x00400007: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepDescription' },
  0x00400008: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProtocolCodeSequence' },
  0x00400009: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepID' },
  0x0040000A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StageCodeSequence' },
  0x0040000B: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledPerformingPhysicianIdentificationSequence' },
  0x00400010: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ScheduledStationName' },
  0x00400011: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepLocation' },
  0x00400012: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PreMedication' },
  0x00400020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepStatus' },
  0x00400026: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrderPlacerIdentifierSequence' },
  0x00400027: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrderFillerIdentifierSequence' },
  0x00400031: { vr: 'UT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LocalNamespaceEntityID' },
  0x00400032: { vr: 'UT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UniversalEntityID' },
  0x00400033: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UniversalEntityIDType' },
  0x00400035: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IdentifierTypeCode' },
  0x00400036: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AssigningFacilitySequence' },
  0x00400039: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AssigningJurisdictionCodeSequence' },
  0x0040003A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AssigningAgencyOrDepartmentCodeSequence' },
  0x00400100: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepSequence' },
  0x00400220: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedNonImageCompositeSOPInstanceSequence' },
  0x00400241: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedStationAETitle' },
  0x00400242: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedStationName' },
  0x00400243: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedLocation' },
  0x00400244: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepStartDate' },
  0x00400245: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepStartTime' },
  0x00400250: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepEndDate' },
  0x00400251: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepEndTime' },
  0x00400252: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepStatus' },
  0x00400253: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepID' },
  0x00400254: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepDescription' },
  0x00400255: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureTypeDescription' },
  0x00400260: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProtocolCodeSequence' },
  0x00400261: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProtocolType' },
  0x00400270: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledStepAttributesSequence' },
  0x00400275: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestAttributesSequence' },
  0x00400280: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CommentsOnThePerformedProcedureStep' },
  0x00400281: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepDiscontinuationReasonCodeSequence' },
  0x00400293: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'QuantitySequence' },
  0x00400294: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Quantity' },
  0x00400295: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuringUnitsSequence' },
  0x00400296: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BillingItemSequence' },
  0x00400300: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalTimeOfFluoroscopy' },
  0x00400301: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalNumberOfExposures' },
  0x00400302: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EntranceDose' },
  0x00400303: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_2,
    keyword: 'ExposedArea' },
  0x00400306: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistanceSourceToEntrance' },
  0x00400307: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistanceSourceToSupport' },
  0x0040030E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureDoseSequence' },
  0x00400310: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CommentsOnRadiationDose' },
  0x00400312: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRayOutput' },
  0x00400314: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HalfValueLayer' },
  0x00400316: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrganDose' },
  0x00400318: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrganExposed' },
  0x00400320: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BillingProcedureStepSequence' },
  0x00400321: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilmConsumptionSequence' },
  0x00400324: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BillingSuppliesAndDevicesSequence' },
  0x00400330: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedProcedureStepSequence' },
  0x00400340: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedSeriesSequence' },
  0x00400400: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CommentsOnTheScheduledProcedureStep' },
  0x00400440: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProtocolContextSequence' },
  0x00400441: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentItemModifierSequence' },
  0x00400500: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledSpecimenSequence' },
  0x0040050A: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenAccessionNumber' },
  0x00400512: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerIdentifier' },
  0x00400513: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssuerOfTheContainerIdentifierSequence' },
  0x00400515: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlternateContainerIdentifierSequence' },
  0x00400518: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerTypeCodeSequence' },
  0x0040051A: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerDescription' },
  0x00400520: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerComponentSequence' },
  0x00400550: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenSequence' },
  0x00400551: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenIdentifier' },
  0x00400552: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenDescriptionSequenceTrial' },
  0x00400553: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenDescriptionTrial' },
  0x00400554: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenUID' },
  0x00400555: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionContextSequence' },
  0x00400556: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionContextDescription' },
  0x0040059A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenTypeCodeSequence' },
  0x00400560: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenDescriptionSequence' },
  0x00400562: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssuerOfTheSpecimenIdentifierSequence' },
  0x00400600: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenShortDescription' },
  0x00400602: { vr: 'UT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenDetailedDescription' },
  0x00400610: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenPreparationSequence' },
  0x00400612: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenPreparationStepContentItemSequence' },
  0x00400620: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenLocalizationContentItemSequence' },
  0x004006FA: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SlideIdentifier' },
  0x0040071A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageCenterPointCoordinatesSequence' },
  0x0040072A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XOffsetInSlideCoordinateSystem' },
  0x0040073A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'YOffsetInSlideCoordinateSystem' },
  0x0040074A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ZOffsetInSlideCoordinateSystem' },
  0x004008D8: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelSpacingSequence' },
  0x004008DA: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinateSystemAxisCodeSequence' },
  0x004008EA: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasurementUnitsCodeSequence' },
  0x004009F8: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VitalStainCodeSequenceTrial' },
  0x00401001: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedProcedureID' },
  0x00401002: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReasonForTheRequestedProcedure' },
  0x00401003: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedProcedurePriority' },
  0x00401004: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientTransportArrangements' },
  0x00401005: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedProcedureLocation' },
  0x00401006: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlacerOrderNumberProcedure' },
  0x00401007: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FillerOrderNumberProcedure' },
  0x00401008: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConfidentialityCode' },
  0x00401009: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReportingPriority' },
  0x0040100A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReasonForRequestedProcedureCodeSequence' },
  0x00401010: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'NamesOfIntendedRecipientsOfResults' },
  0x00401011: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntendedRecipientsOfResultsIdentificationSequence' },
  0x00401012: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReasonForPerformedProcedureCodeSequence' },
  0x00401060: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedProcedureDescriptionTrial' },
  0x00401101: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PersonIdentificationCodeSequence' },
  0x00401102: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PersonAddress' },
  0x00401103: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PersonTelephoneNumbers' },
  0x00401400: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedProcedureComments' },
  0x00402001: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReasonForTheImagingServiceRequest' },
  0x00402004: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssueDateOfImagingServiceRequest' },
  0x00402005: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IssueTimeOfImagingServiceRequest' },
  0x00402006: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlacerOrderNumberImagingServiceRequestRetired' },
  0x00402007: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FillerOrderNumberImagingServiceRequestRetired' },
  0x00402008: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrderEnteredBy' },
  0x00402009: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrderEntererLocation' },
  0x00402010: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrderCallbackPhoneNumber' },
  0x00402016: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlacerOrderNumberImagingServiceRequest' },
  0x00402017: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FillerOrderNumberImagingServiceRequest' },
  0x00402400: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagingServiceRequestComments' },
  0x00403001: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConfidentialityConstraintOnPatientDataDescription' },
  0x00404001: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralPurposeScheduledProcedureStepStatus' },
  0x00404002: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralPurposePerformedProcedureStepStatus' },
  0x00404003: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralPurposeScheduledProcedureStepPriority' },
  0x00404004: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcessingApplicationsCodeSequence' },
  0x00404005: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepStartDateTime' },
  0x00404006: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MultipleCopiesFlag' },
  0x00404007: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcessingApplicationsCodeSequence' },
  0x00404009: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HumanPerformerCodeSequence' },
  0x00404010: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepModificationDateTime' },
  0x00404011: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExpectedCompletionDateTime' },
  0x00404015: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResultingGeneralPurposePerformedProcedureStepsSequence' },
  0x00404016: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedGeneralPurposeScheduledProcedureStepSequence' },
  0x00404018: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledWorkitemCodeSequence' },
  0x00404019: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedWorkitemCodeSequence' },
  0x00404020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InputAvailabilityFlag' },
  0x00404021: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InputInformationSequence' },
  0x00404022: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelevantInformationSequence' },
  0x00404023: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID' },
  0x00404025: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledStationNameCodeSequence' },
  0x00404026: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledStationClassCodeSequence' },
  0x00404027: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledStationGeographicLocationCodeSequence' },
  0x00404028: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedStationNameCodeSequence' },
  0x00404029: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedStationClassCodeSequence' },
  0x00404030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedStationGeographicLocationCodeSequence' },
  0x00404031: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedSubsequentWorkitemCodeSequence' },
  0x00404032: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NonDICOMOutputCodeSequence' },
  0x00404033: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OutputInformationSequence' },
  0x00404034: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledHumanPerformersSequence' },
  0x00404035: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ActualHumanPerformersSequence' },
  0x00404036: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HumanPerformerOrganization' },
  0x00404037: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HumanPerformerName' },
  0x00404040: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RawDataHandling' },
  0x00404041: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InputReadinessState' },
  0x00404050: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepStartDateTime' },
  0x00404051: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureStepEndDateTime' },
  0x00404052: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureStepCancellationDateTime' },
  0x00408302: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EntranceDoseInmGy' },
  0x00409094: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedImageRealWorldValueMappingSequence' },
  0x00409096: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RealWorldValueMappingSequence' },
  0x00409098: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelValueMappingCodeSequence' },
  0x00409210: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LUTLabel' },
  0x00409211: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RealWorldValueLastValueMapped' },
  0x00409212: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'RealWorldValueLUTData' },
  0x00409216: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RealWorldValueFirstValueMapped' },
  0x00409224: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RealWorldValueIntercept' },
  0x00409225: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RealWorldValueSlope' },
  0x0040A007: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FindingsFlagTrial' },
  0x0040A010: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelationshipType' },
  0x0040A020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FindingsSequenceTrial' },
  0x0040A021: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FindingsGroupUIDTrial' },
  0x0040A022: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedFindingsGroupUIDTrial' },
  0x0040A023: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FindingsGroupRecordingDateTrial' },
  0x0040A024: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FindingsGroupRecordingTimeTrial' },
  0x0040A026: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FindingsSourceCategoryCodeSequenceTrial' },
  0x0040A027: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerifyingOrganization' },
  0x0040A028: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DocumentingOrganizationIdentifierCodeSequenceTrial' },
  0x0040A030: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerificationDateTime' },
  0x0040A032: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationDateTime' },
  0x0040A040: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ValueType' },
  0x0040A043: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConceptNameCodeSequence' },
  0x0040A047: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasurementPrecisionDescriptionTrial' },
  0x0040A050: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContinuityOfContent' },
  0x0040A057: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'UrgencyOrPriorityAlertsTrial' },
  0x0040A060: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SequencingIndicatorTrial' },
  0x0040A066: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DocumentIdentifierCodeSequenceTrial' },
  0x0040A067: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DocumentAuthorTrial' },
  0x0040A068: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DocumentAuthorIdentifierCodeSequenceTrial' },
  0x0040A070: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IdentifierCodeSequenceTrial' },
  0x0040A073: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerifyingObserverSequence' },
  0x0040A074: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObjectBinaryIdentifierTrial' },
  0x0040A075: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerifyingObserverName' },
  0x0040A076: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DocumentingObserverIdentifierCodeSequenceTrial' },
  0x0040A078: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AuthorObserverSequence' },
  0x0040A07A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParticipantSequence' },
  0x0040A07C: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CustodialOrganizationSequence' },
  0x0040A080: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParticipationType' },
  0x0040A082: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParticipationDateTime' },
  0x0040A084: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObserverType' },
  0x0040A085: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureIdentifierCodeSequenceTrial' },
  0x0040A088: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerifyingObserverIdentificationCodeSequence' },
  0x0040A089: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObjectDirectoryBinaryIdentifierTrial' },
  0x0040A090: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EquivalentCDADocumentSequence' },
  0x0040A0B0: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'ReferencedWaveformChannels' },
  0x0040A110: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DateOfDocumentOrVerbalTransactionTrial' },
  0x0040A112: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeOfDocumentCreationOrVerbalTransactionTrial' },
  0x0040A120: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DateTime' },
  0x0040A121: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Date' },
  0x0040A122: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Time' },
  0x0040A123: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PersonName' },
  0x0040A124: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UID' },
  0x0040A125: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ReportStatusIDTrial' },
  0x0040A130: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemporalRangeType' },
  0x0040A132: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ReferencedSamplePositions' },
  0x0040A136: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ReferencedFrameNumbers' },
  0x0040A138: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ReferencedTimeOffsets' },
  0x0040A13A: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ReferencedDateTime' },
  0x0040A160: { vr: 'UT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TextValue' },
  0x0040A167: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationCategoryCodeSequenceTrial' },
  0x0040A168: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConceptCodeSequence' },
  0x0040A16A: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BibliographicCitationTrial' },
  0x0040A170: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PurposeOfReferenceCodeSequence' },
  0x0040A171: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationUIDTrial' },
  0x0040A172: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedObservationUIDTrial' },
  0x0040A173: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedObservationClassTrial' },
  0x0040A174: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedObjectObservationClassTrial' },
  0x0040A180: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnnotationGroupNumber' },
  0x0040A192: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationDateTrial' },
  0x0040A193: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationTimeTrial' },
  0x0040A194: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasurementAutomationTrial' },
  0x0040A195: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModifierCodeSequence' },
  0x0040A224: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IdentificationDescriptionTrial' },
  0x0040A290: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoordinatesSetGeometricTypeTrial' },
  0x0040A296: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmCodeSequenceTrial' },
  0x0040A297: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmDescriptionTrial' },
  0x0040A29A: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'PixelCoordinatesSetTrial' },
  0x0040A300: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredValueSequence' },
  0x0040A301: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumericValueQualifierCodeSequence' },
  0x0040A307: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurrentObserverTrial' },
  0x0040A30A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'NumericValue' },
  0x0040A313: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedAccessionSequenceTrial' },
  0x0040A33A: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReportStatusCommentTrial' },
  0x0040A340: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureContextSequenceTrial' },
  0x0040A352: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerbalSourceTrial' },
  0x0040A353: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AddressTrial' },
  0x0040A354: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TelephoneNumberTrial' },
  0x0040A358: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerbalSourceIdentifierCodeSequenceTrial' },
  0x0040A360: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PredecessorDocumentsSequence' },
  0x0040A370: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedRequestSequence' },
  0x0040A372: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcedureCodeSequence' },
  0x0040A375: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurrentRequestedProcedureEvidenceSequence' },
  0x0040A380: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReportDetailSequenceTrial' },
  0x0040A385: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PertinentOtherEvidenceSequence' },
  0x0040A390: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HL7StructuredDocumentReferenceSequence' },
  0x0040A402: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationSubjectUIDTrial' },
  0x0040A403: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationSubjectClassTrial' },
  0x0040A404: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationSubjectTypeCodeSequenceTrial' },
  0x0040A491: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompletionFlag' },
  0x0040A492: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompletionFlagDescription' },
  0x0040A493: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerificationFlag' },
  0x0040A494: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ArchiveRequested' },
  0x0040A496: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PreliminaryFlag' },
  0x0040A504: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentTemplateSequence' },
  0x0040A525: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IdenticalDocumentsSequence' },
  0x0040A600: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationSubjectContextFlagTrial' },
  0x0040A601: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObserverContextFlagTrial' },
  0x0040A603: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureContextFlagTrial' },
  0x0040A730: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentSequence' },
  0x0040A731: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelationshipSequenceTrial' },
  0x0040A732: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelationshipTypeCodeSequenceTrial' },
  0x0040A744: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LanguageCodeSequenceTrial' },
  0x0040A992: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UniformResourceLocatorTrial' },
  0x0040B020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformAnnotationSequence' },
  0x0040DB00: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemplateIdentifier' },
  0x0040DB06: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemplateVersion' },
  0x0040DB07: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemplateLocalVersion' },
  0x0040DB0B: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemplateExtensionFlag' },
  0x0040DB0C: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemplateExtensionOrganizationUID' },
  0x0040DB0D: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemplateExtensionCreatorUID' },
  0x0040DB73: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ReferencedContentItemIdentifier' },
  0x0040E001: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HL7InstanceIdentifier' },
  0x0040E004: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HL7DocumentEffectiveTime' },
  0x0040E006: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HL7DocumentTypeCodeSequence' },
  0x0040E008: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DocumentClassCodeSequence' },
  0x0040E010: { vr: 'UT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RetrieveURI' },
  0x0040E011: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RetrieveLocationUID' },
  0x0040E020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TypeOfInstances' },
  0x0040E021: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DICOMRetrievalSequence' },
  0x0040E022: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DICOMMediaRetrievalSequence' },
  0x0040E023: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WADORetrievalSequence' },
  0x0040E024: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XDSRetrievalSequence' },
  0x0040E030: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RepositoryUniqueID' },
  0x0040E031: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HomeCommunityID' },
  0x00420010: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DocumentTitle' },
  0x00420011: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EncapsulatedDocument' },
  0x00420012: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MIMETypeOfEncapsulatedDocument' },
  0x00420013: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceInstanceSequence' },
  0x00420014: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ListOfMIMETypes' },
  0x00440001: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProductPackageIdentifier' },
  0x00440002: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SubstanceAdministrationApproval' },
  0x00440003: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApprovalStatusFurtherDescription' },
  0x00440004: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApprovalStatusDateTime' },
  0x00440007: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProductTypeCodeSequence' },
  0x00440008: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ProductName' },
  0x00440009: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProductDescription' },
  0x0044000A: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProductLotIdentifier' },
  0x0044000B: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProductExpirationDateTime' },
  0x00440010: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SubstanceAdministrationDateTime' },
  0x00440011: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SubstanceAdministrationNotes' },
  0x00440012: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SubstanceAdministrationDeviceID' },
  0x00440013: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProductParameterSequence' },
  0x00440019: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SubstanceAdministrationParameterSequence' },
  0x00460012: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LensDescription' },
  0x00460014: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RightLensSequence' },
  0x00460015: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LeftLensSequence' },
  0x00460016: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UnspecifiedLateralityLensSequence' },
  0x00460018: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CylinderSequence' },
  0x00460028: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrismSequence' },
  0x00460030: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HorizontalPrismPower' },
  0x00460032: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HorizontalPrismBase' },
  0x00460034: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerticalPrismPower' },
  0x00460036: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerticalPrismBase' },
  0x00460038: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LensSegmentType' },
  0x00460040: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OpticalTransmittance' },
  0x00460042: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelWidth' },
  0x00460044: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PupilSize' },
  0x00460046: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CornealSize' },
  0x00460050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AutorefractionRightEyeSequence' },
  0x00460052: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AutorefractionLeftEyeSequence' },
  0x00460060: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistancePupillaryDistance' },
  0x00460062: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NearPupillaryDistance' },
  0x00460063: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntermediatePupillaryDistance' },
  0x00460064: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OtherPupillaryDistance' },
  0x00460070: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'KeratometryRightEyeSequence' },
  0x00460071: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'KeratometryLeftEyeSequence' },
  0x00460074: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SteepKeratometricAxisSequence' },
  0x00460075: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiusOfCurvature' },
  0x00460076: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'KeratometricPower' },
  0x00460077: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'KeratometricAxis' },
  0x00460080: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FlatKeratometricAxisSequence' },
  0x00460092: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BackgroundColor' },
  0x00460094: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Optotype' },
  0x00460095: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OptotypePresentation' },
  0x00460097: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SubjectiveRefractionRightEyeSequence' },
  0x00460098: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SubjectiveRefractionLeftEyeSequence' },
  0x00460100: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AddNearSequence' },
  0x00460101: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AddIntermediateSequence' },
  0x00460102: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AddOtherSequence' },
  0x00460104: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AddPower' },
  0x00460106: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ViewingDistance' },
  0x00460121: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualAcuityTypeCodeSequence' },
  0x00460122: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualAcuityRightEyeSequence' },
  0x00460123: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualAcuityLeftEyeSequence' },
  0x00460124: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VisualAcuityBothEyesOpenSequence' },
  0x00460125: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ViewingDistanceType' },
  0x00460135: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'VisualAcuityModifiers' },
  0x00460137: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DecimalVisualAcuity' },
  0x00460139: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OptotypeDetailedDefinition' },
  0x00460145: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedRefractiveMeasurementsSequence' },
  0x00460146: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpherePower' },
  0x00460147: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CylinderPower' },
  0x00480001: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagedVolumeWidth' },
  0x00480002: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagedVolumeHeight' },
  0x00480003: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImagedVolumeDepth' },
  0x00480006: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalPixelMatrixColumns' },
  0x00480007: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalPixelMatrixRows' },
  0x00480008: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalPixelMatrixOriginSequence' },
  0x00480010: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenLabelInImage' },
  0x00480011: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FocusMethod' },
  0x00480012: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExtendedDepthOfField' },
  0x00480013: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFocalPlanes' },
  0x00480014: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistanceBetweenFocalPlanes' },
  0x00480015: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'RecommendedAbsentPixelCIELabValue' },
  0x00480100: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IlluminatorTypeCodeSequence' },
  0x00480102: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SIX,
    keyword: 'ImageOrientationSlide' },
  0x00480105: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OpticalPathSequence' },
  0x00480106: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OpticalPathIdentifier' },
  0x00480107: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OpticalPathDescription' },
  0x00480108: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IlluminationColorCodeSequence' },
  0x00480110: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecimenReferenceSequence' },
  0x00480111: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CondenserLensPower' },
  0x00480112: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObjectiveLensPower' },
  0x00480113: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObjectiveLensNumericalAperture' },
  0x00480120: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PaletteColorLookupTableSequence' },
  0x00480200: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedImageNavigationSequence' },
  0x00480201: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'TopLeftHandCornerOfLocalizerArea' },
  0x00480202: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'BottomRightHandCornerOfLocalizerArea' },
  0x00480207: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OpticalPathIdentificationSequence' },
  0x0048021A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanePositionSlideSequence' },
  0x0048021E: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RowPositionInTotalImagePixelMatrix' },
  0x0048021F: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ColumnPositionInTotalImagePixelMatrix' },
  0x00480301: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelOriginInterpretation' },
  0x00500004: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalibrationImage' },
  0x00500010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviceSequence' },
  0x00500012: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerComponentTypeCodeSequence' },
  0x00500013: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerComponentThickness' },
  0x00500014: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviceLength' },
  0x00500015: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerComponentWidth' },
  0x00500016: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviceDiameter' },
  0x00500017: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviceDiameterUnits' },
  0x00500018: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviceVolume' },
  0x00500019: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterMarkerDistance' },
  0x0050001A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerComponentMaterial' },
  0x0050001B: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerComponentID' },
  0x0050001C: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerComponentLength' },
  0x0050001D: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerComponentDiameter' },
  0x0050001E: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContainerComponentDescription' },
  0x00500020: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeviceDescription' },
  0x00520001: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContrastBolusIngredientPercentByVolume' },
  0x00520002: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OCTFocalDistance' },
  0x00520003: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamSpotSize' },
  0x00520004: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EffectiveRefractiveIndex' },
  0x00520006: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OCTAcquisitionDomain' },
  0x00520007: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OCTOpticalCenterWavelength' },
  0x00520008: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AxialResolution' },
  0x00520009: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangingDepth' },
  0x00520011: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ALineRate' },
  0x00520012: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ALinesPerFrame' },
  0x00520013: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CatheterRotationalRate' },
  0x00520014: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ALinePixelSpacing' },
  0x00520016: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModeOfPercutaneousAccessSequence' },
  0x00520025: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntravascularOCTFrameTypeSequence' },
  0x00520026: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OCTZOffsetApplied' },
  0x00520027: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntravascularFrameContentSequence' },
  0x00520028: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntravascularLongitudinalDistance' },
  0x00520029: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IntravascularOCTFrameContentSequence' },
  0x00520030: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OCTZOffsetCorrection' },
  0x00520031: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CatheterDirectionOfRotation' },
  0x00520033: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SeamLineLocation' },
  0x00520034: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FirstALineLocation' },
  0x00520036: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SeamLineIndex' },
  0x00520038: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPaddedAlines' },
  0x00520039: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpolationType' },
  0x0052003A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RefractiveIndexApplied' },
  0x00540010: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'EnergyWindowVector' },
  0x00540011: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfEnergyWindows' },
  0x00540012: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnergyWindowInformationSequence' },
  0x00540013: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnergyWindowRangeSequence' },
  0x00540014: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnergyWindowLowerLimit' },
  0x00540015: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnergyWindowUpperLimit' },
  0x00540016: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalInformationSequence' },
  0x00540017: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResidualSyringeCounts' },
  0x00540018: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnergyWindowName' },
  0x00540020: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DetectorVector' },
  0x00540021: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfDetectors' },
  0x00540022: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorInformationSequence' },
  0x00540030: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'PhaseVector' },
  0x00540031: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPhases' },
  0x00540032: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhaseInformationSequence' },
  0x00540033: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFramesInPhase' },
  0x00540036: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhaseDelay' },
  0x00540038: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PauseBetweenFrames' },
  0x00540039: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhaseDescription' },
  0x00540050: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'RotationVector' },
  0x00540051: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfRotations' },
  0x00540052: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RotationInformationSequence' },
  0x00540053: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFramesInRotation' },
  0x00540060: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'RRIntervalVector' },
  0x00540061: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfRRIntervals' },
  0x00540062: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GatedInformationSequence' },
  0x00540063: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataInformationSequence' },
  0x00540070: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TimeSlotVector' },
  0x00540071: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTimeSlots' },
  0x00540072: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeSlotInformationSequence' },
  0x00540073: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeSlotTime' },
  0x00540080: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SliceVector' },
  0x00540081: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfSlices' },
  0x00540090: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'AngularViewVector' },
  0x00540100: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TimeSliceVector' },
  0x00540101: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTimeSlices' },
  0x00540200: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartAngle' },
  0x00540202: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TypeOfDetectorMotion' },
  0x00540210: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TriggerVector' },
  0x00540211: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTriggersInPhase' },
  0x00540220: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ViewCodeSequence' },
  0x00540222: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ViewModifierCodeSequence' },
  0x00540300: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadionuclideCodeSequence' },
  0x00540302: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AdministrationRouteCodeSequence' },
  0x00540304: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiopharmaceuticalCodeSequence' },
  0x00540306: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalibrationDataSequence' },
  0x00540308: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EnergyWindowNumber' },
  0x00540400: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageID' },
  0x00540410: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientOrientationCodeSequence' },
  0x00540412: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientOrientationModifierCodeSequence' },
  0x00540414: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientGantryRelationshipCodeSequence' },
  0x00540500: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SliceProgressionDirection' },
  0x00541000: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'SeriesType' },
  0x00541001: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Units' },
  0x00541002: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CountsSource' },
  0x00541004: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReprojectionMethod' },
  0x00541006: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SUVType' },
  0x00541100: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RandomsCorrectionMethod' },
  0x00541101: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AttenuationCorrectionMethod' },
  0x00541102: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DecayCorrection' },
  0x00541103: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReconstructionMethod' },
  0x00541104: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorLinesOfResponseUsed' },
  0x00541105: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScatterCorrectionMethod' },
  0x00541200: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AxialAcceptance' },
  0x00541201: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'AxialMash' },
  0x00541202: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransverseMash' },
  0x00541203: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DetectorElementSize' },
  0x00541210: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoincidenceWindowWidth' },
  0x00541220: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SecondaryCountsType' },
  0x00541300: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameReferenceTime' },
  0x00541310: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrimaryPromptsCountsAccumulated' },
  0x00541311: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SecondaryCountsAccumulated' },
  0x00541320: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SliceSensitivityFactor' },
  0x00541321: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DecayFactor' },
  0x00541322: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseCalibrationFactor' },
  0x00541323: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScatterFractionFactor' },
  0x00541324: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeadTimeFactor' },
  0x00541330: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageIndex' },
  0x00541400: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CountsIncluded' },
  0x00541401: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeadTimeCorrectionFlag' },
  0x00603000: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HistogramSequence' },
  0x00603002: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HistogramNumberOfBins' },
  0x00603004: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HistogramFirstBinValue' },
  0x00603006: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HistogramLastBinValue' },
  0x00603008: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HistogramBinWidth' },
  0x00603010: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HistogramExplanation' },
  0x00603020: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'HistogramData' },
  0x00620001: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentationType' },
  0x00620002: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentSequence' },
  0x00620003: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentedPropertyCategoryCodeSequence' },
  0x00620004: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentNumber' },
  0x00620005: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentLabel' },
  0x00620006: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentDescription' },
  0x00620008: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentAlgorithmType' },
  0x00620009: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentAlgorithmName' },
  0x0062000A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentIdentificationSequence' },
  0x0062000B: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ReferencedSegmentNumber' },
  0x0062000C: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecommendedDisplayGrayscaleValue' },
  0x0062000D: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'RecommendedDisplayCIELabValue' },
  0x0062000E: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaximumFractionalValue' },
  0x0062000F: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentedPropertyTypeCodeSequence' },
  0x00620010: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentationFractionalType' },
  0x00640002: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeformableRegistrationSequence' },
  0x00640003: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceFrameOfReferenceUID' },
  0x00640005: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeformableRegistrationGridSequence' },
  0x00640007: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'GridDimensions' },
  0x00640008: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'GridResolution' },
  0x00640009: { vr: 'OF',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VectorGridData' },
  0x0064000F: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PreDeformationMatrixRegistrationSequence' },
  0x00640010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PostDeformationMatrixRegistrationSequence' },
  0x00660001: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfSurfaces' },
  0x00660002: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceSequence' },
  0x00660003: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceNumber' },
  0x00660004: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceComments' },
  0x00660009: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceProcessing' },
  0x0066000A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceProcessingRatio' },
  0x0066000B: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceProcessingDescription' },
  0x0066000C: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecommendedPresentationOpacity' },
  0x0066000D: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecommendedPresentationType' },
  0x0066000E: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FiniteVolume' },
  0x00660010: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Manifold' },
  0x00660011: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfacePointsSequence' },
  0x00660012: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfacePointsNormalsSequence' },
  0x00660013: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceMeshPrimitivesSequence' },
  0x00660015: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfSurfacePoints' },
  0x00660016: { vr: 'OF',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PointCoordinatesData' },
  0x00660017: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'PointPositionAccuracy' },
  0x00660018: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeanPointDistance' },
  0x00660019: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaximumPointDistance' },
  0x0066001A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SIX,
    keyword: 'PointsBoundingBoxCoordinates' },
  0x0066001B: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'AxisOfRotation' },
  0x0066001C: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'CenterOfRotation' },
  0x0066001E: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfVectors' },
  0x0066001F: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VectorDimensionality' },
  0x00660020: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'VectorAccuracy' },
  0x00660021: { vr: 'OF',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VectorCoordinateData' },
  0x00660023: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TrianglePointIndexList' },
  0x00660024: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EdgePointIndexList' },
  0x00660025: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VertexPointIndexList' },
  0x00660026: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TriangleStripSequence' },
  0x00660027: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TriangleFanSequence' },
  0x00660028: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LineSequence' },
  0x00660029: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrimitivePointIndexList' },
  0x0066002A: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceCount' },
  0x0066002B: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSurfaceSequence' },
  0x0066002C: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSurfaceNumber' },
  0x0066002D: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentSurfaceGenerationAlgorithmIdentificationSequence' },
  0x0066002E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SegmentSurfaceSourceInstanceSequence' },
  0x0066002F: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmFamilyCodeSequence' },
  0x00660030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmNameCodeSequence' },
  0x00660031: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmVersion' },
  0x00660032: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmParameters' },
  0x00660034: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FacetSequence' },
  0x00660035: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceProcessingAlgorithmIdentificationSequence' },
  0x00660036: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmName' },
  0x00686210: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantSize' },
  0x00686221: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateVersion' },
  0x00686222: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReplacedImplantTemplateSequence' },
  0x00686223: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantType' },
  0x00686224: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DerivationImplantTemplateSequence' },
  0x00686225: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OriginalImplantTemplateSequence' },
  0x00686226: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EffectiveDateTime' },
  0x00686230: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTargetAnatomySequence' },
  0x00686260: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InformationFromManufacturerSequence' },
  0x00686265: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NotificationFromManufacturerSequence' },
  0x00686270: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InformationIssueDateTime' },
  0x00686280: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InformationSummary' },
  0x006862A0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantRegulatoryDisapprovalCodeSequence' },
  0x006862A5: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverallTemplateSpatialTolerance' },
  0x006862C0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLDocumentSequence' },
  0x006862D0: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLDocumentID' },
  0x006862D5: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLDocumentLabel' },
  0x006862E0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ViewOrientationCodeSequence' },
  0x006862F0: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_NINE,
    keyword: 'ViewOrientationModifier' },
  0x006862F2: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLDocumentScaling' },
  0x00686300: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLDocument' },
  0x00686310: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLContourPenNumber' },
  0x00686320: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLPenSequence' },
  0x00686330: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLPenNumber' },
  0x00686340: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLPenLabel' },
  0x00686345: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HPGLPenDescription' },
  0x00686346: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'RecommendedRotationPoint' },
  0x00686347: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'BoundingRectangle' },
  0x00686350: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ImplantTemplate3DModelSurfaceNumber' },
  0x00686360: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceModelDescriptionSequence' },
  0x00686380: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceModelLabel' },
  0x00686390: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurfaceModelScalingFactor' },
  0x006863A0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaterialsCodeSequence' },
  0x006863A4: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoatingMaterialsCodeSequence' },
  0x006863A8: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTypeCodeSequence' },
  0x006863AC: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationMethodCodeSequence' },
  0x006863B0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MatingFeatureSetsSequence' },
  0x006863C0: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MatingFeatureSetID' },
  0x006863D0: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MatingFeatureSetLabel' },
  0x006863E0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MatingFeatureSequence' },
  0x006863F0: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MatingFeatureID' },
  0x00686400: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MatingFeatureDegreeOfFreedomSequence' },
  0x00686410: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DegreeOfFreedomID' },
  0x00686420: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DegreeOfFreedomType' },
  0x00686430: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TwoDMatingFeatureCoordinatesSequence' },
  0x00686440: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedHPGLDocumentID' },
  0x00686450: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'TwoDMatingPoint' },
  0x00686460: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'TwoDMatingAxes' },
  0x00686470: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TwoDDegreeOfFreedomSequence' },
  0x00686490: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ThreeDDegreeOfFreedomAxis' },
  0x006864A0: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'RangeOfFreedom' },
  0x006864C0: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ThreeDMatingPoint' },
  0x006864D0: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_NINE,
    keyword: 'ThreeDMatingAxes' },
  0x006864F0: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'TwoDDegreeOfFreedomAxis' },
  0x00686500: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanningLandmarkPointSequence' },
  0x00686510: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanningLandmarkLineSequence' },
  0x00686520: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanningLandmarkPlaneSequence' },
  0x00686530: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanningLandmarkID' },
  0x00686540: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanningLandmarkDescription' },
  0x00686545: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanningLandmarkIdentificationCodeSequence' },
  0x00686550: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TwoDPointCoordinatesSequence' },
  0x00686560: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'TwoDPointCoordinates' },
  0x00686590: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ThreeDPointCoordinates' },
  0x006865A0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TwoDLineCoordinatesSequence' },
  0x006865B0: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'TwoDLineCoordinates' },
  0x006865D0: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SIX,
    keyword: 'ThreeDLineCoordinates' },
  0x006865E0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TwoDPlaneCoordinatesSequence' },
  0x006865F0: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'TwoDPlaneIntersection' },
  0x00686610: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ThreeDPlaneOrigin' },
  0x00686620: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ThreeDPlaneNormal' },
  0x00700001: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicAnnotationSequence' },
  0x00700002: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicLayer' },
  0x00700003: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BoundingBoxAnnotationUnits' },
  0x00700004: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnchorPointAnnotationUnits' },
  0x00700005: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicAnnotationUnits' },
  0x00700006: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UnformattedTextValue' },
  0x00700008: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TextObjectSequence' },
  0x00700009: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicObjectSequence' },
  0x00700010: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'BoundingBoxTopLeftHandCorner' },
  0x00700011: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'BoundingBoxBottomRightHandCorner' },
  0x00700012: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BoundingBoxTextHorizontalJustification' },
  0x00700014: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'AnchorPoint' },
  0x00700015: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnchorPointVisibility' },
  0x00700020: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicDimensions' },
  0x00700021: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfGraphicPoints' },
  0x00700022: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2N,
    keyword: 'GraphicData' },
  0x00700023: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicType' },
  0x00700024: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicFilled' },
  0x00700040: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageRotationRetired' },
  0x00700041: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageHorizontalFlip' },
  0x00700042: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageRotation' },
  0x00700050: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DisplayedAreaTopLeftHandCornerTrial' },
  0x00700051: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DisplayedAreaBottomRightHandCornerTrial' },
  0x00700052: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DisplayedAreaTopLeftHandCorner' },
  0x00700053: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DisplayedAreaBottomRightHandCorner' },
  0x0070005A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplayedAreaSelectionSequence' },
  0x00700060: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicLayerSequence' },
  0x00700062: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicLayerOrder' },
  0x00700066: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicLayerRecommendedDisplayGrayscaleValue' },
  0x00700067: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'GraphicLayerRecommendedDisplayRGBValue' },
  0x00700068: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicLayerDescription' },
  0x00700080: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentLabel' },
  0x00700081: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentDescription' },
  0x00700082: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationCreationDate' },
  0x00700083: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationCreationTime' },
  0x00700084: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentCreatorName' },
  0x00700086: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContentCreatorIdentificationCodeSequence' },
  0x00700087: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlternateContentDescriptionSequence' },
  0x00700100: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationSizeMode' },
  0x00700101: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'PresentationPixelSpacing' },
  0x00700102: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'PresentationPixelAspectRatio' },
  0x00700103: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationPixelMagnificationRatio' },
  0x00700207: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicGroupLabel' },
  0x00700208: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicGroupDescription' },
  0x00700209: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompoundGraphicSequence' },
  0x00700226: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompoundGraphicInstanceID' },
  0x00700227: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FontName' },
  0x00700228: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FontNameType' },
  0x00700229: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CSSFontName' },
  0x00700230: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RotationAngle' },
  0x00700231: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TextStyleSequence' },
  0x00700232: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LineStyleSequence' },
  0x00700233: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FillStyleSequence' },
  0x00700234: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicGroupSequence' },
  0x00700241: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'TextColorCIELabValue' },
  0x00700242: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HorizontalAlignment' },
  0x00700243: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerticalAlignment' },
  0x00700244: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShadowStyle' },
  0x00700245: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShadowOffsetX' },
  0x00700246: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShadowOffsetY' },
  0x00700247: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ShadowColorCIELabValue' },
  0x00700248: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Underlined' },
  0x00700249: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Bold' },
  0x00700250: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Italic' },
  0x00700251: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'PatternOnColorCIELabValue' },
  0x00700252: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'PatternOffColorCIELabValue' },
  0x00700253: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LineThickness' },
  0x00700254: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LineDashingStyle' },
  0x00700255: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LinePattern' },
  0x00700256: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FillPattern' },
  0x00700257: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FillMode' },
  0x00700258: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShadowOpacity' },
  0x00700261: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GapLength' },
  0x00700262: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DiameterOfVisibility' },
  0x00700273: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'RotationPoint' },
  0x00700274: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TickAlignment' },
  0x00700278: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShowTickLabel' },
  0x00700279: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TickLabelAlignment' },
  0x00700282: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompoundGraphicUnits' },
  0x00700284: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatternOnOpacity' },
  0x00700285: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatternOffOpacity' },
  0x00700287: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MajorTicksSequence' },
  0x00700288: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TickPosition' },
  0x00700289: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TickLabel' },
  0x00700294: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompoundGraphicType' },
  0x00700295: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicGroupID' },
  0x00700306: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShapeType' },
  0x00700308: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegistrationSequence' },
  0x00700309: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MatrixRegistrationSequence' },
  0x0070030A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MatrixSequence' },
  0x0070030C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameOfReferenceTransformationMatrixType' },
  0x0070030D: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RegistrationTypeCodeSequence' },
  0x0070030F: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FiducialDescription' },
  0x00700310: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FiducialIdentifier' },
  0x00700311: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FiducialIdentifierCodeSequence' },
  0x00700312: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContourUncertaintyRadius' },
  0x00700314: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UsedFiducialsSequence' },
  0x00700318: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GraphicCoordinatesDataSequence' },
  0x0070031A: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FiducialUID' },
  0x0070031C: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FiducialSetSequence' },
  0x0070031E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FiducialSequence' },
  0x00700401: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'GraphicLayerRecommendedDisplayCIELabValue' },
  0x00700402: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlendingSequence' },
  0x00700403: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelativeOpacity' },
  0x00700404: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSpatialRegistrationSequence' },
  0x00700405: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlendingPosition' },
  0x00720002: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HangingProtocolName' },
  0x00720004: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HangingProtocolDescription' },
  0x00720006: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HangingProtocolLevel' },
  0x00720008: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HangingProtocolCreator' },
  0x0072000A: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HangingProtocolCreationDateTime' },
  0x0072000C: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HangingProtocolDefinitionSequence' },
  0x0072000E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HangingProtocolUserIdentificationCodeSequence' },
  0x00720010: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HangingProtocolUserGroupName' },
  0x00720012: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceHangingProtocolSequence' },
  0x00720014: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPriorsReferenced' },
  0x00720020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageSetsSequence' },
  0x00720022: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageSetSelectorSequence' },
  0x00720024: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageSetSelectorUsageFlag' },
  0x00720026: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectorAttribute' },
  0x00720028: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectorValueNumber' },
  0x00720030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TimeBasedImageSetsSequence' },
  0x00720032: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageSetNumber' },
  0x00720034: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageSetSelectorCategory' },
  0x00720038: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'RelativeTime' },
  0x0072003A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelativeTimeUnits' },
  0x0072003C: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'AbstractPriorValue' },
  0x0072003E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AbstractPriorCodeSequence' },
  0x00720040: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageSetLabel' },
  0x00720050: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectorAttributeVR' },
  0x00720052: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorSequencePointer' },
  0x00720054: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorSequencePointerPrivateCreator' },
  0x00720056: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectorAttributePrivateCreator' },
  0x00720060: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorATValue' },
  0x00720062: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorCSValue' },
  0x00720064: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorISValue' },
  0x00720066: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorLOValue' },
  0x00720068: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectorLTValue' },
  0x0072006A: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorPNValue' },
  0x0072006C: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorSHValue' },
  0x0072006E: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectorSTValue' },
  0x00720070: { vr: 'UT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectorUTValue' },
  0x00720072: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorDSValue' },
  0x00720074: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorFDValue' },
  0x00720076: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorFLValue' },
  0x00720078: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorULValue' },
  0x0072007A: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorUSValue' },
  0x0072007C: { vr: 'SL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorSLValue' },
  0x0072007E: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorSSValue' },
  0x00720080: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SelectorCodeSequenceValue' },
  0x00720100: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfScreens' },
  0x00720102: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalScreenDefinitionSequence' },
  0x00720104: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfVerticalPixels' },
  0x00720106: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfHorizontalPixels' },
  0x00720108: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'DisplayEnvironmentSpatialPosition' },
  0x0072010A: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScreenMinimumGrayscaleBitDepth' },
  0x0072010C: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScreenMinimumColorBitDepth' },
  0x0072010E: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationMaximumRepaintTime' },
  0x00720200: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplaySetsSequence' },
  0x00720202: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplaySetNumber' },
  0x00720203: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplaySetLabel' },
  0x00720204: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplaySetPresentationGroup' },
  0x00720206: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplaySetPresentationGroupDescription' },
  0x00720208: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PartialDataDisplayHandling' },
  0x00720210: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SynchronizedScrollingSequence' },
  0x00720212: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2N,
    keyword: 'DisplaySetScrollingGroup' },
  0x00720214: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NavigationIndicatorSequence' },
  0x00720216: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NavigationDisplaySet' },
  0x00720218: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ReferenceDisplaySets' },
  0x00720300: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxesSequence' },
  0x00720302: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxNumber' },
  0x00720304: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxLayoutType' },
  0x00720306: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxTileHorizontalDimension' },
  0x00720308: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxTileVerticalDimension' },
  0x00720310: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxScrollDirection' },
  0x00720312: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxSmallScrollType' },
  0x00720314: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxSmallScrollAmount' },
  0x00720316: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxLargeScrollType' },
  0x00720318: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxLargeScrollAmount' },
  0x00720320: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxOverlapPriority' },
  0x00720330: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CineRelativeToRealTime' },
  0x00720400: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilterOperationsSequence' },
  0x00720402: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilterByCategory' },
  0x00720404: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilterByAttributePresence' },
  0x00720406: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilterByOperator' },
  0x00720420: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'StructuredDisplayBackgroundCIELabValue' },
  0x00720421: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'EmptyImageBoxCIELabValue' },
  0x00720422: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StructuredDisplayImageBoxSequence' },
  0x00720424: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StructuredDisplayTextBoxSequence' },
  0x00720427: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedFirstFrameSequence' },
  0x00720430: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxSynchronizationSequence' },
  0x00720432: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2N,
    keyword: 'SynchronizedImageBoxList' },
  0x00720434: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TypeOfSynchronization' },
  0x00720500: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlendingOperationType' },
  0x00720510: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReformattingOperationType' },
  0x00720512: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReformattingThickness' },
  0x00720514: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReformattingInterval' },
  0x00720516: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReformattingOperationInitialViewDirection' },
  0x00720520: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ThreeDRenderingType' },
  0x00720600: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SortingOperationsSequence' },
  0x00720602: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SortByCategory' },
  0x00720604: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SortingDirection' },
  0x00720700: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'DisplaySetPatientOrientation' },
  0x00720702: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VOIType' },
  0x00720704: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PseudoColorType' },
  0x00720705: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PseudoColorPaletteInstanceReferenceSequence' },
  0x00720706: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShowGrayscaleInverted' },
  0x00720710: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShowImageTrueSizeFlag' },
  0x00720712: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShowGraphicAnnotationFlag' },
  0x00720714: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShowPatientDemographicsFlag' },
  0x00720716: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShowAcquisitionTechniquesFlag' },
  0x00720717: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplaySetHorizontalJustification' },
  0x00720718: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DisplaySetVerticalJustification' },
  0x00740120: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContinuationStartMeterset' },
  0x00740121: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContinuationEndMeterset' },
  0x00741000: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureStepState' },
  0x00741002: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureStepProgressInformationSequence' },
  0x00741004: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureStepProgress' },
  0x00741006: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureStepProgressDescription' },
  0x00741008: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureStepCommunicationsURISequence' },
  0x0074100a: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContactURI' },
  0x0074100c: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContactDisplayName' },
  0x0074100e: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureStepDiscontinuationReasonCodeSequence' },
  0x00741020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamTaskSequence' },
  0x00741022: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamTaskType' },
  0x00741024: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamOrderIndexTrial' },
  0x00741026: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopVerticalAdjustedPosition' },
  0x00741027: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopLongitudinalAdjustedPosition' },
  0x00741028: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopLateralAdjustedPosition' },
  0x0074102A: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSupportAdjustedAngle' },
  0x0074102B: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopEccentricAdjustedAngle' },
  0x0074102C: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopPitchAdjustedAngle' },
  0x0074102D: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopRollAdjustedAngle' },
  0x00741030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveryVerificationImageSequence' },
  0x00741032: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VerificationImageTiming' },
  0x00741034: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoubleExposureFlag' },
  0x00741036: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoubleExposureOrdering' },
  0x00741038: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoubleExposureMetersetTrial' },
  0x0074103A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'DoubleExposureFieldDeltaTrial' },
  0x00741040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelatedReferenceRTImageSequence' },
  0x00741042: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralMachineVerificationSequence' },
  0x00741044: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConventionalMachineVerificationSequence' },
  0x00741046: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonMachineVerificationSequence' },
  0x00741048: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FailedAttributesSequence' },
  0x0074104A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverriddenAttributesSequence' },
  0x0074104C: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConventionalControlPointVerificationSequence' },
  0x0074104E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonControlPointVerificationSequence' },
  0x00741050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AttributeOccurrenceSequence' },
  0x00741052: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AttributeOccurrencePointer' },
  0x00741054: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AttributeItemSelector' },
  0x00741056: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AttributeOccurrencePrivateCreator' },
  0x00741057: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SelectorSequencePointerItems' },
  0x00741200: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcedureStepPriority' },
  0x00741202: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WorklistLabel' },
  0x00741204: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureStepLabel' },
  0x00741210: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScheduledProcessingParametersSequence' },
  0x00741212: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerformedProcessingParametersSequence' },
  0x00741216: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UnifiedProcedureStepPerformedProcedureSequence' },
  0x00741220: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelatedProcedureStepSequence' },
  0x00741222: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureStepRelationshipType' },
  0x00741224: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReplacedProcedureStepSequence' },
  0x00741230: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeletionLock' },
  0x00741234: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReceivingAE' },
  0x00741236: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestingAE' },
  0x00741238: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReasonForCancellation' },
  0x00741242: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SCPStatus' },
  0x00741244: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SubscriptionListStatus' },
  0x00741246: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'UnifiedProcedureStepListStatus' },
  0x00741324: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamOrderIndex' },
  0x00741338: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoubleExposureMeterset' },
  0x0074133A: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'DoubleExposureFieldDelta' },
  0x00760001: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantAssemblyTemplateName' },
  0x00760003: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantAssemblyTemplateIssuer' },
  0x00760006: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantAssemblyTemplateVersion' },
  0x00760008: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReplacedImplantAssemblyTemplateSequence' },
  0x0076000A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantAssemblyTemplateType' },
  0x0076000C: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OriginalImplantAssemblyTemplateSequence' },
  0x0076000E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DerivationImplantAssemblyTemplateSequence' },
  0x00760010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantAssemblyTemplateTargetAnatomySequence' },
  0x00760020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProcedureTypeCodeSequence' },
  0x00760030: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SurgicalTechnique' },
  0x00760032: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ComponentTypesSequence' },
  0x00760034: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ComponentTypeCodeSequence' },
  0x00760036: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExclusiveComponentType' },
  0x00760038: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MandatoryComponentType' },
  0x00760040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ComponentSequence' },
  0x00760055: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ComponentID' },
  0x00760060: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ComponentAssemblySequence' },
  0x00760070: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Component1ReferencedID' },
  0x00760080: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Component1ReferencedMatingFeatureSetID' },
  0x00760090: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Component1ReferencedMatingFeatureID' },
  0x007600A0: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Component2ReferencedID' },
  0x007600B0: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Component2ReferencedMatingFeatureSetID' },
  0x007600C0: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Component2ReferencedMatingFeatureID' },
  0x00780001: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupName' },
  0x00780010: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupDescription' },
  0x00780020: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupIssuer' },
  0x00780024: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupVersion' },
  0x00780026: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReplacedImplantTemplateGroupSequence' },
  0x00780028: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupTargetAnatomySequence' },
  0x0078002A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupMembersSequence' },
  0x0078002E: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupMemberID' },
  0x00780050: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ThreeDImplantTemplateGroupMemberMatchingPoint' },
  0x00780060: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_NINE,
    keyword: 'ThreeDImplantTemplateGroupMemberMatchingAxes' },
  0x00780070: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence' },
  0x00780090: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'TwoDImplantTemplateGroupMemberMatchingPoint' },
  0x007800A0: { vr: 'FD',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'TwoDImplantTemplateGroupMemberMatchingAxes' },
  0x007800B0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupVariationDimensionSequence' },
  0x007800B2: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupVariationDimensionName' },
  0x007800B4: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupVariationDimensionRankSequence' },
  0x007800B6: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedImplantTemplateGroupMemberID' },
  0x007800B8: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImplantTemplateGroupVariationDimensionRank' },
  0x00880130: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StorageMediaFileSetID' },
  0x00880140: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StorageMediaFileSetUID' },
  0x00880200: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IconImageSequence' },
  0x00880904: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TopicTitle' },
  0x00880906: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TopicSubject' },
  0x00880910: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TopicAuthor' },
  0x00880912: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_32,
    keyword: 'TopicKeywords' },
  0x01000410: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SOPInstanceStatus' },
  0x01000420: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SOPAuthorizationDateTime' },
  0x01000424: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SOPAuthorizationComment' },
  0x01000426: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AuthorizationEquipmentCertificationNumber' },
  0x04000005: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MACIDNumber' },
  0x04000010: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MACCalculationTransferSyntaxUID' },
  0x04000015: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MACAlgorithm' },
  0x04000020: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'DataElementsSigned' },
  0x04000100: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DigitalSignatureUID' },
  0x04000105: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DigitalSignatureDateTime' },
  0x04000110: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CertificateType' },
  0x04000115: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CertificateOfSigner' },
  0x04000120: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Signature' },
  0x04000305: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CertifiedTimestampType' },
  0x04000310: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CertifiedTimestamp' },
  0x04000401: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DigitalSignaturePurposeCodeSequence' },
  0x04000402: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedDigitalSignatureSequence' },
  0x04000403: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSOPInstanceMACSequence' },
  0x04000404: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MAC' },
  0x04000500: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EncryptedAttributesSequence' },
  0x04000510: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EncryptedContentTransferSyntaxUID' },
  0x04000520: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EncryptedContent' },
  0x04000550: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModifiedAttributesSequence' },
  0x04000561: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OriginalAttributesSequence' },
  0x04000562: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AttributeModificationDateTime' },
  0x04000563: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ModifyingSystem' },
  0x04000564: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceOfPreviousValues' },
  0x04000565: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReasonForTheAttributeModification' },
  0x20000010: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfCopies' },
  0x2000001E: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrinterConfigurationSequence' },
  0x20000020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrintPriority' },
  0x20000030: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MediumType' },
  0x20000040: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilmDestination' },
  0x20000050: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilmSessionLabel' },
  0x20000060: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MemoryAllocation' },
  0x20000061: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaximumMemoryAllocation' },
  0x20000062: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ColorImagePrintingFlag' },
  0x20000063: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CollationFlag' },
  0x20000065: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnnotationFlag' },
  0x20000067: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageOverlayFlag' },
  0x20000069: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationLUTFlag' },
  0x2000006A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxPresentationLUTFlag' },
  0x200000A0: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MemoryBitDepth' },
  0x200000A1: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrintingBitDepth' },
  0x200000A2: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MediaInstalledSequence' },
  0x200000A4: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OtherMediaAvailableSequence' },
  0x200000A8: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SupportedImageDisplayFormatsSequence' },
  0x20000500: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedFilmBoxSequence' },
  0x20000510: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedStoredPrintSequence' },
  0x20100010: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageDisplayFormat' },
  0x20100030: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnnotationDisplayFormatID' },
  0x20100040: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilmOrientation' },
  0x20100050: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilmSizeID' },
  0x20100052: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrinterResolutionID' },
  0x20100054: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DefaultPrinterResolutionID' },
  0x20100060: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MagnificationType' },
  0x20100080: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SmoothingType' },
  0x201000A6: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DefaultMagnificationType' },
  0x201000A7: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OtherMagnificationTypesAvailable' },
  0x201000A8: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DefaultSmoothingType' },
  0x201000A9: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OtherSmoothingTypesAvailable' },
  0x20100100: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BorderDensity' },
  0x20100110: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EmptyImageDensity' },
  0x20100120: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MinDensity' },
  0x20100130: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaxDensity' },
  0x20100140: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Trim' },
  0x20100150: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConfigurationInformation' },
  0x20100152: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConfigurationInformationDescription' },
  0x20100154: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaximumCollatedFilms' },
  0x2010015E: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Illumination' },
  0x20100160: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReflectedAmbientLight' },
  0x20100376: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'PrinterPixelSpacing' },
  0x20100500: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedFilmSessionSequence' },
  0x20100510: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedImageBoxSequence' },
  0x20100520: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedBasicAnnotationBoxSequence' },
  0x20200010: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxPosition' },
  0x20200020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Polarity' },
  0x20200030: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedImageSize' },
  0x20200040: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedDecimateCropBehavior' },
  0x20200050: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedResolutionID' },
  0x202000A0: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedImageSizeFlag' },
  0x202000A2: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DecimateCropResult' },
  0x20200110: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BasicGrayscaleImageSequence' },
  0x20200111: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BasicColorImageSequence' },
  0x20200130: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedImageOverlayBoxSequence' },
  0x20200140: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedVOILUTBoxSequence' },
  0x20300010: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnnotationPosition' },
  0x20300020: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TextString' },
  0x20400010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedOverlayPlaneSequence' },
  0x20400011: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_99,
    keyword: 'ReferencedOverlayPlaneGroups' },
  0x20400020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayPixelDataSequence' },
  0x20400060: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayMagnificationType' },
  0x20400070: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlaySmoothingType' },
  0x20400072: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayOrImageMagnification' },
  0x20400074: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MagnifyToNumberOfColumns' },
  0x20400080: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayForegroundDensity' },
  0x20400082: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayBackgroundDensity' },
  0x20400090: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayMode' },
  0x20400100: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ThresholdDensity' },
  0x20400500: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedImageBoxSequenceRetired' },
  0x20500010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationLUTSequence' },
  0x20500020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationLUTShape' },
  0x20500500: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedPresentationLUTSequence' },
  0x21000010: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrintJobID' },
  0x21000020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExecutionStatus' },
  0x21000030: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExecutionStatusInfo' },
  0x21000040: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CreationDate' },
  0x21000050: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CreationTime' },
  0x21000070: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Originator' },
  0x21000140: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DestinationAE' },
  0x21000160: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OwnerID' },
  0x21000170: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFilms' },
  0x21000500: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedPrintJobSequencePullStoredPrint' },
  0x21100010: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrinterStatus' },
  0x21100020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrinterStatusInfo' },
  0x21100030: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrinterName' },
  0x21100099: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrintQueueID' },
  0x21200010: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'QueueStatus' },
  0x21200050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrintJobDescriptionSequence' },
  0x21200070: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedPrintJobSequence' },
  0x21300010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrintManagementCapabilitiesSequence' },
  0x21300015: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrinterCharacteristicsSequence' },
  0x21300030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FilmBoxContentSequence' },
  0x21300040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageBoxContentSequence' },
  0x21300050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AnnotationContentSequence' },
  0x21300060: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageOverlayBoxContentSequence' },
  0x21300080: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PresentationLUTContentSequence' },
  0x213000A0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ProposedStudySequence' },
  0x213000C0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OriginalImageSequence' },
  0x22000001: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LabelUsingInformationExtractedFromInstances' },
  0x22000002: { vr: 'UT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LabelText' },
  0x22000003: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LabelStyleSelection' },
  0x22000004: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MediaDisposition' },
  0x22000005: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BarcodeValue' },
  0x22000006: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BarcodeSymbology' },
  0x22000007: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AllowMediaSplitting' },
  0x22000008: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IncludeNonDICOMObjects' },
  0x22000009: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IncludeDisplayApplication' },
  0x2200000A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PreserveCompositeInstancesAfterMediaCreation' },
  0x2200000B: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalNumberOfPiecesOfMediaCreated' },
  0x2200000C: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedMediaApplicationProfile' },
  0x2200000D: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedStorageMediaSequence' },
  0x2200000E: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'FailureAttributes' },
  0x2200000F: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AllowLossyCompression' },
  0x22000020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestPriority' },
  0x30020002: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTImageLabel' },
  0x30020003: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTImageName' },
  0x30020004: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTImageDescription' },
  0x3002000A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReportedValuesOrigin' },
  0x3002000C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTImagePlane' },
  0x3002000D: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'XRayImageReceptorTranslation' },
  0x3002000E: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'XRayImageReceptorAngle' },
  0x30020010: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SIX,
    keyword: 'RTImageOrientation' },
  0x30020011: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ImagePlanePixelSpacing' },
  0x30020012: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'RTImagePosition' },
  0x30020020: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiationMachineName' },
  0x30020022: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiationMachineSAD' },
  0x30020024: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiationMachineSSD' },
  0x30020026: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTImageSID' },
  0x30020028: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceToReferenceObjectDistance' },
  0x30020029: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FractionNumber' },
  0x30020030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ExposureSequence' },
  0x30020032: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MetersetExposure' },
  0x30020034: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_FOUR,
    keyword: 'DiaphragmPosition' },
  0x30020040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FluenceMapSequence' },
  0x30020041: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FluenceDataSource' },
  0x30020042: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FluenceDataScale' },
  0x30020050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrimaryFluenceModeSequence' },
  0x30020051: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FluenceMode' },
  0x30020052: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FluenceModeID' },
  0x30040001: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHType' },
  0x30040002: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseUnits' },
  0x30040004: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseType' },
  0x30040006: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseComment' },
  0x30040008: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'NormalizationPoint' },
  0x3004000A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseSummationType' },
  0x3004000C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2N,
    keyword: 'GridFrameOffsetVector' },
  0x3004000E: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseGridScaling' },
  0x30040010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTDoseROISequence' },
  0x30040012: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseValue' },
  0x30040014: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1_3,
    keyword: 'TissueHeterogeneityCorrection' },
  0x30040040: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'DVHNormalizationPoint' },
  0x30040042: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHNormalizationDoseValue' },
  0x30040050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHSequence' },
  0x30040052: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHDoseScaling' },
  0x30040054: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHVolumeUnits' },
  0x30040056: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHNumberOfBins' },
  0x30040058: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'DVHData' },
  0x30040060: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHReferencedROISequence' },
  0x30040062: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHROIContributionType' },
  0x30040070: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHMinimumDose' },
  0x30040072: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHMaximumDose' },
  0x30040074: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DVHMeanDose' },
  0x30060002: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StructureSetLabel' },
  0x30060004: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StructureSetName' },
  0x30060006: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StructureSetDescription' },
  0x30060008: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StructureSetDate' },
  0x30060009: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StructureSetTime' },
  0x30060010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedFrameOfReferenceSequence' },
  0x30060012: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTReferencedStudySequence' },
  0x30060014: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTReferencedSeriesSequence' },
  0x30060016: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContourImageSequence' },
  0x30060020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StructureSetROISequence' },
  0x30060022: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROINumber' },
  0x30060024: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedFrameOfReferenceUID' },
  0x30060026: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIName' },
  0x30060028: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIDescription' },
  0x3006002A: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ROIDisplayColor' },
  0x3006002C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIVolume' },
  0x30060030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTRelatedROISequence' },
  0x30060033: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTROIRelationship' },
  0x30060036: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIGenerationAlgorithm' },
  0x30060038: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIGenerationDescription' },
  0x30060039: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIContourSequence' },
  0x30060040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContourSequence' },
  0x30060042: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContourGeometricType' },
  0x30060044: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContourSlabThickness' },
  0x30060045: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ContourOffsetVector' },
  0x30060046: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfContourPoints' },
  0x30060048: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ContourNumber' },
  0x30060049: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'AttachedContours' },
  0x30060050: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_3_3N,
    keyword: 'ContourData' },
  0x30060080: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTROIObservationsSequence' },
  0x30060082: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ObservationNumber' },
  0x30060084: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedROINumber' },
  0x30060085: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIObservationLabel' },
  0x30060086: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTROIIdentificationCodeSequence' },
  0x30060088: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIObservationDescription' },
  0x300600A0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelatedRTROIObservationsSequence' },
  0x300600A4: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTROIInterpretedType' },
  0x300600A6: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIInterpreter' },
  0x300600B0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIPhysicalPropertiesSequence' },
  0x300600B2: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIPhysicalProperty' },
  0x300600B4: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIPhysicalPropertyValue' },
  0x300600B6: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIElementalCompositionSequence' },
  0x300600B7: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIElementalCompositionAtomicNumber' },
  0x300600B8: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIElementalCompositionAtomicMassFraction' },
  0x300600C0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameOfReferenceRelationshipSequence' },
  0x300600C2: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RelatedFrameOfReferenceUID' },
  0x300600C4: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameOfReferenceTransformationType' },
  0x300600C6: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_16,
    keyword: 'FrameOfReferenceTransformationMatrix' },
  0x300600C8: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FrameOfReferenceTransformationComment' },
  0x30080010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredDoseReferenceSequence' },
  0x30080012: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredDoseDescription' },
  0x30080014: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredDoseType' },
  0x30080016: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredDoseValue' },
  0x30080020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentSessionBeamSequence' },
  0x30080021: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentSessionIonBeamSequence' },
  0x30080022: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurrentFractionNumber' },
  0x30080024: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentControlPointDate' },
  0x30080025: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentControlPointTime' },
  0x3008002A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentTerminationStatus' },
  0x3008002B: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentTerminationCode' },
  0x3008002C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentVerificationStatus' },
  0x30080030: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedTreatmentRecordSequence' },
  0x30080032: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecifiedPrimaryMeterset' },
  0x30080033: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecifiedSecondaryMeterset' },
  0x30080036: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveredPrimaryMeterset' },
  0x30080037: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveredSecondaryMeterset' },
  0x3008003A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecifiedTreatmentTime' },
  0x3008003B: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveredTreatmentTime' },
  0x30080040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ControlPointDeliverySequence' },
  0x30080041: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonControlPointDeliverySequence' },
  0x30080042: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecifiedMeterset' },
  0x30080044: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveredMeterset' },
  0x30080045: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MetersetRateSet' },
  0x30080046: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MetersetRateDelivered' },
  0x30080047: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ScanSpotMetersetsDelivered' },
  0x30080048: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseRateDelivered' },
  0x30080050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentSummaryCalculatedDoseReferenceSequence' },
  0x30080052: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CumulativeDoseToDoseReference' },
  0x30080054: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FirstTreatmentDate' },
  0x30080056: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MostRecentTreatmentDate' },
  0x3008005A: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFractionsDelivered' },
  0x30080060: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverrideSequence' },
  0x30080061: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParameterSequencePointer' },
  0x30080062: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverrideParameterPointer' },
  0x30080063: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParameterItemIndex' },
  0x30080064: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MeasuredDoseReferenceNumber' },
  0x30080065: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ParameterPointer' },
  0x30080066: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverrideReason' },
  0x30080068: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CorrectedParameterSequence' },
  0x3008006A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CorrectionValue' },
  0x30080070: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalculatedDoseReferenceSequence' },
  0x30080072: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalculatedDoseReferenceNumber' },
  0x30080074: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalculatedDoseReferenceDescription' },
  0x30080076: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CalculatedDoseReferenceDoseValue' },
  0x30080078: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartMeterset' },
  0x3008007A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EndMeterset' },
  0x30080080: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedMeasuredDoseReferenceSequence' },
  0x30080082: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedMeasuredDoseReferenceNumber' },
  0x30080090: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedCalculatedDoseReferenceSequence' },
  0x30080092: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedCalculatedDoseReferenceNumber' },
  0x300800A0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamLimitingDeviceLeafPairsSequence' },
  0x300800B0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedWedgeSequence' },
  0x300800C0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedCompensatorSequence' },
  0x300800D0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedBlockSequence' },
  0x300800E0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentSummaryMeasuredDoseReferenceSequence' },
  0x300800F0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedSnoutSequence' },
  0x300800F2: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedRangeShifterSequence' },
  0x300800F4: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedLateralSpreadingDeviceSequence' },
  0x300800F6: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedRangeModulatorSequence' },
  0x30080100: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedSourceSequence' },
  0x30080105: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceSerialNumber' },
  0x30080110: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentSessionApplicationSetupSequence' },
  0x30080116: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationSetupCheck' },
  0x30080120: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedBrachyAccessoryDeviceSequence' },
  0x30080122: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedBrachyAccessoryDeviceNumber' },
  0x30080130: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedChannelSequence' },
  0x30080132: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecifiedChannelTotalTime' },
  0x30080134: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveredChannelTotalTime' },
  0x30080136: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecifiedNumberOfPulses' },
  0x30080138: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveredNumberOfPulses' },
  0x3008013A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpecifiedPulseRepetitionInterval' },
  0x3008013C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveredPulseRepetitionInterval' },
  0x30080140: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedSourceApplicatorSequence' },
  0x30080142: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSourceApplicatorNumber' },
  0x30080150: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RecordedChannelShieldSequence' },
  0x30080152: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedChannelShieldNumber' },
  0x30080160: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyControlPointDeliveredSequence' },
  0x30080162: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SafePositionExitDate' },
  0x30080164: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SafePositionExitTime' },
  0x30080166: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SafePositionReturnDate' },
  0x30080168: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SafePositionReturnTime' },
  0x30080200: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurrentTreatmentStatus' },
  0x30080202: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentStatusComment' },
  0x30080220: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FractionGroupSummarySequence' },
  0x30080223: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedFractionNumber' },
  0x30080224: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FractionGroupType' },
  0x30080230: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamStopperPosition' },
  0x30080240: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FractionStatusSummarySequence' },
  0x30080250: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentDate' },
  0x30080251: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentTime' },
  0x300A0002: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTPlanLabel' },
  0x300A0003: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTPlanName' },
  0x300A0004: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTPlanDescription' },
  0x300A0006: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTPlanDate' },
  0x300A0007: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTPlanTime' },
  0x300A0009: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TreatmentProtocols' },
  0x300A000A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlanIntent' },
  0x300A000B: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'TreatmentSites' },
  0x300A000C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTPlanGeometry' },
  0x300A000E: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrescriptionDescription' },
  0x300A0010: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseReferenceSequence' },
  0x300A0012: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseReferenceNumber' },
  0x300A0013: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseReferenceUID' },
  0x300A0014: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseReferenceStructureType' },
  0x300A0015: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalBeamEnergyUnit' },
  0x300A0016: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseReferenceDescription' },
  0x300A0018: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'DoseReferencePointCoordinates' },
  0x300A001A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalPriorDose' },
  0x300A0020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseReferenceType' },
  0x300A0021: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ConstraintWeight' },
  0x300A0022: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveryWarningDose' },
  0x300A0023: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DeliveryMaximumDose' },
  0x300A0025: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TargetMinimumDose' },
  0x300A0026: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TargetPrescriptionDose' },
  0x300A0027: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TargetMaximumDose' },
  0x300A0028: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TargetUnderdoseVolumeFraction' },
  0x300A002A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrganAtRiskFullVolumeDose' },
  0x300A002B: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrganAtRiskLimitDose' },
  0x300A002C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrganAtRiskMaximumDose' },
  0x300A002D: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OrganAtRiskOverdoseVolumeFraction' },
  0x300A0040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ToleranceTableSequence' },
  0x300A0042: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ToleranceTableNumber' },
  0x300A0043: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ToleranceTableLabel' },
  0x300A0044: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryAngleTolerance' },
  0x300A0046: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamLimitingDeviceAngleTolerance' },
  0x300A0048: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamLimitingDeviceToleranceSequence' },
  0x300A004A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamLimitingDevicePositionTolerance' },
  0x300A004B: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SnoutPositionTolerance' },
  0x300A004C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSupportAngleTolerance' },
  0x300A004E: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopEccentricAngleTolerance' },
  0x300A004F: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopPitchAngleTolerance' },
  0x300A0050: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopRollAngleTolerance' },
  0x300A0051: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopVerticalPositionTolerance' },
  0x300A0052: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopLongitudinalPositionTolerance' },
  0x300A0053: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopLateralPositionTolerance' },
  0x300A0055: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTPlanRelationship' },
  0x300A0070: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FractionGroupSequence' },
  0x300A0071: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FractionGroupNumber' },
  0x300A0072: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FractionGroupDescription' },
  0x300A0078: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFractionsPlanned' },
  0x300A0079: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFractionPatternDigitsPerDay' },
  0x300A007A: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RepeatFractionCycleLength' },
  0x300A007B: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FractionPattern' },
  0x300A0080: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfBeams' },
  0x300A0082: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'BeamDoseSpecificationPoint' },
  0x300A0084: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamDose' },
  0x300A0086: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamMeterset' },
  0x300A0088: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamDosePointDepth' },
  0x300A0089: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamDosePointEquivalentDepth' },
  0x300A008A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamDosePointSSD' },
  0x300A00A0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfBrachyApplicationSetups' },
  0x300A00A2: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'BrachyApplicationSetupDoseSpecificationPoint' },
  0x300A00A4: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyApplicationSetupDose' },
  0x300A00B0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamSequence' },
  0x300A00B2: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentMachineName' },
  0x300A00B3: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PrimaryDosimeterUnit' },
  0x300A00B4: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceAxisDistance' },
  0x300A00B6: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamLimitingDeviceSequence' },
  0x300A00B8: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RTBeamLimitingDeviceType' },
  0x300A00BA: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceToBeamLimitingDeviceDistance' },
  0x300A00BB: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IsocenterToBeamLimitingDeviceDistance' },
  0x300A00BC: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfLeafJawPairs' },
  0x300A00BE: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_3N,
    keyword: 'LeafPositionBoundaries' },
  0x300A00C0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamNumber' },
  0x300A00C2: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamName' },
  0x300A00C3: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamDescription' },
  0x300A00C4: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamType' },
  0x300A00C6: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiationType' },
  0x300A00C7: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HighDoseTechniqueType' },
  0x300A00C8: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferenceImageNumber' },
  0x300A00CA: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PlannedVerificationImageSequence' },
  0x300A00CC: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ImagingDeviceSpecificAcquisitionParameters' },
  0x300A00CE: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentDeliveryType' },
  0x300A00D0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfWedges' },
  0x300A00D1: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgeSequence' },
  0x300A00D2: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgeNumber' },
  0x300A00D3: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgeType' },
  0x300A00D4: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgeID' },
  0x300A00D5: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgeAngle' },
  0x300A00D6: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgeFactor' },
  0x300A00D7: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalWedgeTrayWaterEquivalentThickness' },
  0x300A00D8: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgeOrientation' },
  0x300A00D9: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IsocenterToWedgeTrayDistance' },
  0x300A00DA: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceToWedgeTrayDistance' },
  0x300A00DB: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgeThinEdgePosition' },
  0x300A00DC: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BolusID' },
  0x300A00DD: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BolusDescription' },
  0x300A00E0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfCompensators' },
  0x300A00E1: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MaterialID' },
  0x300A00E2: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalCompensatorTrayFactor' },
  0x300A00E3: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorSequence' },
  0x300A00E4: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorNumber' },
  0x300A00E5: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorID' },
  0x300A00E6: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceToCompensatorTrayDistance' },
  0x300A00E7: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorRows' },
  0x300A00E8: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorColumns' },
  0x300A00E9: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'CompensatorPixelSpacing' },
  0x300A00EA: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'CompensatorPosition' },
  0x300A00EB: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CompensatorTransmissionData' },
  0x300A00EC: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CompensatorThicknessData' },
  0x300A00ED: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfBoli' },
  0x300A00EE: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorType' },
  0x300A00F0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfBlocks' },
  0x300A00F2: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalBlockTrayFactor' },
  0x300A00F3: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalBlockTrayWaterEquivalentThickness' },
  0x300A00F4: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockSequence' },
  0x300A00F5: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockTrayID' },
  0x300A00F6: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceToBlockTrayDistance' },
  0x300A00F7: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IsocenterToBlockTrayDistance' },
  0x300A00F8: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockType' },
  0x300A00F9: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AccessoryCode' },
  0x300A00FA: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockDivergence' },
  0x300A00FB: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockMountingPosition' },
  0x300A00FC: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockNumber' },
  0x300A00FE: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockName' },
  0x300A0100: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockThickness' },
  0x300A0102: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockTransmission' },
  0x300A0104: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BlockNumberOfPoints' },
  0x300A0106: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'BlockData' },
  0x300A0107: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicatorSequence' },
  0x300A0108: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicatorID' },
  0x300A0109: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicatorType' },
  0x300A010A: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicatorDescription' },
  0x300A010C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CumulativeDoseReferenceCoefficient' },
  0x300A010E: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FinalCumulativeMetersetWeight' },
  0x300A0110: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfControlPoints' },
  0x300A0111: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ControlPointSequence' },
  0x300A0112: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ControlPointIndex' },
  0x300A0114: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NominalBeamEnergy' },
  0x300A0115: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DoseRateSet' },
  0x300A0116: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgePositionSequence' },
  0x300A0118: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WedgePosition' },
  0x300A011A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamLimitingDevicePositionSequence' },
  0x300A011C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_2_2N,
    keyword: 'LeafJawPositions' },
  0x300A011E: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryAngle' },
  0x300A011F: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryRotationDirection' },
  0x300A0120: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamLimitingDeviceAngle' },
  0x300A0121: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamLimitingDeviceRotationDirection' },
  0x300A0122: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSupportAngle' },
  0x300A0123: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSupportRotationDirection' },
  0x300A0124: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopEccentricAxisDistance' },
  0x300A0125: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopEccentricAngle' },
  0x300A0126: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopEccentricRotationDirection' },
  0x300A0128: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopVerticalPosition' },
  0x300A0129: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopLongitudinalPosition' },
  0x300A012A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopLateralPosition' },
  0x300A012C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'IsocenterPosition' },
  0x300A012E: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'SurfaceEntryPoint' },
  0x300A0130: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceToSurfaceDistance' },
  0x300A0134: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CumulativeMetersetWeight' },
  0x300A0140: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopPitchAngle' },
  0x300A0142: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopPitchRotationDirection' },
  0x300A0144: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopRollAngle' },
  0x300A0146: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopRollRotationDirection' },
  0x300A0148: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HeadFixationAngle' },
  0x300A014A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryPitchAngle' },
  0x300A014C: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryPitchRotationDirection' },
  0x300A014E: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryPitchAngleTolerance' },
  0x300A0180: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSetupSequence' },
  0x300A0182: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSetupNumber' },
  0x300A0183: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSetupLabel' },
  0x300A0184: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientAdditionalPosition' },
  0x300A0190: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationDeviceSequence' },
  0x300A0192: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationDeviceType' },
  0x300A0194: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationDeviceLabel' },
  0x300A0196: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationDeviceDescription' },
  0x300A0198: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationDevicePosition' },
  0x300A0199: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationDevicePitchAngle' },
  0x300A019A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationDeviceRollAngle' },
  0x300A01A0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShieldingDeviceSequence' },
  0x300A01A2: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShieldingDeviceType' },
  0x300A01A4: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShieldingDeviceLabel' },
  0x300A01A6: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShieldingDeviceDescription' },
  0x300A01A8: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShieldingDevicePosition' },
  0x300A01B0: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SetupTechnique' },
  0x300A01B2: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SetupTechniqueDescription' },
  0x300A01B4: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SetupDeviceSequence' },
  0x300A01B6: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SetupDeviceType' },
  0x300A01B8: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SetupDeviceLabel' },
  0x300A01BA: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SetupDeviceDescription' },
  0x300A01BC: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SetupDeviceParameter' },
  0x300A01D0: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SetupReferenceDescription' },
  0x300A01D2: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopVerticalSetupDisplacement' },
  0x300A01D4: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopLongitudinalSetupDisplacement' },
  0x300A01D6: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TableTopLateralSetupDisplacement' },
  0x300A0200: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyTreatmentTechnique' },
  0x300A0202: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyTreatmentType' },
  0x300A0206: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TreatmentMachineSequence' },
  0x300A0210: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceSequence' },
  0x300A0212: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceNumber' },
  0x300A0214: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceType' },
  0x300A0216: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceManufacturer' },
  0x300A0218: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ActiveSourceDiameter' },
  0x300A021A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ActiveSourceLength' },
  0x300A0222: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceEncapsulationNominalThickness' },
  0x300A0224: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceEncapsulationNominalTransmission' },
  0x300A0226: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceIsotopeName' },
  0x300A0228: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceIsotopeHalfLife' },
  0x300A0229: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceStrengthUnits' },
  0x300A022A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferenceAirKermaRate' },
  0x300A022B: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceStrength' },
  0x300A022C: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceStrengthReferenceDate' },
  0x300A022E: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceStrengthReferenceTime' },
  0x300A0230: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationSetupSequence' },
  0x300A0232: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationSetupType' },
  0x300A0234: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationSetupNumber' },
  0x300A0236: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationSetupName' },
  0x300A0238: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicationSetupManufacturer' },
  0x300A0240: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemplateNumber' },
  0x300A0242: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemplateType' },
  0x300A0244: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TemplateName' },
  0x300A0250: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalReferenceAirKerma' },
  0x300A0260: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyAccessoryDeviceSequence' },
  0x300A0262: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyAccessoryDeviceNumber' },
  0x300A0263: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyAccessoryDeviceID' },
  0x300A0264: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyAccessoryDeviceType' },
  0x300A0266: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyAccessoryDeviceName' },
  0x300A026A: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyAccessoryDeviceNominalThickness' },
  0x300A026C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyAccessoryDeviceNominalTransmission' },
  0x300A0280: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelSequence' },
  0x300A0282: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelNumber' },
  0x300A0284: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelLength' },
  0x300A0286: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelTotalTime' },
  0x300A0288: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceMovementType' },
  0x300A028A: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPulses' },
  0x300A028C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PulseRepetitionInterval' },
  0x300A0290: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicatorNumber' },
  0x300A0291: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicatorID' },
  0x300A0292: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicatorType' },
  0x300A0294: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicatorName' },
  0x300A0296: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicatorLength' },
  0x300A0298: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicatorManufacturer' },
  0x300A029C: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicatorWallNominalThickness' },
  0x300A029E: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicatorWallNominalTransmission' },
  0x300A02A0: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceApplicatorStepSize' },
  0x300A02A2: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransferTubeNumber' },
  0x300A02A4: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransferTubeLength' },
  0x300A02B0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelShieldSequence' },
  0x300A02B2: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelShieldNumber' },
  0x300A02B3: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelShieldID' },
  0x300A02B4: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelShieldName' },
  0x300A02B8: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelShieldNominalThickness' },
  0x300A02BA: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelShieldNominalTransmission' },
  0x300A02C8: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FinalCumulativeTimeWeight' },
  0x300A02D0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyControlPointSequence' },
  0x300A02D2: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ControlPointRelativePosition' },
  0x300A02D4: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ControlPoint3DPosition' },
  0x300A02D6: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CumulativeTimeWeight' },
  0x300A02E0: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorDivergence' },
  0x300A02E1: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorMountingPosition' },
  0x300A02E2: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SourceToCompensatorDistance' },
  0x300A02E3: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalCompensatorTrayWaterEquivalentThickness' },
  0x300A02E4: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IsocenterToCompensatorTrayDistance' },
  0x300A02E5: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorColumnOffset' },
  0x300A02E6: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'IsocenterToCompensatorDistances' },
  0x300A02E7: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorRelativeStoppingPowerRatio' },
  0x300A02E8: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorMillingToolDiameter' },
  0x300A02EA: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonRangeCompensatorSequence' },
  0x300A02EB: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CompensatorDescription' },
  0x300A0302: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiationMassNumber' },
  0x300A0304: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiationAtomicNumber' },
  0x300A0306: { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RadiationChargeState' },
  0x300A0308: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScanMode' },
  0x300A030A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'VirtualSourceAxisDistances' },
  0x300A030C: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SnoutSequence' },
  0x300A030D: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SnoutPosition' },
  0x300A030F: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SnoutID' },
  0x300A0312: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfRangeShifters' },
  0x300A0314: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeShifterSequence' },
  0x300A0316: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeShifterNumber' },
  0x300A0318: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeShifterID' },
  0x300A0320: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeShifterType' },
  0x300A0322: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeShifterDescription' },
  0x300A0330: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfLateralSpreadingDevices' },
  0x300A0332: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LateralSpreadingDeviceSequence' },
  0x300A0334: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LateralSpreadingDeviceNumber' },
  0x300A0336: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LateralSpreadingDeviceID' },
  0x300A0338: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LateralSpreadingDeviceType' },
  0x300A033A: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LateralSpreadingDeviceDescription' },
  0x300A033C: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LateralSpreadingDeviceWaterEquivalentThickness' },
  0x300A0340: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfRangeModulators' },
  0x300A0342: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorSequence' },
  0x300A0344: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorNumber' },
  0x300A0346: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorID' },
  0x300A0348: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorType' },
  0x300A034A: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorDescription' },
  0x300A034C: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeamCurrentModulationID' },
  0x300A0350: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSupportType' },
  0x300A0352: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSupportID' },
  0x300A0354: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PatientSupportAccessoryCode' },
  0x300A0356: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationLightAzimuthalAngle' },
  0x300A0358: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FixationLightPolarAngle' },
  0x300A035A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MetersetRate' },
  0x300A0360: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeShifterSettingsSequence' },
  0x300A0362: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeShifterSetting' },
  0x300A0364: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IsocenterToRangeShifterDistance' },
  0x300A0366: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeShifterWaterEquivalentThickness' },
  0x300A0370: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LateralSpreadingDeviceSettingsSequence' },
  0x300A0372: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LateralSpreadingDeviceSetting' },
  0x300A0374: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IsocenterToLateralSpreadingDeviceDistance' },
  0x300A0380: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorSettingsSequence' },
  0x300A0382: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorGatingStartValue' },
  0x300A0384: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorGatingStopValue' },
  0x300A0386: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorGatingStartWaterEquivalentThickness' },
  0x300A0388: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RangeModulatorGatingStopWaterEquivalentThickness' },
  0x300A038A: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IsocenterToRangeModulatorDistance' },
  0x300A0390: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScanSpotTuneID' },
  0x300A0392: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfScanSpotPositions' },
  0x300A0394: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ScanSpotPositionMap' },
  0x300A0396: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ScanSpotMetersetWeights' },
  0x300A0398: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'ScanningSpotSize' },
  0x300A039A: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPaintings' },
  0x300A03A0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonToleranceTableSequence' },
  0x300A03A2: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonBeamSequence' },
  0x300A03A4: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonBeamLimitingDeviceSequence' },
  0x300A03A6: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonBlockSequence' },
  0x300A03A8: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonControlPointSequence' },
  0x300A03AA: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonWedgeSequence' },
  0x300A03AC: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'IonWedgePositionSequence' },
  0x300A0401: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSetupImageSequence' },
  0x300A0402: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SetupImageComment' },
  0x300A0410: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MotionSynchronizationSequence' },
  0x300A0412: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ControlPointOrientation' },
  0x300A0420: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralAccessorySequence' },
  0x300A0421: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralAccessoryID' },
  0x300A0422: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralAccessoryDescription' },
  0x300A0423: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralAccessoryType' },
  0x300A0424: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GeneralAccessoryNumber' },
  0x300A0431: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicatorGeometrySequence' },
  0x300A0432: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicatorApertureShape' },
  0x300A0433: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicatorOpening' },
  0x300A0434: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicatorOpeningX' },
  0x300A0435: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApplicatorOpeningY' },
  0x300A0436: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SourceToApplicatorMountingPositionDistance' },
  0x300C0002: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedRTPlanSequence' },
  0x300C0004: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedBeamSequence' },
  0x300C0006: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedBeamNumber' },
  0x300C0007: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedReferenceImageNumber' },
  0x300C0008: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'StartCumulativeMetersetWeight' },
  0x300C0009: { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EndCumulativeMetersetWeight' },
  0x300C000A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedBrachyApplicationSetupSequence' },
  0x300C000C: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedBrachyApplicationSetupNumber' },
  0x300C000E: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedSourceNumber' },
  0x300C0020: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedFractionGroupSequence' },
  0x300C0022: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedFractionGroupNumber' },
  0x300C0040: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedVerificationImageSequence' },
  0x300C0042: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedReferenceImageSequence' },
  0x300C0050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedDoseReferenceSequence' },
  0x300C0051: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedDoseReferenceNumber' },
  0x300C0055: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BrachyReferencedDoseReferenceSequence' },
  0x300C0060: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedStructureSetSequence' },
  0x300C006A: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedPatientSetupNumber' },
  0x300C0080: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedDoseSequence' },
  0x300C00A0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedToleranceTableNumber' },
  0x300C00B0: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedBolusSequence' },
  0x300C00C0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedWedgeNumber' },
  0x300C00D0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedCompensatorNumber' },
  0x300C00E0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedBlockNumber' },
  0x300C00F0: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedControlPointIndex' },
  0x300C00F2: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedControlPointSequence' },
  0x300C00F4: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedStartControlPointIndex' },
  0x300C00F6: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedStopControlPointIndex' },
  0x300C0100: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedRangeShifterNumber' },
  0x300C0102: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedLateralSpreadingDeviceNumber' },
  0x300C0104: { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedRangeModulatorNumber' },
  0x300E0002: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ApprovalStatus' },
  0x300E0004: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReviewDate' },
  0x300E0005: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReviewTime' },
  0x300E0008: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReviewerName' },
  0x40000010: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Arbitrary' },
  0x40004000: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TextComments' },
  0x40080040: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResultsID' },
  0x40080042: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResultsIDIssuer' },
  0x40080050: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferencedInterpretationSequence' },
  0x400800FF: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReportProductionStatusTrial' },
  0x40080100: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationRecordedDate' },
  0x40080101: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationRecordedTime' },
  0x40080102: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationRecorder' },
  0x40080103: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ReferenceToRecordedSound' },
  0x40080108: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationTranscriptionDate' },
  0x40080109: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationTranscriptionTime' },
  0x4008010A: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationTranscriber' },
  0x4008010B: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationText' },
  0x4008010C: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationAuthor' },
  0x40080111: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationApproverSequence' },
  0x40080112: { vr: 'DA',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationApprovalDate' },
  0x40080113: { vr: 'TM',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationApprovalTime' },
  0x40080114: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhysicianApprovingInterpretation' },
  0x40080115: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationDiagnosisDescription' },
  0x40080117: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationDiagnosisCodeSequence' },
  0x40080118: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResultsDistributionListSequence' },
  0x40080119: { vr: 'PN',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistributionName' },
  0x4008011A: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DistributionAddress' },
  0x40080200: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationID' },
  0x40080202: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationIDIssuer' },
  0x40080210: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationTypeID' },
  0x40080212: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InterpretationStatusID' },
  0x40080300: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Impressions' },
  0x40084000: { vr: 'ST',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ResultsComments' },
  0x40100001: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'LowEnergyDetectors' },
  0x40100002: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HighEnergyDetectors' },
  0x40100004: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorGeometrySequence' },
  0x40101001: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ThreatROIVoxelSequence' },
  0x40101004: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ThreatROIBase' },
  0x40101005: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ThreatROIExtents' },
  0x40101006: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ThreatROIBitmap' },
  0x40101007: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteSegmentID' },
  0x40101008: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'GantryType' },
  0x40101009: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OOIOwnerType' },
  0x4010100A: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteSegmentSequence' },
  0x40101010: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PotentialThreatObjectID' },
  0x40101011: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ThreatSequence' },
  0x40101012: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ThreatCategory' },
  0x40101013: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ThreatCategoryDescription' },
  0x40101014: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ATDAbilityAssessment' },
  0x40101015: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ATDAssessmentFlag' },
  0x40101016: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ATDAssessmentProbability' },
  0x40101017: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Mass' },
  0x40101018: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Density' },
  0x40101019: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ZEffective' },
  0x4010101A: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BoardingPassID' },
  0x4010101B: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'CenterOfMass' },
  0x4010101C: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'CenterOfPTO' },
  0x4010101D: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_6N,
    keyword: 'BoundingPolygon' },
  0x4010101E: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteSegmentStartLocationID' },
  0x4010101F: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteSegmentEndLocationID' },
  0x40101020: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteSegmentLocationIDType' },
  0x40101021: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'AbortReason' },
  0x40101023: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VolumeOfPTO' },
  0x40101024: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AbortFlag' },
  0x40101025: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteSegmentStartTime' },
  0x40101026: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteSegmentEndTime' },
  0x40101027: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TDRType' },
  0x40101028: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InternationalRouteSegment' },
  0x40101029: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ThreatDetectionAlgorithmandVersion' },
  0x4010102A: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AssignedLocation' },
  0x4010102B: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlarmDecisionTime' },
  0x40101031: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlarmDecision' },
  0x40101033: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTotalObjects' },
  0x40101034: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfAlarmObjects' },
  0x40101037: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PTORepresentationSequence' },
  0x40101038: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ATDAssessmentSequence' },
  0x40101039: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TIPType' },
  0x4010103A: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DICOSVersion' },
  0x40101041: { vr: 'DT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OOIOwnerCreationTime' },
  0x40101042: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OOIType' },
  0x40101043: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'OOISize' },
  0x40101044: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AcquisitionStatus' },
  0x40101045: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BasisMaterialsCodeSequence' },
  0x40101046: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PhantomType' },
  0x40101047: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OOIOwnerSequence' },
  0x40101048: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ScanType' },
  0x40101051: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ItineraryID' },
  0x40101052: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ItineraryIDType' },
  0x40101053: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ItineraryIDAssigningAuthority' },
  0x40101054: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteID' },
  0x40101055: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RouteIDAssigningAuthority' },
  0x40101056: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'InboundArrivalType' },
  0x40101058: { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CarrierID' },
  0x40101059: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CarrierIDAssigningAuthority' },
  0x40101060: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'SourceOrientation' },
  0x40101061: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'SourcePosition' },
  0x40101062: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BeltHeight' },
  0x40101064: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AlgorithmRoutingCodeSequence' },
  0x40101067: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TransportClassification' },
  0x40101068: { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OOITypeDescriptor' },
  0x40101069: { vr: 'FL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalProcessingTime' },
  0x4010106C: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DetectorCalibrationData' },
  0x4FFE0001: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MACParametersSequence' },
  0x52009229: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SharedFunctionalGroupsSequence' },
  0x52009230: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PerFrameFunctionalGroupsSequence' },
  0x54000100: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformSequence' },
  0x54000110: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelMinimumValue' },
  0x54000112: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ChannelMaximumValue' },
  0x54001004: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformBitsAllocated' },
  0x54001006: { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformSampleInterpretation' },
  0x5400100A: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformPaddingValue' },
  0x54001010: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'WaveformData' },
  0x56000010: { vr: 'OF',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'FirstOrderPhaseCorrectionAngle' },
  0x56000020: { vr: 'OF',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SpectroscopyData' },
  0x7FE00010: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'PixelData' },
  0x7FE00020: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoefficientsSDVN' },
  0x7FE00030: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoefficientsSDHN' },
  0x7FE00040: { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CoefficientsSDDN' },
  0xFFFAFFFA: { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DigitalSignaturesSequence' },
  0xFFFCFFFC: { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataSetTrailingPadding' },
  0xFFFEE000: { vr: null,
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Item' },
  0xFFFEE00D: { vr: null,
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ItemDelimitationItem' },
  0xFFFEE0DD: { vr: null,
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SequenceDelimitationItem' },
  0x00000000: { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CommandGroupLength' },
  0x00000002: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AffectedSOPClassUID' },
  0x00000003: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedSOPClassUID' },
  0x00000100: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CommandField' },
  0x00000110: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MessageID' },
  0x00000120: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MessageIDBeingRespondedTo' },
  0x00000600: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MoveDestination' },
  0x00000700: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Priority' },
  0x00000800: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CommandDataSetType' },
  0x00000900: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'Status' },
  0x00000901: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OffendingElement' },
  0x00000902: { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ErrorComment' },
  0x00000903: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ErrorID' },
  0x00001000: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AffectedSOPInstanceUID' },
  0x00001001: { vr: 'UI',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RequestedSOPInstanceUID' },
  0x00001002: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'EventTypeID' },
  0x00001005: { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'AttributeIdentifierList' },
  0x00001008: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ActionTypeID' },
  0x00001020: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfRemainingSuboperations' },
  0x00001021: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfCompletedSuboperations' },
  0x00001022: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFailedSuboperations' },
  0x00001023: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfWarningSuboperations' },
  0x00001030: { vr: 'AE',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MoveOriginatorApplicationEntityTitle' },
  0x00001031: { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'MoveOriginatorMessageID' }
};

const dicomVDict = {
  '002031xx': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'SourceImageIDs' },
  '002804x0': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'RowsForNthOrderCoefficients' },
  '002804x1': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ColumnsForNthOrderCoefficients' },
  '002804x2': { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CoefficientCoding' },
  '002804x3': { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CoefficientCodingPointers' },
  '002808x0': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CodeLabel' },
  '002808x2': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfTables' },
  '002808x3': { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CodeTableLocation' },
  '002808x4': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'BitsForCodeWord' },
  '002808x8': { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ImageDataLocation' },
  '1000xxx0': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'EscapeTriplet' },
  '1000xxx1': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'RunLengthTriplet' },
  '1000xxx2': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'HuffmanTableSize' },
  '1000xxx3': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'HuffmanTableTriplet' },
  '1000xxx4': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ShiftTableSize' },
  '1000xxx5': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_THREE,
    keyword: 'ShiftTableTriplet' },
  '1010xxxx': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'ZonalMap' },
  '50xx0005': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveDimensions' },
  '50xx0010': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfPoints' },
  '50xx0020': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TypeOfData' },
  '50xx0022': { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveDescription' },
  '50xx0030': { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'AxisUnits' },
  '50xx0040': { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'AxisLabels' },
  '50xx0103': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'DataValueRepresentation' },
  '50xx0104': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MinimumCoordinateValue' },
  '50xx0105': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'MaximumCoordinateValue' },
  '50xx0106': { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CurveRange' },
  '50xx0110': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CurveDataDescriptor' },
  '50xx0112': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CoordinateStartValue' },
  '50xx0114': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'CoordinateStepValue' },
  '50xx1001': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveActivationLayer' },
  '50xx2000': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AudioType' },
  '50xx2002': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AudioSampleFormat' },
  '50xx2004': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfChannels' },
  '50xx2006': { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfSamples' },
  '50xx2008': { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'SampleRate' },
  '50xx200A': { vr: 'UL',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'TotalTime' },
  '50xx200C': { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AudioSampleData' },
  '50xx200E': { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'AudioComments' },
  '50xx2500': { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveLabel' },
  '50xx2600': { vr: 'SQ',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveReferencedOverlaySequence' },
  '50xx2610': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveReferencedOverlayGroup' },
  '50xx3000': { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'CurveData' },
  '60xx0010': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayRows' },
  '60xx0011': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayColumns' },
  '60xx0012': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayPlanes' },
  '60xx0015': { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'NumberOfFramesInOverlay' },
  '60xx0022': { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayDescription' },
  '60xx0040': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayType' },
  '60xx0045': { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlaySubtype' },
  '60xx0050': { vr: 'SS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_TWO,
    keyword: 'OverlayOrigin' },
  '60xx0051': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ImageFrameOrigin' },
  '60xx0052': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayPlaneOrigin' },
  '60xx0060': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayCompressionCode' },
  '60xx0061': { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayCompressionOriginator' },
  '60xx0062': { vr: 'SH',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayCompressionLabel' },
  '60xx0063': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayCompressionDescription' },
  '60xx0066': { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OverlayCompressionStepPointers' },
  '60xx0068': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayRepeatInterval' },
  '60xx0069': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayBitsGrouped' },
  '60xx0100': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayBitsAllocated' },
  '60xx0102': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayBitPosition' },
  '60xx0110': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayFormat' },
  '60xx0200': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayLocation' },
  '60xx0800': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OverlayCodeLabel' },
  '60xx0802': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayNumberOfTables' },
  '60xx0803': { vr: 'AT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OverlayCodeTableLocation' },
  '60xx0804': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayBitsForCodeWord' },
  '60xx1001': { vr: 'CS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayActivationLayer' },
  '60xx1100': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayDescriptorGray' },
  '60xx1101': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayDescriptorRed' },
  '60xx1102': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayDescriptorGreen' },
  '60xx1103': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayDescriptorBlue' },
  '60xx1200': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OverlaysGray' },
  '60xx1201': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OverlaysRed' },
  '60xx1202': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OverlaysGreen' },
  '60xx1203': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_1N,
    keyword: 'OverlaysBlue' },
  '60xx1301': { vr: 'IS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIArea' },
  '60xx1302': { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIMean' },
  '60xx1303': { vr: 'DS',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'ROIStandardDeviation' },
  '60xx1500': { vr: 'LO',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayLabel' },
  '60xx3000': { vr: 'OB',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayData' },
  '60xx4000': { vr: 'LT',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'OverlayComments' },
  '7Fxx0010': { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VariablePixelData' },
  '7Fxx0011': { vr: 'US',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VariableNextDataGroup' },
  '7Fxx0020': { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VariableCoefficientsSDVN' },
  '7Fxx0030': { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VariableCoefficientsSDHN' },
  '7Fxx0040': { vr: 'OW',
    vm: _constants_js__WEBPACK_IMPORTED_MODULE_0__["default"].VM_SINGLE,
    keyword: 'VariableCoefficientsSDDN' }
};




/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Connection_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Connection.js */ "./Connection.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ "./constants.js");



const DIMSE = {
  connection: new _Connection_js__WEBPACK_IMPORTED_MODULE_0__["default"]({
    vr: {
      split: false
    }
  })
};

const conn = DIMSE.connection;

DIMSE.associate = function (contexts, callback, options) {
  const defaults = {
    contexts
  };

  options = Object.assign(defaults, options);

  console.info('Associating...');

  const socket = conn.associate(options, function (pdu) {
    // Associated
    console.info('==Associated');
    callback.call(this, null, pdu);
  });

  socket.on('error', function (error) {
    callback(error, null);
  });

  socket.on('timeout', function (error) {
    callback(error, null);
  });
};

DIMSE.retrievePatients = async function (params, options) {
  return await new Promise((resolve) => {
    DIMSE.associate([_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].SOP_PATIENT_ROOT_FIND], function (error, pdu) {
      if (error) {
        console.error('Could not retrieve patients');
        console.trace();

        return resolve([]);
      }

      const defaultParams = {
        0x00100010: '',
        0x00100020: '',
        0x00100030: '',
        0x00100040: '',
        0x00101010: '',
        0x00101040: ''
      };

      const result = this.findPatients(Object.assign(defaultParams, params));
      const self = this;
      const patients = [];

      result.on('result', function (msg) {
        patients.push(msg);
      });

      result.on('end', function () {
        self.release();
      });

      this.on('close', function () {
        // Time = new Date() - start;console.log(time + 'ms taken');
        resolve(patients);
      });
    }, options);
  });
};

DIMSE.retrieveStudies = async function (params, options) {
  // Start = new Date();
  return await new Promise((resolve, reject) => {
    DIMSE.associate([_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].SOP_STUDY_ROOT_FIND], function (error, pdu) {
      if (error) {
        console.error('Could not retrieve studies');
        console.trace();

        return reject(error);
      }

      const defaultParams = {
        0x0020000D: '',
        0x00080060: '',
        0x00080005: '',
        0x00080020: '',
        0x00080030: '',
        0x00080090: '',
        0x00100010: '',
        0x00100020: '',
        0x00200010: '',
        0x00100030: ''
      };

      const result = this.findStudies(Object.assign(defaultParams, params));
      const studies = [];
      const self = this;

      result.on('result', function (msg) {
        studies.push(msg);
      });

      result.on('end', function () {
        self.release();
      });

      this.on('close', function () {
        // Time = new Date() - start;console.log(time + 'ms taken');
        resolve(studies);
      });
    }, options);
  });
};

DIMSE._retrieveInstancesBySeries = function (conn, series, studyInstanceUID, callback, params) {
  const aSeries = series.shift();
  const seriesInstanceUID = aSeries.getValue(0x0020000E);
  const defaultParams = getInstanceRetrievalParams(studyInstanceUID, seriesInstanceUID);
  const result = conn.findInstances(Object.assign(defaultParams, params));
  const instances = [];

  result.on('result', function (msg) {
    instances.push(msg);
  });
  result.on('end', function () {
    if (series.length > 0) {
      callback(instances, false);
      DIMSE._retrieveInstancesBySeries(conn, series, studyInstanceUID, callback, params);
    } else {
      callback(instances, true);
    }
  });
};

DIMSE.retrieveInstancesByStudyOnlyMulti = function (studyInstanceUID, params, options) {
  if (!studyInstanceUID) {
    return [];
  }

  const series = DIMSE.retrieveSeries(studyInstanceUID, params, options);
  let instances = [];

  series.forEach(function (seriesData) {
    const seriesInstanceUID = seriesData.getValue(0x0020000E);
    const relatedInstances = DIMSE.retrieveInstances(studyInstanceUID, seriesInstanceUID, params, options);

    instances = instances.concat(relatedInstances);
  });

  return instances;
};

DIMSE.retrieveInstancesByStudyOnly = async function (studyInstanceUID, params, options) {
  if (!studyInstanceUID) {
    return Promise.resolve([]);
  }

  return await new Promise((resolve, reject) => {
    DIMSE.associate([_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].SOP_STUDY_ROOT_FIND], function (error, pdu) {
      if (error) {
        console.error('Could not retrieve Instances By Study');
        console.trace();

        return reject(error);
      }

      const defaultParams = {
        0x0020000D: studyInstanceUID,
        0x00080005: '',
        0x00080020: '',
        0x00080030: '',
        0x00080090: '',
        0x00100010: '',
        0x00100020: '',
        0x00200010: '',
        0x0008103E: '',
        0x0020000E: '',
        0x00200011: ''
      };
      const result = this.findSeries(Object.assign(defaultParams, params));
      const series = [];
      const conn = this;
      let allInstances = [];

      result.on('result', function (msg) {
        series.push(msg);
      });
      result.on('end', function () {
        if (series.length > 0) {
          DIMSE._retrieveInstancesBySeries(conn, series, studyInstanceUID, function (relatedInstances, isEnd) {
            allInstances = allInstances.concat(relatedInstances);
            if (isEnd) {
              conn.release();
            }
          });
        } else {
          conn.release();
        }
      });
      conn.on('close', function () {
        resolve(allInstances);
      });
    });
  });
};

DIMSE.retrieveSeries = async function (studyInstanceUID, params, options) {
  return await new Promise((resolve) => {
    DIMSE.associate([_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].SOP_STUDY_ROOT_FIND], function (error, pdu) {
      if (error) {
        console.error('Could not retrieve series');
        console.trace();

        return resolve([]);
      }

      const defaultParams = {
        0x0020000D: studyInstanceUID ? studyInstanceUID : '',
        0x00080005: '',
        0x00080020: '',
        0x00080030: '',
        0x00080090: '',
        0x00100010: '',
        0x00100020: '',
        0x00200010: '',
        0x0008103E: '',
        0x0020000E: '',
        0x00200011: ''
      };

      const result = this.findSeries(Object.assign(defaultParams, params));
      const self = this;
      const series = [];

      result.on('result', function (msg) {
        series.push(msg);
      });

      result.on('end', function () {
        self.release();
      });

      this.on('close', function () {
        resolve(series);
      });
    }, options);
  });
};

DIMSE.retrieveInstances = async function (studyInstanceUID, seriesInstanceUID, params, options) {
  return await new Promise((resolve, reject) => {
    DIMSE.associate([_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].SOP_STUDY_ROOT_FIND], function (error, pdu) {
      if (error) {
        console.error('Could not retrieve instances');
        console.trace();

        return reject(error);
      }

      const defaultParams = getInstanceRetrievalParams(studyInstanceUID, seriesInstanceUID);
      const result = this.findInstances(Object.assign(defaultParams, params));
      const self = this;

      const instances = [];

      result.on('result', function (msg) {
        instances.push(msg);
      });

      result.on('end', function () {
        self.release();
      });

      this.on('close', function () {
        resolve(instances);
      });
    }, options);
  });
};

DIMSE.storeInstances = function (fileList, callback) {
  const handle = conn.storeInstances(fileList);

  handle.on('file', function (err, file) {
    callback(err, file);
  });
};

DIMSE.moveInstances = async function (studyInstanceUID, seriesInstanceUID, sopInstanceUID, sopClassUID, params) {
  DIMSE.associate([_constants_js__WEBPACK_IMPORTED_MODULE_1__["default"].SOP_STUDY_ROOT_MOVE, sopClassUID], function (error) {
    if (error) {
      console.error('Could not move instances');
      console.trace();

      return;
    }

    const defaultParams = {
      0x0020000D: studyInstanceUID ? studyInstanceUID : '',
      0x0020000E: seriesInstanceUID ? seriesInstanceUID : '',
      0x00080018: sopInstanceUID ? sopInstanceUID : ''
    };

    this.moveInstances('OHIFDCM', Object.assign(defaultParams, params));
  });
};

const getInstanceRetrievalParams = (studyInstanceUID, seriesInstanceUID) => ({
  0x0020000D: studyInstanceUID ? studyInstanceUID : '',
  0x0020000E: (studyInstanceUID && seriesInstanceUID) ? seriesInstanceUID : '',
  0x00080005: '', // SpecificCharacterSet
  0x00080020: '', // StudyDate
  0x00080030: '', // StudyDescription
  0x00080090: '', // ReferringPhysicianName
  0x00100010: '', // PatientName
  0x00100020: '', // PatientId
  0x00100030: '', // PatientBirthDate
  0x00100040: '', // PatientSex
  0x00200010: '', // StudyId
  0x0008103E: '', // SeriesDescription
  0x00200011: '', // SeriesNumber
  0x00080080: '', // InstitutionName
  0x00080016: '', // SopClassUid
  0x00080018: '', // SopInstanceUid
  0x00080060: '', // Modality
  0x00200013: '', // InstanceNumber
  0x00280010: '', // Rows
  0x00280011: '', // Columns
  0x00280100: '', // BitsAllocated
  0x00280101: '', // BitsStored
  0x00280102: '', // HighBit
  0x00280103: '', // PixelRepresentation
  0x00280004: '', // PhotometricInterpretation
  0x0008002A: '', // AcquisitionDatetime
  0x00280008: '', // NumFrames
  // 0x00280009: '', // frameIncrementPointer // This appears to be breaking Orthanc DIMSE connections
  0x00181063: '', // FrameTime
  0x00181065: '', // FrameTimeVector
  0x00281052: '', // RescaleIntercept
  0x00281053: '', // RescaleSlope
  0x00280002: '', // SamplesPerPixel
  0x00180050: '', // SliceThickness
  0x00201041: '', // SliceLocation
  // 0x00189327: '', // tablePosition // This appears to be breaking Orthanc DIMSE connections
  0x00281050: '', // WindowCenter
  0x00281051: '', // WindowWidth
  0x00280030: '', // PixelSpacing
  0x00200062: '', // Laterality
  0x00185101: '', // ViewPosition
  0x00080008: '', // ImageType
  0x00200032: '', // ImagePositionPatient
  0x00200037: '', // ImageOrientationPatient
  0x00200052: '', // FrameOfReferenceUID
  0x00282110: '', // LossyImageCompression
  0x00282112: '', // LossyImageCompressionRatio
  0x00282114: '', // LossyImageCompressionMethod,
  0x00180088: '' // SpacingBetweenSlices

  // Orthanc has a bug here so we can't retrieve sequences at the moment
  // https://groups.google.com/forum/#!topic/orthanc-users/ghKJfvtnK8Y
  // 0x00282111: '', // derivationDescription
  // 0x00082112: ''  // sourceImageSequence
});

/* harmony default export */ __webpack_exports__["default"] = (DIMSE);


/***/ }),

/***/ "./require.js":
/*!********************!*\
  !*** ./require.js ***!
  \********************/
/*! exports provided: quitWithError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quitWithError", function() { return quitWithError; });
const quitWithError = function (message, callback) {
  return callback(new Error(message), null);
};




/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("net");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ })

/******/ });
});
//# sourceMappingURL=DIMSE.js.map